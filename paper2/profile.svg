<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1274" onload="init(evt)" viewBox="0 0 1200 1274" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1274" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">/home/dominic/Desktop/optGME/optenv/bin/py-spy record -o profile.svg -- /home/dominic/Desktop/optGME/optenv/bin/python3 timetester.py</text><text id="details" fill="rgb(0,0,0)" x="10" y="40.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1263.00"> </text><svg id="frames" x="10" width="1180" total_samples="72565"><g><title>__init__ (matplotlib/_afm.py:363) (155 samples, 0.21%)</title><rect x="0.0786%" y="996" width="0.2136%" height="15" fill="rgb(227,0,7)" fg:x="57" fg:w="155"/><text x="0.3286%" y="1006.50"></text></g><g><title>_parse_kern_pairs (matplotlib/_afm.py:267) (74 samples, 0.10%)</title><rect x="0.3611%" y="1028" width="0.1020%" height="15" fill="rgb(217,0,24)" fg:x="262" fg:w="74"/><text x="0.6111%" y="1038.50"></text></g><g><title>addfont (matplotlib/font_manager.py:1132) (297 samples, 0.41%)</title><rect x="0.0744%" y="980" width="0.4093%" height="15" fill="rgb(221,193,54)" fg:x="54" fg:w="297"/><text x="0.3244%" y="990.50"></text></g><g><title>__init__ (matplotlib/_afm.py:364) (139 samples, 0.19%)</title><rect x="0.2922%" y="996" width="0.1916%" height="15" fill="rgb(248,212,6)" fg:x="212" fg:w="139"/><text x="0.5422%" y="1006.50"></text></g><g><title>_parse_optional (matplotlib/_afm.py:353) (138 samples, 0.19%)</title><rect x="0.2935%" y="1012" width="0.1902%" height="15" fill="rgb(208,68,35)" fg:x="213" fg:w="138"/><text x="0.5435%" y="1022.50"></text></g><g><title>_load_fontmanager (matplotlib/font_manager.py:1637) (358 samples, 0.49%)</title><rect x="0.0317%" y="948" width="0.4934%" height="15" fill="rgb(232,128,0)" fg:x="23" fg:w="358"/><text x="0.2817%" y="958.50"></text></g><g><title>__init__ (matplotlib/font_manager.py:1103) (346 samples, 0.48%)</title><rect x="0.0482%" y="964" width="0.4768%" height="15" fill="rgb(207,160,47)" fg:x="35" fg:w="346"/><text x="0.2982%" y="974.50"></text></g><g><title>&lt;module&gt; (matplotlib/font_manager.py:1643) (370 samples, 0.51%)</title><rect x="0.0317%" y="932" width="0.5099%" height="15" fill="rgb(228,23,34)" fg:x="23" fg:w="370"/><text x="0.2817%" y="942.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py:16) (373 samples, 0.51%)</title><rect x="0.0317%" y="836" width="0.5140%" height="15" fill="rgb(218,30,26)" fg:x="23" fg:w="373"/><text x="0.2817%" y="846.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (373 samples, 0.51%)</title><rect x="0.0317%" y="852" width="0.5140%" height="15" fill="rgb(220,122,19)" fg:x="23" fg:w="373"/><text x="0.2817%" y="862.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (373 samples, 0.51%)</title><rect x="0.0317%" y="868" width="0.5140%" height="15" fill="rgb(250,228,42)" fg:x="23" fg:w="373"/><text x="0.2817%" y="878.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (373 samples, 0.51%)</title><rect x="0.0317%" y="884" width="0.5140%" height="15" fill="rgb(240,193,28)" fg:x="23" fg:w="373"/><text x="0.2817%" y="894.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (373 samples, 0.51%)</title><rect x="0.0317%" y="900" width="0.5140%" height="15" fill="rgb(216,20,37)" fg:x="23" fg:w="373"/><text x="0.2817%" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (373 samples, 0.51%)</title><rect x="0.0317%" y="916" width="0.5140%" height="15" fill="rgb(206,188,39)" fg:x="23" fg:w="373"/><text x="0.2817%" y="926.50"></text></g><g><title>&lt;module&gt; (matplotlib/backend_bases.py:49) (402 samples, 0.55%)</title><rect x="0.0303%" y="708" width="0.5540%" height="15" fill="rgb(217,207,13)" fg:x="22" fg:w="402"/><text x="0.2803%" y="718.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (402 samples, 0.55%)</title><rect x="0.0303%" y="724" width="0.5540%" height="15" fill="rgb(231,73,38)" fg:x="22" fg:w="402"/><text x="0.2803%" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (402 samples, 0.55%)</title><rect x="0.0303%" y="740" width="0.5540%" height="15" fill="rgb(225,20,46)" fg:x="22" fg:w="402"/><text x="0.2803%" y="750.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (402 samples, 0.55%)</title><rect x="0.0303%" y="756" width="0.5540%" height="15" fill="rgb(210,31,41)" fg:x="22" fg:w="402"/><text x="0.2803%" y="766.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (402 samples, 0.55%)</title><rect x="0.0303%" y="772" width="0.5540%" height="15" fill="rgb(221,200,47)" fg:x="22" fg:w="402"/><text x="0.2803%" y="782.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (402 samples, 0.55%)</title><rect x="0.0303%" y="788" width="0.5540%" height="15" fill="rgb(226,26,5)" fg:x="22" fg:w="402"/><text x="0.2803%" y="798.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (401 samples, 0.55%)</title><rect x="0.0317%" y="804" width="0.5526%" height="15" fill="rgb(249,33,26)" fg:x="23" fg:w="401"/><text x="0.2817%" y="814.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (401 samples, 0.55%)</title><rect x="0.0317%" y="820" width="0.5526%" height="15" fill="rgb(235,183,28)" fg:x="23" fg:w="401"/><text x="0.2817%" y="830.50"></text></g><g><title>&lt;module&gt; (matplotlib/contour.py:15) (404 samples, 0.56%)</title><rect x="0.0289%" y="612" width="0.5567%" height="15" fill="rgb(221,5,38)" fg:x="21" fg:w="404"/><text x="0.2789%" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (404 samples, 0.56%)</title><rect x="0.0289%" y="628" width="0.5567%" height="15" fill="rgb(247,18,42)" fg:x="21" fg:w="404"/><text x="0.2789%" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (404 samples, 0.56%)</title><rect x="0.0289%" y="644" width="0.5567%" height="15" fill="rgb(241,131,45)" fg:x="21" fg:w="404"/><text x="0.2789%" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (404 samples, 0.56%)</title><rect x="0.0289%" y="660" width="0.5567%" height="15" fill="rgb(249,31,29)" fg:x="21" fg:w="404"/><text x="0.2789%" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (404 samples, 0.56%)</title><rect x="0.0289%" y="676" width="0.5567%" height="15" fill="rgb(225,111,53)" fg:x="21" fg:w="404"/><text x="0.2789%" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (404 samples, 0.56%)</title><rect x="0.0289%" y="692" width="0.5567%" height="15" fill="rgb(238,160,17)" fg:x="21" fg:w="404"/><text x="0.2789%" y="702.50"></text></g><g><title>&lt;module&gt; (matplotlib/colorbar.py:19) (412 samples, 0.57%)</title><rect x="0.0207%" y="484" width="0.5678%" height="15" fill="rgb(214,148,48)" fg:x="15" fg:w="412"/><text x="0.2707%" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (412 samples, 0.57%)</title><rect x="0.0207%" y="500" width="0.5678%" height="15" fill="rgb(232,36,49)" fg:x="15" fg:w="412"/><text x="0.2707%" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (412 samples, 0.57%)</title><rect x="0.0207%" y="516" width="0.5678%" height="15" fill="rgb(209,103,24)" fg:x="15" fg:w="412"/><text x="0.2707%" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (412 samples, 0.57%)</title><rect x="0.0207%" y="532" width="0.5678%" height="15" fill="rgb(229,88,8)" fg:x="15" fg:w="412"/><text x="0.2707%" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (412 samples, 0.57%)</title><rect x="0.0207%" y="548" width="0.5678%" height="15" fill="rgb(213,181,19)" fg:x="15" fg:w="412"/><text x="0.2707%" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (412 samples, 0.57%)</title><rect x="0.0207%" y="564" width="0.5678%" height="15" fill="rgb(254,191,54)" fg:x="15" fg:w="412"/><text x="0.2707%" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (411 samples, 0.57%)</title><rect x="0.0220%" y="580" width="0.5664%" height="15" fill="rgb(241,83,37)" fg:x="16" fg:w="411"/><text x="0.2720%" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (411 samples, 0.57%)</title><rect x="0.0220%" y="596" width="0.5664%" height="15" fill="rgb(233,36,39)" fg:x="16" fg:w="411"/><text x="0.2720%" y="606.50"></text></g><g><title>&lt;module&gt; (matplotlib/pyplot.py:57) (416 samples, 0.57%)</title><rect x="0.0179%" y="388" width="0.5733%" height="15" fill="rgb(226,3,54)" fg:x="13" fg:w="416"/><text x="0.2679%" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (416 samples, 0.57%)</title><rect x="0.0179%" y="404" width="0.5733%" height="15" fill="rgb(245,192,40)" fg:x="13" fg:w="416"/><text x="0.2679%" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (416 samples, 0.57%)</title><rect x="0.0179%" y="420" width="0.5733%" height="15" fill="rgb(238,167,29)" fg:x="13" fg:w="416"/><text x="0.2679%" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (416 samples, 0.57%)</title><rect x="0.0179%" y="436" width="0.5733%" height="15" fill="rgb(232,182,51)" fg:x="13" fg:w="416"/><text x="0.2679%" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (416 samples, 0.57%)</title><rect x="0.0179%" y="452" width="0.5733%" height="15" fill="rgb(231,60,39)" fg:x="13" fg:w="416"/><text x="0.2679%" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (416 samples, 0.57%)</title><rect x="0.0179%" y="468" width="0.5733%" height="15" fill="rgb(208,69,12)" fg:x="13" fg:w="416"/><text x="0.2679%" y="478.50"></text></g><g><title>&lt;module&gt; (legume/viz.py:1) (513 samples, 0.71%)</title><rect x="0.0028%" y="292" width="0.7070%" height="15" fill="rgb(235,93,37)" fg:x="2" fg:w="513"/><text x="0.2528%" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (513 samples, 0.71%)</title><rect x="0.0028%" y="308" width="0.7070%" height="15" fill="rgb(213,116,39)" fg:x="2" fg:w="513"/><text x="0.2528%" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (513 samples, 0.71%)</title><rect x="0.0028%" y="324" width="0.7070%" height="15" fill="rgb(222,207,29)" fg:x="2" fg:w="513"/><text x="0.2528%" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (513 samples, 0.71%)</title><rect x="0.0028%" y="340" width="0.7070%" height="15" fill="rgb(206,96,30)" fg:x="2" fg:w="513"/><text x="0.2528%" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (513 samples, 0.71%)</title><rect x="0.0028%" y="356" width="0.7070%" height="15" fill="rgb(218,138,4)" fg:x="2" fg:w="513"/><text x="0.2528%" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (513 samples, 0.71%)</title><rect x="0.0028%" y="372" width="0.7070%" height="15" fill="rgb(250,191,14)" fg:x="2" fg:w="513"/><text x="0.2528%" y="382.50"></text></g><g><title>&lt;module&gt; (legume/__init__.py:10) (516 samples, 0.71%)</title><rect x="0.0028%" y="164" width="0.7111%" height="15" fill="rgb(239,60,40)" fg:x="2" fg:w="516"/><text x="0.2528%" y="174.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (516 samples, 0.71%)</title><rect x="0.0028%" y="180" width="0.7111%" height="15" fill="rgb(206,27,48)" fg:x="2" fg:w="516"/><text x="0.2528%" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (516 samples, 0.71%)</title><rect x="0.0028%" y="196" width="0.7111%" height="15" fill="rgb(225,35,8)" fg:x="2" fg:w="516"/><text x="0.2528%" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (516 samples, 0.71%)</title><rect x="0.0028%" y="212" width="0.7111%" height="15" fill="rgb(250,213,24)" fg:x="2" fg:w="516"/><text x="0.2528%" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (516 samples, 0.71%)</title><rect x="0.0028%" y="228" width="0.7111%" height="15" fill="rgb(247,123,22)" fg:x="2" fg:w="516"/><text x="0.2528%" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (516 samples, 0.71%)</title><rect x="0.0028%" y="244" width="0.7111%" height="15" fill="rgb(231,138,38)" fg:x="2" fg:w="516"/><text x="0.2528%" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (516 samples, 0.71%)</title><rect x="0.0028%" y="260" width="0.7111%" height="15" fill="rgb(231,145,46)" fg:x="2" fg:w="516"/><text x="0.2528%" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (516 samples, 0.71%)</title><rect x="0.0028%" y="276" width="0.7111%" height="15" fill="rgb(251,118,11)" fg:x="2" fg:w="516"/><text x="0.2528%" y="286.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (75 samples, 0.10%)</title><rect x="0.9054%" y="1140" width="0.1034%" height="15" fill="rgb(217,147,25)" fg:x="657" fg:w="75"/><text x="1.1554%" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (75 samples, 0.10%)</title><rect x="0.9054%" y="1156" width="0.1034%" height="15" fill="rgb(247,81,37)" fg:x="657" fg:w="75"/><text x="1.1554%" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (75 samples, 0.10%)</title><rect x="0.9054%" y="1172" width="0.1034%" height="15" fill="rgb(209,12,38)" fg:x="657" fg:w="75"/><text x="1.1554%" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (75 samples, 0.10%)</title><rect x="0.9054%" y="1188" width="0.1034%" height="15" fill="rgb(227,1,9)" fg:x="657" fg:w="75"/><text x="1.1554%" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (75 samples, 0.10%)</title><rect x="0.9054%" y="1204" width="0.1034%" height="15" fill="rgb(248,47,43)" fg:x="657" fg:w="75"/><text x="1.1554%" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (73 samples, 0.10%)</title><rect x="0.9082%" y="1220" width="0.1006%" height="15" fill="rgb(221,10,30)" fg:x="659" fg:w="73"/><text x="1.1582%" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (73 samples, 0.10%)</title><rect x="0.9082%" y="1236" width="0.1006%" height="15" fill="rgb(210,229,1)" fg:x="659" fg:w="73"/><text x="1.1582%" y="1246.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:10) (76 samples, 0.10%)</title><rect x="0.9054%" y="1124" width="0.1047%" height="15" fill="rgb(222,148,37)" fg:x="657" fg:w="76"/><text x="1.1554%" y="1134.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_stats_py.py:52) (99 samples, 0.14%)</title><rect x="0.9054%" y="996" width="0.1364%" height="15" fill="rgb(234,67,33)" fg:x="657" fg:w="99"/><text x="1.1554%" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (99 samples, 0.14%)</title><rect x="0.9054%" y="1012" width="0.1364%" height="15" fill="rgb(247,98,35)" fg:x="657" fg:w="99"/><text x="1.1554%" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (99 samples, 0.14%)</title><rect x="0.9054%" y="1028" width="0.1364%" height="15" fill="rgb(247,138,52)" fg:x="657" fg:w="99"/><text x="1.1554%" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (99 samples, 0.14%)</title><rect x="0.9054%" y="1044" width="0.1364%" height="15" fill="rgb(213,79,30)" fg:x="657" fg:w="99"/><text x="1.1554%" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (99 samples, 0.14%)</title><rect x="0.9054%" y="1060" width="0.1364%" height="15" fill="rgb(246,177,23)" fg:x="657" fg:w="99"/><text x="1.1554%" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (99 samples, 0.14%)</title><rect x="0.9054%" y="1076" width="0.1364%" height="15" fill="rgb(230,62,27)" fg:x="657" fg:w="99"/><text x="1.1554%" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (99 samples, 0.14%)</title><rect x="0.9054%" y="1092" width="0.1364%" height="15" fill="rgb(216,154,8)" fg:x="657" fg:w="99"/><text x="1.1554%" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (99 samples, 0.14%)</title><rect x="0.9054%" y="1108" width="0.1364%" height="15" fill="rgb(244,35,45)" fg:x="657" fg:w="99"/><text x="1.1554%" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:624) (131 samples, 0.18%)</title><rect x="0.8875%" y="900" width="0.1805%" height="15" fill="rgb(251,115,12)" fg:x="644" fg:w="131"/><text x="1.1375%" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (131 samples, 0.18%)</title><rect x="0.8875%" y="916" width="0.1805%" height="15" fill="rgb(240,54,50)" fg:x="644" fg:w="131"/><text x="1.1375%" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (131 samples, 0.18%)</title><rect x="0.8875%" y="932" width="0.1805%" height="15" fill="rgb(233,84,52)" fg:x="644" fg:w="131"/><text x="1.1375%" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (131 samples, 0.18%)</title><rect x="0.8875%" y="948" width="0.1805%" height="15" fill="rgb(207,117,47)" fg:x="644" fg:w="131"/><text x="1.1375%" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (130 samples, 0.18%)</title><rect x="0.8889%" y="964" width="0.1791%" height="15" fill="rgb(249,43,39)" fg:x="645" fg:w="130"/><text x="1.1389%" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (130 samples, 0.18%)</title><rect x="0.8889%" y="980" width="0.1791%" height="15" fill="rgb(209,38,44)" fg:x="645" fg:w="130"/><text x="1.1389%" y="990.50"></text></g><g><title>&lt;module&gt; (autograd/scipy/stats/__init__.py:2) (159 samples, 0.22%)</title><rect x="0.8861%" y="676" width="0.2191%" height="15" fill="rgb(236,212,23)" fg:x="643" fg:w="159"/><text x="1.1361%" y="686.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (159 samples, 0.22%)</title><rect x="0.8861%" y="692" width="0.2191%" height="15" fill="rgb(242,79,21)" fg:x="643" fg:w="159"/><text x="1.1361%" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (159 samples, 0.22%)</title><rect x="0.8861%" y="708" width="0.2191%" height="15" fill="rgb(211,96,35)" fg:x="643" fg:w="159"/><text x="1.1361%" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (159 samples, 0.22%)</title><rect x="0.8861%" y="724" width="0.2191%" height="15" fill="rgb(253,215,40)" fg:x="643" fg:w="159"/><text x="1.1361%" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (159 samples, 0.22%)</title><rect x="0.8861%" y="740" width="0.2191%" height="15" fill="rgb(211,81,21)" fg:x="643" fg:w="159"/><text x="1.1361%" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (159 samples, 0.22%)</title><rect x="0.8861%" y="756" width="0.2191%" height="15" fill="rgb(208,190,38)" fg:x="643" fg:w="159"/><text x="1.1361%" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (159 samples, 0.22%)</title><rect x="0.8861%" y="772" width="0.2191%" height="15" fill="rgb(235,213,38)" fg:x="643" fg:w="159"/><text x="1.1361%" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (159 samples, 0.22%)</title><rect x="0.8861%" y="788" width="0.2191%" height="15" fill="rgb(237,122,38)" fg:x="643" fg:w="159"/><text x="1.1361%" y="798.50"></text></g><g><title>&lt;module&gt; (autograd/scipy/stats/chi2.py:4) (159 samples, 0.22%)</title><rect x="0.8861%" y="804" width="0.2191%" height="15" fill="rgb(244,218,35)" fg:x="643" fg:w="159"/><text x="1.1361%" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (159 samples, 0.22%)</title><rect x="0.8861%" y="820" width="0.2191%" height="15" fill="rgb(240,68,47)" fg:x="643" fg:w="159"/><text x="1.1361%" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (159 samples, 0.22%)</title><rect x="0.8861%" y="836" width="0.2191%" height="15" fill="rgb(210,16,53)" fg:x="643" fg:w="159"/><text x="1.1361%" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (159 samples, 0.22%)</title><rect x="0.8861%" y="852" width="0.2191%" height="15" fill="rgb(235,124,12)" fg:x="643" fg:w="159"/><text x="1.1361%" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (158 samples, 0.22%)</title><rect x="0.8875%" y="868" width="0.2177%" height="15" fill="rgb(224,169,11)" fg:x="644" fg:w="158"/><text x="1.1375%" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (158 samples, 0.22%)</title><rect x="0.8875%" y="884" width="0.2177%" height="15" fill="rgb(250,166,2)" fg:x="644" fg:w="158"/><text x="1.1375%" y="894.50"></text></g><g><title>&lt;module&gt; (legume/backend.py:23) (165 samples, 0.23%)</title><rect x="0.8792%" y="452" width="0.2274%" height="15" fill="rgb(242,216,29)" fg:x="638" fg:w="165"/><text x="1.1292%" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (165 samples, 0.23%)</title><rect x="0.8792%" y="468" width="0.2274%" height="15" fill="rgb(230,116,27)" fg:x="638" fg:w="165"/><text x="1.1292%" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (165 samples, 0.23%)</title><rect x="0.8792%" y="484" width="0.2274%" height="15" fill="rgb(228,99,48)" fg:x="638" fg:w="165"/><text x="1.1292%" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (165 samples, 0.23%)</title><rect x="0.8792%" y="500" width="0.2274%" height="15" fill="rgb(253,11,6)" fg:x="638" fg:w="165"/><text x="1.1292%" y="510.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (165 samples, 0.23%)</title><rect x="0.8792%" y="516" width="0.2274%" height="15" fill="rgb(247,143,39)" fg:x="638" fg:w="165"/><text x="1.1292%" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (165 samples, 0.23%)</title><rect x="0.8792%" y="532" width="0.2274%" height="15" fill="rgb(236,97,10)" fg:x="638" fg:w="165"/><text x="1.1292%" y="542.50"></text></g><g><title>&lt;module&gt; (autograd/scipy/__init__.py:5) (160 samples, 0.22%)</title><rect x="0.8861%" y="548" width="0.2205%" height="15" fill="rgb(233,208,19)" fg:x="643" fg:w="160"/><text x="1.1361%" y="558.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (160 samples, 0.22%)</title><rect x="0.8861%" y="564" width="0.2205%" height="15" fill="rgb(216,164,2)" fg:x="643" fg:w="160"/><text x="1.1361%" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (160 samples, 0.22%)</title><rect x="0.8861%" y="580" width="0.2205%" height="15" fill="rgb(220,129,5)" fg:x="643" fg:w="160"/><text x="1.1361%" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (160 samples, 0.22%)</title><rect x="0.8861%" y="596" width="0.2205%" height="15" fill="rgb(242,17,10)" fg:x="643" fg:w="160"/><text x="1.1361%" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (160 samples, 0.22%)</title><rect x="0.8861%" y="612" width="0.2205%" height="15" fill="rgb(242,107,0)" fg:x="643" fg:w="160"/><text x="1.1361%" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (160 samples, 0.22%)</title><rect x="0.8861%" y="628" width="0.2205%" height="15" fill="rgb(251,28,31)" fg:x="643" fg:w="160"/><text x="1.1361%" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (160 samples, 0.22%)</title><rect x="0.8861%" y="644" width="0.2205%" height="15" fill="rgb(233,223,10)" fg:x="643" fg:w="160"/><text x="1.1361%" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (160 samples, 0.22%)</title><rect x="0.8861%" y="660" width="0.2205%" height="15" fill="rgb(215,21,27)" fg:x="643" fg:w="160"/><text x="1.1361%" y="670.50"></text></g><g><title>&lt;module&gt; (legume/phc/layer.py:2) (255 samples, 0.35%)</title><rect x="0.7566%" y="356" width="0.3514%" height="15" fill="rgb(232,23,21)" fg:x="549" fg:w="255"/><text x="1.0066%" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (255 samples, 0.35%)</title><rect x="0.7566%" y="372" width="0.3514%" height="15" fill="rgb(244,5,23)" fg:x="549" fg:w="255"/><text x="1.0066%" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (255 samples, 0.35%)</title><rect x="0.7566%" y="388" width="0.3514%" height="15" fill="rgb(226,81,46)" fg:x="549" fg:w="255"/><text x="1.0066%" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (255 samples, 0.35%)</title><rect x="0.7566%" y="404" width="0.3514%" height="15" fill="rgb(247,70,30)" fg:x="549" fg:w="255"/><text x="1.0066%" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (255 samples, 0.35%)</title><rect x="0.7566%" y="420" width="0.3514%" height="15" fill="rgb(212,68,19)" fg:x="549" fg:w="255"/><text x="1.0066%" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (255 samples, 0.35%)</title><rect x="0.7566%" y="436" width="0.3514%" height="15" fill="rgb(240,187,13)" fg:x="549" fg:w="255"/><text x="1.0066%" y="446.50"></text></g><g><title>&lt;module&gt; (timetester.py:5) (833 samples, 1.15%)</title><rect x="0.0028%" y="68" width="1.1479%" height="15" fill="rgb(223,113,26)" fg:x="2" fg:w="833"/><text x="0.2528%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (833 samples, 1.15%)</title><rect x="0.0028%" y="84" width="1.1479%" height="15" fill="rgb(206,192,2)" fg:x="2" fg:w="833"/><text x="0.2528%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (833 samples, 1.15%)</title><rect x="0.0028%" y="100" width="1.1479%" height="15" fill="rgb(241,108,4)" fg:x="2" fg:w="833"/><text x="0.2528%" y="110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (833 samples, 1.15%)</title><rect x="0.0028%" y="116" width="1.1479%" height="15" fill="rgb(247,173,49)" fg:x="2" fg:w="833"/><text x="0.2528%" y="126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (833 samples, 1.15%)</title><rect x="0.0028%" y="132" width="1.1479%" height="15" fill="rgb(224,114,35)" fg:x="2" fg:w="833"/><text x="0.2528%" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (833 samples, 1.15%)</title><rect x="0.0028%" y="148" width="1.1479%" height="15" fill="rgb(245,159,27)" fg:x="2" fg:w="833"/><text x="0.2528%" y="158.50"></text></g><g><title>&lt;module&gt; (legume/__init__.py:6) (317 samples, 0.44%)</title><rect x="0.7138%" y="164" width="0.4368%" height="15" fill="rgb(245,172,44)" fg:x="518" fg:w="317"/><text x="0.9638%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (317 samples, 0.44%)</title><rect x="0.7138%" y="180" width="0.4368%" height="15" fill="rgb(236,23,11)" fg:x="518" fg:w="317"/><text x="0.9638%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (317 samples, 0.44%)</title><rect x="0.7138%" y="196" width="0.4368%" height="15" fill="rgb(205,117,38)" fg:x="518" fg:w="317"/><text x="0.9638%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (317 samples, 0.44%)</title><rect x="0.7138%" y="212" width="0.4368%" height="15" fill="rgb(237,72,25)" fg:x="518" fg:w="317"/><text x="0.9638%" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (317 samples, 0.44%)</title><rect x="0.7138%" y="228" width="0.4368%" height="15" fill="rgb(244,70,9)" fg:x="518" fg:w="317"/><text x="0.9638%" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (317 samples, 0.44%)</title><rect x="0.7138%" y="244" width="0.4368%" height="15" fill="rgb(217,125,39)" fg:x="518" fg:w="317"/><text x="0.9638%" y="254.50"></text></g><g><title>&lt;module&gt; (legume/phc/__init__.py:1) (317 samples, 0.44%)</title><rect x="0.7138%" y="260" width="0.4368%" height="15" fill="rgb(235,36,10)" fg:x="518" fg:w="317"/><text x="0.9638%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (317 samples, 0.44%)</title><rect x="0.7138%" y="276" width="0.4368%" height="15" fill="rgb(251,123,47)" fg:x="518" fg:w="317"/><text x="0.9638%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (317 samples, 0.44%)</title><rect x="0.7138%" y="292" width="0.4368%" height="15" fill="rgb(221,13,13)" fg:x="518" fg:w="317"/><text x="0.9638%" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (317 samples, 0.44%)</title><rect x="0.7138%" y="308" width="0.4368%" height="15" fill="rgb(238,131,9)" fg:x="518" fg:w="317"/><text x="0.9638%" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (317 samples, 0.44%)</title><rect x="0.7138%" y="324" width="0.4368%" height="15" fill="rgb(211,50,8)" fg:x="518" fg:w="317"/><text x="0.9638%" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (317 samples, 0.44%)</title><rect x="0.7138%" y="340" width="0.4368%" height="15" fill="rgb(245,182,24)" fg:x="518" fg:w="317"/><text x="0.9638%" y="350.50"></text></g><g><title>_unique1d (numpy/lib/arraysetops.py:333) (264 samples, 0.36%)</title><rect x="1.1741%" y="196" width="0.3638%" height="15" fill="rgb(242,14,37)" fg:x="852" fg:w="264"/><text x="1.4241%" y="206.50"></text></g><g><title>_compute_ft_abs (legume/gme/gme.py:468) (269 samples, 0.37%)</title><rect x="1.1714%" y="148" width="0.3707%" height="15" fill="rgb(246,228,12)" fg:x="850" fg:w="269"/><text x="1.4214%" y="158.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (269 samples, 0.37%)</title><rect x="1.1714%" y="164" width="0.3707%" height="15" fill="rgb(213,55,15)" fg:x="850" fg:w="269"/><text x="1.4214%" y="174.50"></text></g><g><title>unique (numpy/lib/arraysetops.py:319) (267 samples, 0.37%)</title><rect x="1.1741%" y="180" width="0.3679%" height="15" fill="rgb(209,9,3)" fg:x="852" fg:w="267"/><text x="1.4241%" y="190.50"></text></g><g><title>objective (optomization/minimize.py:66) (286 samples, 0.39%)</title><rect x="1.1562%" y="116" width="0.3941%" height="15" fill="rgb(230,59,30)" fg:x="839" fg:w="286"/><text x="1.4062%" y="126.50"></text></g><g><title>__init__ (legume/gme/gme.py:79) (285 samples, 0.39%)</title><rect x="1.1576%" y="132" width="0.3928%" height="15" fill="rgb(209,121,21)" fg:x="840" fg:w="285"/><text x="1.4076%" y="142.50"></text></g><g><title>run (legume/gme/gme.py:1032) (1,024 samples, 1.41%)</title><rect x="1.5503%" y="132" width="1.4111%" height="15" fill="rgb(220,109,13)" fg:x="1125" fg:w="1024"/><text x="1.8003%" y="142.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (1,015 samples, 1.40%)</title><rect x="1.5627%" y="148" width="1.3987%" height="15" fill="rgb(232,18,1)" fg:x="1134" fg:w="1015"/><text x="1.8127%" y="158.50"></text></g><g><title>eigh (numpy/linalg/linalg.py:1487) (1,015 samples, 1.40%)</title><rect x="1.5627%" y="164" width="1.3987%" height="15" fill="rgb(215,41,42)" fg:x="1134" fg:w="1015"/><text x="1.8127%" y="174.50"></text></g><g><title>run (legume/gme/gme.py:978) (155 samples, 0.21%)</title><rect x="2.9629%" y="132" width="0.2136%" height="15" fill="rgb(224,123,36)" fg:x="2150" fg:w="155"/><text x="3.2129%" y="142.50"></text></g><g><title>compute_eps_inv (legume/gme/gme.py:700) (148 samples, 0.20%)</title><rect x="2.9725%" y="148" width="0.2040%" height="15" fill="rgb(240,125,3)" fg:x="2157" fg:w="148"/><text x="3.2225%" y="158.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (148 samples, 0.20%)</title><rect x="2.9725%" y="164" width="0.2040%" height="15" fill="rgb(205,98,50)" fg:x="2157" fg:w="148"/><text x="3.2225%" y="174.50"></text></g><g><title>inv (numpy/linalg/linalg.py:561) (148 samples, 0.20%)</title><rect x="2.9725%" y="180" width="0.2040%" height="15" fill="rgb(205,185,37)" fg:x="2157" fg:w="148"/><text x="3.2225%" y="190.50"></text></g><g><title>f_raise (scipy/optimize/_zeros_py.py:94) (88 samples, 0.12%)</title><rect x="3.2467%" y="260" width="0.1213%" height="15" fill="rgb(238,207,15)" fg:x="2356" fg:w="88"/><text x="3.4967%" y="270.50"></text></g><g><title>&lt;lambda&gt; (legume/gme/slab_modes.py:119) (86 samples, 0.12%)</title><rect x="3.2495%" y="276" width="0.1185%" height="15" fill="rgb(213,199,42)" fg:x="2358" fg:w="86"/><text x="3.4995%" y="286.50"></text></g><g><title>guided_mode_given_g (legume/gme/slab_modes.py:142) (115 samples, 0.16%)</title><rect x="3.2150%" y="196" width="0.1585%" height="15" fill="rgb(235,201,11)" fg:x="2333" fg:w="115"/><text x="3.4650%" y="206.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (113 samples, 0.16%)</title><rect x="3.2178%" y="212" width="0.1557%" height="15" fill="rgb(207,46,11)" fg:x="2335" fg:w="113"/><text x="3.4678%" y="222.50"></text></g><g><title>fsolve (legume/utils.py:190) (110 samples, 0.15%)</title><rect x="3.2219%" y="228" width="0.1516%" height="15" fill="rgb(241,35,35)" fg:x="2338" fg:w="110"/><text x="3.4719%" y="238.50"></text></g><g><title>brentq (scipy/optimize/_zeros_py.py:798) (110 samples, 0.15%)</title><rect x="3.2219%" y="244" width="0.1516%" height="15" fill="rgb(243,32,47)" fg:x="2338" fg:w="110"/><text x="3.4719%" y="254.50"></text></g><g><title>guided_mode_given_g (legume/gme/slab_modes.py:149) (84 samples, 0.12%)</title><rect x="3.3956%" y="196" width="0.1158%" height="15" fill="rgb(247,202,23)" fg:x="2464" fg:w="84"/><text x="3.6456%" y="206.50"></text></g><g><title>_construct_mat (legume/gme/gme.py:536) (295 samples, 0.41%)</title><rect x="3.1778%" y="148" width="0.4065%" height="15" fill="rgb(219,102,11)" fg:x="2306" fg:w="295"/><text x="3.4278%" y="158.50"></text></g><g><title>_compute_guided (legume/gme/gme.py:380) (295 samples, 0.41%)</title><rect x="3.1778%" y="164" width="0.4065%" height="15" fill="rgb(243,110,44)" fg:x="2306" fg:w="295"/><text x="3.4278%" y="174.50"></text></g><g><title>guided_modes (legume/gme/slab_modes.py:77) (291 samples, 0.40%)</title><rect x="3.1834%" y="180" width="0.4010%" height="15" fill="rgb(222,74,54)" fg:x="2310" fg:w="291"/><text x="3.4334%" y="190.50"></text></g><g><title>mat_te_te (legume/gme/matrix_elements.py:49) (109 samples, 0.15%)</title><rect x="3.7635%" y="164" width="0.1502%" height="15" fill="rgb(216,99,12)" fg:x="2731" fg:w="109"/><text x="4.0135%" y="174.50"></text></g><g><title>mat_te_te (legume/gme/matrix_elements.py:52) (104 samples, 0.14%)</title><rect x="3.9441%" y="164" width="0.1433%" height="15" fill="rgb(226,22,26)" fg:x="2862" fg:w="104"/><text x="4.1941%" y="174.50"></text></g><g><title>I_alpha (legume/gme/slab_modes.py:10) (110 samples, 0.15%)</title><rect x="4.2059%" y="196" width="0.1516%" height="15" fill="rgb(217,163,10)" fg:x="3052" fg:w="110"/><text x="4.4559%" y="206.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (79 samples, 0.11%)</title><rect x="4.2486%" y="212" width="0.1089%" height="15" fill="rgb(213,25,53)" fg:x="3083" fg:w="79"/><text x="4.4986%" y="222.50"></text></g><g><title>mat_te_te (legume/gme/matrix_elements.py:55) (171 samples, 0.24%)</title><rect x="4.1301%" y="164" width="0.2357%" height="15" fill="rgb(252,105,26)" fg:x="2997" fg:w="171"/><text x="4.3801%" y="174.50"></text></g><g><title>IJ_layer (legume/gme/matrix_elements.py:19) (116 samples, 0.16%)</title><rect x="4.2059%" y="180" width="0.1599%" height="15" fill="rgb(220,39,43)" fg:x="3052" fg:w="116"/><text x="4.4559%" y="190.50"></text></g><g><title>I_alpha (legume/gme/slab_modes.py:10) (102 samples, 0.14%)</title><rect x="4.4429%" y="196" width="0.1406%" height="15" fill="rgb(229,68,48)" fg:x="3224" fg:w="102"/><text x="4.6929%" y="206.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (75 samples, 0.10%)</title><rect x="4.4801%" y="212" width="0.1034%" height="15" fill="rgb(252,8,32)" fg:x="3251" fg:w="75"/><text x="4.7301%" y="222.50"></text></g><g><title>mat_te_te (legume/gme/matrix_elements.py:58) (145 samples, 0.20%)</title><rect x="4.3974%" y="164" width="0.1998%" height="15" fill="rgb(223,20,43)" fg:x="3191" fg:w="145"/><text x="4.6474%" y="174.50"></text></g><g><title>IJ_layer (legume/gme/matrix_elements.py:19) (112 samples, 0.15%)</title><rect x="4.4429%" y="180" width="0.1543%" height="15" fill="rgb(229,81,49)" fg:x="3224" fg:w="112"/><text x="4.6929%" y="190.50"></text></g><g><title>_construct_mat (legume/gme/gme.py:600) (700 samples, 0.96%)</title><rect x="3.6519%" y="148" width="0.9647%" height="15" fill="rgb(236,28,36)" fg:x="2650" fg:w="700"/><text x="3.9019%" y="158.50"></text></g><g><title>objective (optomization/minimize.py:67) (2,294 samples, 3.16%)</title><rect x="1.5503%" y="116" width="3.1613%" height="15" fill="rgb(249,185,26)" fg:x="1125" fg:w="2294"/><text x="1.8003%" y="126.50">obj..</text></g><g><title>run (legume/gme/gme.py:999) (1,114 samples, 1.54%)</title><rect x="3.1765%" y="132" width="1.5352%" height="15" fill="rgb(249,174,33)" fg:x="2305" fg:w="1114"/><text x="3.4265%" y="142.50"></text></g><g><title>minimize (optomization/minimize.py:233) (2,656 samples, 3.66%)</title><rect x="1.1507%" y="100" width="3.6602%" height="15" fill="rgb(233,201,37)" fg:x="835" fg:w="2656"/><text x="1.4007%" y="110.50">mini..</text></g><g><title>_unique1d (numpy/lib/arraysetops.py:333) (426 samples, 0.59%)</title><rect x="4.8164%" y="292" width="0.5871%" height="15" fill="rgb(221,78,26)" fg:x="3495" fg:w="426"/><text x="5.0664%" y="302.50"></text></g><g><title>objective (optomization/minimize.py:66) (433 samples, 0.60%)</title><rect x="4.8150%" y="212" width="0.5967%" height="15" fill="rgb(250,127,30)" fg:x="3494" fg:w="433"/><text x="5.0650%" y="222.50"></text></g><g><title>__init__ (legume/gme/gme.py:79) (433 samples, 0.60%)</title><rect x="4.8150%" y="228" width="0.5967%" height="15" fill="rgb(230,49,44)" fg:x="3494" fg:w="433"/><text x="5.0650%" y="238.50"></text></g><g><title>_compute_ft_abs (legume/gme/gme.py:468) (432 samples, 0.60%)</title><rect x="4.8164%" y="244" width="0.5953%" height="15" fill="rgb(229,67,23)" fg:x="3495" fg:w="432"/><text x="5.0664%" y="254.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (432 samples, 0.60%)</title><rect x="4.8164%" y="260" width="0.5953%" height="15" fill="rgb(249,83,47)" fg:x="3495" fg:w="432"/><text x="5.0664%" y="270.50"></text></g><g><title>unique (numpy/lib/arraysetops.py:319) (432 samples, 0.60%)</title><rect x="4.8164%" y="276" width="0.5953%" height="15" fill="rgb(215,43,3)" fg:x="3495" fg:w="432"/><text x="5.0664%" y="286.50"></text></g><g><title>run (legume/gme/gme.py:1032) (1,070 samples, 1.47%)</title><rect x="5.4131%" y="228" width="1.4745%" height="15" fill="rgb(238,154,13)" fg:x="3928" fg:w="1070"/><text x="5.6631%" y="238.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (1,056 samples, 1.46%)</title><rect x="5.4324%" y="244" width="1.4552%" height="15" fill="rgb(219,56,2)" fg:x="3942" fg:w="1056"/><text x="5.6824%" y="254.50"></text></g><g><title>eigh (numpy/linalg/linalg.py:1487) (1,056 samples, 1.46%)</title><rect x="5.4324%" y="260" width="1.4552%" height="15" fill="rgb(233,0,4)" fg:x="3942" fg:w="1056"/><text x="5.6824%" y="270.50"></text></g><g><title>f_raise (scipy/optimize/_zeros_py.py:94) (108 samples, 0.15%)</title><rect x="7.0116%" y="356" width="0.1488%" height="15" fill="rgb(235,30,7)" fg:x="5088" fg:w="108"/><text x="7.2616%" y="366.50"></text></g><g><title>&lt;lambda&gt; (legume/gme/slab_modes.py:119) (108 samples, 0.15%)</title><rect x="7.0116%" y="372" width="0.1488%" height="15" fill="rgb(250,79,13)" fg:x="5088" fg:w="108"/><text x="7.2616%" y="382.50"></text></g><g><title>guided_mode_given_g (legume/gme/slab_modes.py:142) (126 samples, 0.17%)</title><rect x="6.9924%" y="292" width="0.1736%" height="15" fill="rgb(211,146,34)" fg:x="5074" fg:w="126"/><text x="7.2424%" y="302.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (126 samples, 0.17%)</title><rect x="6.9924%" y="308" width="0.1736%" height="15" fill="rgb(228,22,38)" fg:x="5074" fg:w="126"/><text x="7.2424%" y="318.50"></text></g><g><title>fsolve (legume/utils.py:190) (125 samples, 0.17%)</title><rect x="6.9937%" y="324" width="0.1723%" height="15" fill="rgb(235,168,5)" fg:x="5075" fg:w="125"/><text x="7.2437%" y="334.50"></text></g><g><title>brentq (scipy/optimize/_zeros_py.py:798) (125 samples, 0.17%)</title><rect x="6.9937%" y="340" width="0.1723%" height="15" fill="rgb(221,155,16)" fg:x="5075" fg:w="125"/><text x="7.2437%" y="350.50"></text></g><g><title>guided_mode_given_g (legume/gme/slab_modes.py:149) (76 samples, 0.10%)</title><rect x="7.1908%" y="292" width="0.1047%" height="15" fill="rgb(215,215,53)" fg:x="5218" fg:w="76"/><text x="7.4408%" y="302.50"></text></g><g><title>_construct_mat (legume/gme/gme.py:536) (311 samples, 0.43%)</title><rect x="6.9427%" y="244" width="0.4286%" height="15" fill="rgb(223,4,10)" fg:x="5038" fg:w="311"/><text x="7.1927%" y="254.50"></text></g><g><title>_compute_guided (legume/gme/gme.py:380) (311 samples, 0.43%)</title><rect x="6.9427%" y="260" width="0.4286%" height="15" fill="rgb(234,103,6)" fg:x="5038" fg:w="311"/><text x="7.1927%" y="270.50"></text></g><g><title>guided_modes (legume/gme/slab_modes.py:77) (304 samples, 0.42%)</title><rect x="6.9524%" y="276" width="0.4189%" height="15" fill="rgb(227,97,0)" fg:x="5045" fg:w="304"/><text x="7.2024%" y="286.50"></text></g><g><title>mat_te_te (legume/gme/matrix_elements.py:46) (74 samples, 0.10%)</title><rect x="7.4416%" y="260" width="0.1020%" height="15" fill="rgb(234,150,53)" fg:x="5400" fg:w="74"/><text x="7.6916%" y="270.50"></text></g><g><title>mat_te_te (legume/gme/matrix_elements.py:48) (103 samples, 0.14%)</title><rect x="7.5436%" y="260" width="0.1419%" height="15" fill="rgb(228,201,54)" fg:x="5474" fg:w="103"/><text x="7.7936%" y="270.50"></text></g><g><title>I_alpha (legume/gme/slab_modes.py:10) (133 samples, 0.18%)</title><rect x="7.8247%" y="292" width="0.1833%" height="15" fill="rgb(222,22,37)" fg:x="5678" fg:w="133"/><text x="8.0747%" y="302.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (102 samples, 0.14%)</title><rect x="7.8674%" y="308" width="0.1406%" height="15" fill="rgb(237,53,32)" fg:x="5709" fg:w="102"/><text x="8.1174%" y="318.50"></text></g><g><title>mat_te_te (legume/gme/matrix_elements.py:49) (237 samples, 0.33%)</title><rect x="7.6855%" y="260" width="0.3266%" height="15" fill="rgb(233,25,53)" fg:x="5577" fg:w="237"/><text x="7.9355%" y="270.50"></text></g><g><title>IJ_layer (legume/gme/matrix_elements.py:19) (136 samples, 0.19%)</title><rect x="7.8247%" y="276" width="0.1874%" height="15" fill="rgb(210,40,34)" fg:x="5678" fg:w="136"/><text x="8.0747%" y="286.50"></text></g><g><title>I_alpha (legume/gme/slab_modes.py:10) (129 samples, 0.18%)</title><rect x="8.1858%" y="292" width="0.1778%" height="15" fill="rgb(241,220,44)" fg:x="5940" fg:w="129"/><text x="8.4358%" y="302.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (93 samples, 0.13%)</title><rect x="8.2354%" y="308" width="0.1282%" height="15" fill="rgb(235,28,35)" fg:x="5976" fg:w="93"/><text x="8.4854%" y="318.50"></text></g><g><title>IJ_layer (legume/gme/matrix_elements.py:19) (134 samples, 0.18%)</title><rect x="8.1858%" y="276" width="0.1847%" height="15" fill="rgb(210,56,17)" fg:x="5940" fg:w="134"/><text x="8.4358%" y="286.50"></text></g><g><title>mat_te_te (legume/gme/matrix_elements.py:52) (222 samples, 0.31%)</title><rect x="8.0659%" y="260" width="0.3059%" height="15" fill="rgb(224,130,29)" fg:x="5853" fg:w="222"/><text x="8.3159%" y="270.50"></text></g><g><title>I_alpha (legume/gme/slab_modes.py:10) (176 samples, 0.24%)</title><rect x="8.5482%" y="292" width="0.2425%" height="15" fill="rgb(235,212,8)" fg:x="6203" fg:w="176"/><text x="8.7982%" y="302.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (115 samples, 0.16%)</title><rect x="8.6323%" y="308" width="0.1585%" height="15" fill="rgb(223,33,50)" fg:x="6264" fg:w="115"/><text x="8.8823%" y="318.50"></text></g><g><title>mat_te_te (legume/gme/matrix_elements.py:55) (275 samples, 0.38%)</title><rect x="8.4311%" y="260" width="0.3790%" height="15" fill="rgb(219,149,13)" fg:x="6118" fg:w="275"/><text x="8.6811%" y="270.50"></text></g><g><title>IJ_layer (legume/gme/matrix_elements.py:19) (190 samples, 0.26%)</title><rect x="8.5482%" y="276" width="0.2618%" height="15" fill="rgb(250,156,29)" fg:x="6203" fg:w="190"/><text x="8.7982%" y="286.50"></text></g><g><title>I_alpha (legume/gme/slab_modes.py:10) (136 samples, 0.19%)</title><rect x="8.9671%" y="292" width="0.1874%" height="15" fill="rgb(216,193,19)" fg:x="6507" fg:w="136"/><text x="9.2171%" y="302.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (89 samples, 0.12%)</title><rect x="9.0319%" y="308" width="0.1226%" height="15" fill="rgb(216,135,14)" fg:x="6554" fg:w="89"/><text x="9.2819%" y="318.50"></text></g><g><title>mat_te_te (legume/gme/matrix_elements.py:58) (221 samples, 0.30%)</title><rect x="8.8665%" y="260" width="0.3046%" height="15" fill="rgb(241,47,5)" fg:x="6434" fg:w="221"/><text x="9.1165%" y="270.50"></text></g><g><title>IJ_layer (legume/gme/matrix_elements.py:19) (148 samples, 0.20%)</title><rect x="8.9671%" y="276" width="0.2040%" height="15" fill="rgb(233,42,35)" fg:x="6507" fg:w="148"/><text x="9.2171%" y="286.50"></text></g><g><title>_construct_mat (legume/gme/gme.py:600) (1,274 samples, 1.76%)</title><rect x="7.4402%" y="244" width="1.7557%" height="15" fill="rgb(231,13,6)" fg:x="5399" fg:w="1274"/><text x="7.6902%" y="254.50"></text></g><g><title>objective (optomization/minimize.py:67) (2,853 samples, 3.93%)</title><rect x="5.4117%" y="212" width="3.9316%" height="15" fill="rgb(207,181,40)" fg:x="3927" fg:w="2853"/><text x="5.6617%" y="222.50">obje..</text></g><g><title>run (legume/gme/gme.py:999) (1,743 samples, 2.40%)</title><rect x="6.9414%" y="228" width="2.4020%" height="15" fill="rgb(254,173,49)" fg:x="5037" fg:w="1743"/><text x="7.1914%" y="238.50">ru..</text></g><g><title>comp_pdote (optomization/cost.py:123) (99 samples, 0.14%)</title><rect x="9.3447%" y="260" width="0.1364%" height="15" fill="rgb(221,1,38)" fg:x="6781" fg:w="99"/><text x="9.5947%" y="270.50"></text></g><g><title>comp_backscatter (optomization/cost.py:148) (166 samples, 0.23%)</title><rect x="9.3447%" y="244" width="0.2288%" height="15" fill="rgb(206,124,46)" fg:x="6781" fg:w="166"/><text x="9.5947%" y="254.50"></text></g><g><title>__init__ (scipy/optimize/_differentiable_functions.py:223) (3,459 samples, 4.77%)</title><rect x="4.8109%" y="148" width="4.7668%" height="15" fill="rgb(249,21,11)" fg:x="3491" fg:w="3459"/><text x="5.0609%" y="158.50">__init..</text></g><g><title>_update_fun (scipy/optimize/_differentiable_functions.py:295) (3,459 samples, 4.77%)</title><rect x="4.8109%" y="164" width="4.7668%" height="15" fill="rgb(222,201,40)" fg:x="3491" fg:w="3459"/><text x="5.0609%" y="174.50">_updat..</text></g><g><title>wrapped (scipy/optimize/_differentiable_functions.py:21) (3,459 samples, 4.77%)</title><rect x="4.8109%" y="180" width="4.7668%" height="15" fill="rgb(235,61,29)" fg:x="3491" fg:w="3459"/><text x="5.0609%" y="190.50">wrappe..</text></g><g><title>scipy_objective (optomization/minimize.py:75) (3,459 samples, 4.77%)</title><rect x="4.8109%" y="196" width="4.7668%" height="15" fill="rgb(219,207,3)" fg:x="3491" fg:w="3459"/><text x="5.0609%" y="206.50">scipy_..</text></g><g><title>objective (optomization/minimize.py:68) (170 samples, 0.23%)</title><rect x="9.3433%" y="212" width="0.2343%" height="15" fill="rgb(222,56,46)" fg:x="6780" fg:w="170"/><text x="9.5933%" y="222.50"></text></g><g><title>cost (optomization/cost.py:179) (170 samples, 0.23%)</title><rect x="9.3433%" y="228" width="0.2343%" height="15" fill="rgb(239,76,54)" fg:x="6780" fg:w="170"/><text x="9.5933%" y="238.50"></text></g><g><title>_unique1d (numpy/lib/arraysetops.py:333) (338 samples, 0.47%)</title><rect x="9.6658%" y="372" width="0.4658%" height="15" fill="rgb(231,124,27)" fg:x="7014" fg:w="338"/><text x="9.9158%" y="382.50"></text></g><g><title>objective (optomization/minimize.py:66) (348 samples, 0.48%)</title><rect x="9.6603%" y="292" width="0.4796%" height="15" fill="rgb(249,195,6)" fg:x="7010" fg:w="348"/><text x="9.9103%" y="302.50"></text></g><g><title>__init__ (legume/gme/gme.py:79) (348 samples, 0.48%)</title><rect x="9.6603%" y="308" width="0.4796%" height="15" fill="rgb(237,174,47)" fg:x="7010" fg:w="348"/><text x="9.9103%" y="318.50"></text></g><g><title>_compute_ft_abs (legume/gme/gme.py:468) (345 samples, 0.48%)</title><rect x="9.6644%" y="324" width="0.4754%" height="15" fill="rgb(206,201,31)" fg:x="7013" fg:w="345"/><text x="9.9144%" y="334.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (345 samples, 0.48%)</title><rect x="9.6644%" y="340" width="0.4754%" height="15" fill="rgb(231,57,52)" fg:x="7013" fg:w="345"/><text x="9.9144%" y="350.50"></text></g><g><title>unique (numpy/lib/arraysetops.py:319) (344 samples, 0.47%)</title><rect x="9.6658%" y="356" width="0.4741%" height="15" fill="rgb(248,177,22)" fg:x="7014" fg:w="344"/><text x="9.9158%" y="366.50"></text></g><g><title>f_wrapped (autograd/tracer.py:44) (998 samples, 1.38%)</title><rect x="10.1716%" y="324" width="1.3753%" height="15" fill="rgb(215,211,37)" fg:x="7381" fg:w="998"/><text x="10.4216%" y="334.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (998 samples, 1.38%)</title><rect x="10.1716%" y="340" width="1.3753%" height="15" fill="rgb(241,128,51)" fg:x="7381" fg:w="998"/><text x="10.4216%" y="350.50"></text></g><g><title>eigh (numpy/linalg/linalg.py:1487) (998 samples, 1.38%)</title><rect x="10.1716%" y="356" width="1.3753%" height="15" fill="rgb(227,165,31)" fg:x="7381" fg:w="998"/><text x="10.4216%" y="366.50"></text></g><g><title>run (legume/gme/gme.py:1032) (1,024 samples, 1.41%)</title><rect x="10.1399%" y="308" width="1.4111%" height="15" fill="rgb(228,167,24)" fg:x="7358" fg:w="1024"/><text x="10.3899%" y="318.50"></text></g><g><title>f_raise (scipy/optimize/_zeros_py.py:94) (139 samples, 0.19%)</title><rect x="11.6737%" y="452" width="0.1916%" height="15" fill="rgb(228,143,12)" fg:x="8471" fg:w="139"/><text x="11.9237%" y="462.50"></text></g><g><title>&lt;lambda&gt; (legume/gme/slab_modes.py:119) (137 samples, 0.19%)</title><rect x="11.6764%" y="468" width="0.1888%" height="15" fill="rgb(249,149,8)" fg:x="8473" fg:w="137"/><text x="11.9264%" y="478.50"></text></g><g><title>f_wrapped (autograd/tracer.py:44) (166 samples, 0.23%)</title><rect x="11.6475%" y="388" width="0.2288%" height="15" fill="rgb(243,35,44)" fg:x="8452" fg:w="166"/><text x="11.8975%" y="398.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (165 samples, 0.23%)</title><rect x="11.6489%" y="404" width="0.2274%" height="15" fill="rgb(246,89,9)" fg:x="8453" fg:w="165"/><text x="11.8989%" y="414.50"></text></g><g><title>fsolve (legume/utils.py:190) (163 samples, 0.22%)</title><rect x="11.6516%" y="420" width="0.2246%" height="15" fill="rgb(233,213,13)" fg:x="8455" fg:w="163"/><text x="11.9016%" y="430.50"></text></g><g><title>brentq (scipy/optimize/_zeros_py.py:798) (163 samples, 0.22%)</title><rect x="11.6516%" y="436" width="0.2246%" height="15" fill="rgb(233,141,41)" fg:x="8455" fg:w="163"/><text x="11.9016%" y="446.50"></text></g><g><title>D22 (legume/gme/slab_modes.py:255) (147 samples, 0.20%)</title><rect x="11.9052%" y="548" width="0.2026%" height="15" fill="rgb(239,167,4)" fg:x="8639" fg:w="147"/><text x="12.1552%" y="558.50"></text></g><g><title>f_wrapped (autograd/tracer.py:60) (335 samples, 0.46%)</title><rect x="12.1904%" y="660" width="0.4617%" height="15" fill="rgb(209,217,16)" fg:x="8846" fg:w="335"/><text x="12.4404%" y="670.50"></text></g><g><title>__mul__ (autograd/numpy/numpy_boxes.py:28) (373 samples, 0.51%)</title><rect x="12.1408%" y="564" width="0.5140%" height="15" fill="rgb(219,88,35)" fg:x="8810" fg:w="373"/><text x="12.3908%" y="574.50"></text></g><g><title>f_wrapped (autograd/tracer.py:45) (371 samples, 0.51%)</title><rect x="12.1436%" y="580" width="0.5113%" height="15" fill="rgb(220,193,23)" fg:x="8812" fg:w="371"/><text x="12.3936%" y="590.50"></text></g><g><title>__init__ (autograd/core.py:36) (370 samples, 0.51%)</title><rect x="12.1450%" y="596" width="0.5099%" height="15" fill="rgb(230,90,52)" fg:x="8813" fg:w="370"/><text x="12.3950%" y="606.50"></text></g><g><title>vjp_argnums (autograd/core.py:66) (370 samples, 0.51%)</title><rect x="12.1450%" y="612" width="0.5099%" height="15" fill="rgb(252,106,19)" fg:x="8813" fg:w="370"/><text x="12.3950%" y="622.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:33) (370 samples, 0.51%)</title><rect x="12.1450%" y="628" width="0.5099%" height="15" fill="rgb(206,74,20)" fg:x="8813" fg:w="370"/><text x="12.3950%" y="638.50"></text></g><g><title>unbroadcast_f (autograd/numpy/numpy_vjps.py:659) (337 samples, 0.46%)</title><rect x="12.1904%" y="644" width="0.4644%" height="15" fill="rgb(230,138,44)" fg:x="8846" fg:w="337"/><text x="12.4404%" y="654.50"></text></g><g><title>D22 (legume/gme/slab_modes.py:258) (381 samples, 0.53%)</title><rect x="12.1408%" y="548" width="0.5250%" height="15" fill="rgb(235,182,43)" fg:x="8810" fg:w="381"/><text x="12.3908%" y="558.50"></text></g><g><title>trace (autograd/tracer.py:10) (675 samples, 0.93%)</title><rect x="11.8969%" y="500" width="0.9302%" height="15" fill="rgb(242,16,51)" fg:x="8633" fg:w="675"/><text x="12.1469%" y="510.50"></text></g><g><title>unary_f (autograd/wrap_util.py:15) (671 samples, 0.92%)</title><rect x="11.9024%" y="516" width="0.9247%" height="15" fill="rgb(248,9,4)" fg:x="8637" fg:w="671"/><text x="12.1524%" y="526.50"></text></g><g><title>&lt;lambda&gt; (legume/gme/slab_modes.py:119) (671 samples, 0.92%)</title><rect x="11.9024%" y="532" width="0.9247%" height="15" fill="rgb(210,31,22)" fg:x="8637" fg:w="671"/><text x="12.1524%" y="542.50"></text></g><g><title>make_vjp (autograd/core.py:10) (683 samples, 0.94%)</title><rect x="11.8969%" y="484" width="0.9412%" height="15" fill="rgb(239,54,39)" fg:x="8633" fg:w="683"/><text x="12.1469%" y="494.50"></text></g><g><title>grad (autograd/differential_operators.py:28) (687 samples, 0.95%)</title><rect x="11.8955%" y="468" width="0.9467%" height="15" fill="rgb(230,99,41)" fg:x="8632" fg:w="687"/><text x="12.1455%" y="478.50"></text></g><g><title>&lt;lambda&gt; (autograd/core.py:67) (85 samples, 0.12%)</title><rect x="12.8960%" y="516" width="0.1171%" height="15" fill="rgb(253,106,12)" fg:x="9358" fg:w="85"/><text x="13.1460%" y="526.50"></text></g><g><title>backward_pass (autograd/core.py:21) (170 samples, 0.23%)</title><rect x="12.8933%" y="500" width="0.2343%" height="15" fill="rgb(213,46,41)" fg:x="9356" fg:w="170"/><text x="13.1433%" y="510.50"></text></g><g><title>&lt;lambda&gt; (autograd/core.py:78) (83 samples, 0.11%)</title><rect x="13.0132%" y="516" width="0.1144%" height="15" fill="rgb(215,133,35)" fg:x="9443" fg:w="83"/><text x="13.2632%" y="526.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:660) (81 samples, 0.11%)</title><rect x="13.0159%" y="532" width="0.1116%" height="15" fill="rgb(213,28,5)" fg:x="9445" fg:w="81"/><text x="13.2659%" y="542.50"></text></g><g><title>vjp (autograd/core.py:14) (227 samples, 0.31%)</title><rect x="12.8588%" y="484" width="0.3128%" height="15" fill="rgb(215,77,49)" fg:x="9331" fg:w="227"/><text x="13.1088%" y="494.50"></text></g><g><title>nary_f (autograd/wrap_util.py:20) (933 samples, 1.29%)</title><rect x="11.8873%" y="452" width="1.2857%" height="15" fill="rgb(248,100,22)" fg:x="8626" fg:w="933"/><text x="12.1373%" y="462.50"></text></g><g><title>grad (autograd/differential_operators.py:32) (231 samples, 0.32%)</title><rect x="12.8547%" y="468" width="0.3183%" height="15" fill="rgb(208,67,9)" fg:x="9328" fg:w="231"/><text x="13.1047%" y="478.50"></text></g><g><title>vjp_maker (legume/primitives.py:283) (954 samples, 1.31%)</title><rect x="11.8776%" y="436" width="1.3147%" height="15" fill="rgb(219,133,21)" fg:x="8619" fg:w="954"/><text x="12.1276%" y="446.50"></text></g><g><title>D22 (legume/gme/slab_modes.py:255) (99 samples, 0.14%)</title><rect x="13.2419%" y="548" width="0.1364%" height="15" fill="rgb(246,46,29)" fg:x="9609" fg:w="99"/><text x="13.4919%" y="558.50"></text></g><g><title>trace (autograd/tracer.py:10) (269 samples, 0.37%)</title><rect x="13.2047%" y="500" width="0.3707%" height="15" fill="rgb(246,185,52)" fg:x="9582" fg:w="269"/><text x="13.4547%" y="510.50"></text></g><g><title>unary_f (autograd/wrap_util.py:15) (266 samples, 0.37%)</title><rect x="13.2088%" y="516" width="0.3666%" height="15" fill="rgb(252,136,11)" fg:x="9585" fg:w="266"/><text x="13.4588%" y="526.50"></text></g><g><title>&lt;lambda&gt; (legume/gme/slab_modes.py:119) (265 samples, 0.37%)</title><rect x="13.2102%" y="532" width="0.3652%" height="15" fill="rgb(219,138,53)" fg:x="9586" fg:w="265"/><text x="13.4602%" y="542.50"></text></g><g><title>make_vjp (autograd/core.py:10) (275 samples, 0.38%)</title><rect x="13.2047%" y="484" width="0.3790%" height="15" fill="rgb(211,51,23)" fg:x="9582" fg:w="275"/><text x="13.4547%" y="494.50"></text></g><g><title>grad (autograd/differential_operators.py:28) (279 samples, 0.38%)</title><rect x="13.2033%" y="468" width="0.3845%" height="15" fill="rgb(247,221,28)" fg:x="9581" fg:w="279"/><text x="13.4533%" y="478.50"></text></g><g><title>backward_pass (autograd/core.py:21) (157 samples, 0.22%)</title><rect x="13.6512%" y="500" width="0.2164%" height="15" fill="rgb(251,222,45)" fg:x="9906" fg:w="157"/><text x="13.9012%" y="510.50"></text></g><g><title>&lt;lambda&gt; (autograd/core.py:78) (77 samples, 0.11%)</title><rect x="13.7615%" y="516" width="0.1061%" height="15" fill="rgb(217,162,53)" fg:x="9986" fg:w="77"/><text x="14.0115%" y="526.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:660) (77 samples, 0.11%)</title><rect x="13.7615%" y="532" width="0.1061%" height="15" fill="rgb(229,93,14)" fg:x="9986" fg:w="77"/><text x="14.0115%" y="542.50"></text></g><g><title>vjp (autograd/core.py:14) (231 samples, 0.32%)</title><rect x="13.6099%" y="484" width="0.3183%" height="15" fill="rgb(209,67,49)" fg:x="9876" fg:w="231"/><text x="13.8599%" y="494.50"></text></g><g><title>nary_f (autograd/wrap_util.py:20) (531 samples, 0.73%)</title><rect x="13.1992%" y="452" width="0.7318%" height="15" fill="rgb(213,87,29)" fg:x="9578" fg:w="531"/><text x="13.4492%" y="462.50"></text></g><g><title>grad (autograd/differential_operators.py:32) (239 samples, 0.33%)</title><rect x="13.6016%" y="468" width="0.3294%" height="15" fill="rgb(205,151,52)" fg:x="9870" fg:w="239"/><text x="13.8516%" y="478.50"></text></g><g><title>f_wrapped (autograd/tracer.py:45) (1,496 samples, 2.06%)</title><rect x="11.8762%" y="388" width="2.0616%" height="15" fill="rgb(253,215,39)" fg:x="8618" fg:w="1496"/><text x="12.1262%" y="398.50">f..</text></g><g><title>__init__ (autograd/core.py:36) (1,496 samples, 2.06%)</title><rect x="11.8762%" y="404" width="2.0616%" height="15" fill="rgb(221,220,41)" fg:x="8618" fg:w="1496"/><text x="12.1262%" y="414.50">_..</text></g><g><title>vjp_argnums (autograd/core.py:66) (1,496 samples, 2.06%)</title><rect x="11.8762%" y="420" width="2.0616%" height="15" fill="rgb(218,133,21)" fg:x="8618" fg:w="1496"/><text x="12.1262%" y="430.50">v..</text></g><g><title>vjp_maker (legume/primitives.py:284) (541 samples, 0.75%)</title><rect x="13.1923%" y="436" width="0.7455%" height="15" fill="rgb(221,193,43)" fg:x="9573" fg:w="541"/><text x="13.4423%" y="446.50"></text></g><g><title>guided_mode_given_g (legume/gme/slab_modes.py:142) (1,668 samples, 2.30%)</title><rect x="11.6420%" y="372" width="2.2986%" height="15" fill="rgb(240,128,52)" fg:x="8448" fg:w="1668"/><text x="11.8920%" y="382.50">g..</text></g><g><title>guided_mode_given_g (legume/gme/slab_modes.py:145) (88 samples, 0.12%)</title><rect x="13.9406%" y="372" width="0.1213%" height="15" fill="rgb(253,114,12)" fg:x="10116" fg:w="88"/><text x="14.1906%" y="382.50"></text></g><g><title>AB_matrices (legume/gme/slab_modes.py:401) (363 samples, 0.50%)</title><rect x="14.0660%" y="388" width="0.5002%" height="15" fill="rgb(215,223,47)" fg:x="10207" fg:w="363"/><text x="14.3160%" y="398.50"></text></g><g><title>guided_mode_given_g (legume/gme/slab_modes.py:149) (488 samples, 0.67%)</title><rect x="14.0619%" y="372" width="0.6725%" height="15" fill="rgb(248,225,23)" fg:x="10204" fg:w="488"/><text x="14.3119%" y="382.50"></text></g><g><title>f_wrapped (autograd/tracer.py:45) (404 samples, 0.56%)</title><rect x="14.7495%" y="404" width="0.5567%" height="15" fill="rgb(250,108,0)" fg:x="10703" fg:w="404"/><text x="14.9995%" y="414.50"></text></g><g><title>__init__ (autograd/core.py:36) (402 samples, 0.55%)</title><rect x="14.7523%" y="420" width="0.5540%" height="15" fill="rgb(228,208,7)" fg:x="10705" fg:w="402"/><text x="15.0023%" y="430.50"></text></g><g><title>vjp_argnums (autograd/core.py:66) (375 samples, 0.52%)</title><rect x="14.7895%" y="436" width="0.5168%" height="15" fill="rgb(244,45,10)" fg:x="10732" fg:w="375"/><text x="15.0395%" y="446.50"></text></g><g><title>normalization_coeff (legume/gme/slab_modes.py:439) (410 samples, 0.57%)</title><rect x="14.7440%" y="388" width="0.5650%" height="15" fill="rgb(207,125,25)" fg:x="10699" fg:w="410"/><text x="14.9940%" y="398.50"></text></g><g><title>normalization_coeff (legume/gme/slab_modes.py:452) (78 samples, 0.11%)</title><rect x="15.3090%" y="388" width="0.1075%" height="15" fill="rgb(210,195,18)" fg:x="11109" fg:w="78"/><text x="15.5590%" y="398.50"></text></g><g><title>normalization_coeff (legume/gme/slab_modes.py:458) (83 samples, 0.11%)</title><rect x="15.8093%" y="388" width="0.1144%" height="15" fill="rgb(249,80,12)" fg:x="11472" fg:w="83"/><text x="16.0593%" y="398.50"></text></g><g><title>f_wrapped (autograd/tracer.py:45) (459 samples, 0.63%)</title><rect x="15.9691%" y="404" width="0.6325%" height="15" fill="rgb(221,65,9)" fg:x="11588" fg:w="459"/><text x="16.2191%" y="414.50"></text></g><g><title>__init__ (autograd/core.py:36) (459 samples, 0.63%)</title><rect x="15.9691%" y="420" width="0.6325%" height="15" fill="rgb(235,49,36)" fg:x="11588" fg:w="459"/><text x="16.2191%" y="430.50"></text></g><g><title>vjp_argnums (autograd/core.py:67) (456 samples, 0.63%)</title><rect x="15.9733%" y="436" width="0.6284%" height="15" fill="rgb(225,32,20)" fg:x="11591" fg:w="456"/><text x="16.2233%" y="446.50"></text></g><g><title>normalization_coeff (legume/gme/slab_modes.py:459) (493 samples, 0.68%)</title><rect x="15.9237%" y="388" width="0.6794%" height="15" fill="rgb(215,141,46)" fg:x="11555" fg:w="493"/><text x="16.1737%" y="398.50"></text></g><g><title>normalization_coeff (legume/gme/slab_modes.py:461) (74 samples, 0.10%)</title><rect x="16.6899%" y="388" width="0.1020%" height="15" fill="rgb(250,160,47)" fg:x="12111" fg:w="74"/><text x="16.9399%" y="398.50"></text></g><g><title>guided_mode_given_g (legume/gme/slab_modes.py:151) (1,544 samples, 2.13%)</title><rect x="14.7344%" y="372" width="2.1277%" height="15" fill="rgb(216,222,40)" fg:x="10692" fg:w="1544"/><text x="14.9844%" y="382.50">g..</text></g><g><title>_construct_mat (legume/gme/gme.py:536) (3,839 samples, 5.29%)</title><rect x="11.5951%" y="324" width="5.2904%" height="15" fill="rgb(234,217,39)" fg:x="8414" fg:w="3839"/><text x="11.8451%" y="334.50">_const..</text></g><g><title>_compute_guided (legume/gme/gme.py:380) (3,839 samples, 5.29%)</title><rect x="11.5951%" y="340" width="5.2904%" height="15" fill="rgb(207,178,40)" fg:x="8414" fg:w="3839"/><text x="11.8451%" y="350.50">_compu..</text></g><g><title>guided_modes (legume/gme/slab_modes.py:77) (3,835 samples, 5.28%)</title><rect x="11.6006%" y="356" width="5.2849%" height="15" fill="rgb(221,136,13)" fg:x="8418" fg:w="3835"/><text x="11.8506%" y="366.50">guided..</text></g><g><title>f_wrapped (autograd/tracer.py:45) (484 samples, 0.67%)</title><rect x="16.9545%" y="404" width="0.6670%" height="15" fill="rgb(249,199,10)" fg:x="12303" fg:w="484"/><text x="17.2045%" y="414.50"></text></g><g><title>__init__ (autograd/core.py:36) (483 samples, 0.67%)</title><rect x="16.9558%" y="420" width="0.6656%" height="15" fill="rgb(249,222,13)" fg:x="12304" fg:w="483"/><text x="17.2058%" y="430.50"></text></g><g><title>interp_coeff (legume/gme/gme.py:295) (505 samples, 0.70%)</title><rect x="16.9283%" y="372" width="0.6959%" height="15" fill="rgb(244,185,38)" fg:x="12284" fg:w="505"/><text x="17.1783%" y="382.50"></text></g><g><title>&lt;listcomp&gt; (legume/gme/gme.py:295) (505 samples, 0.70%)</title><rect x="16.9283%" y="388" width="0.6959%" height="15" fill="rgb(236,202,9)" fg:x="12284" fg:w="505"/><text x="17.1783%" y="398.50"></text></g><g><title>interp_guided (legume/gme/gme.py:312) (542 samples, 0.75%)</title><rect x="16.9283%" y="356" width="0.7469%" height="15" fill="rgb(250,229,37)" fg:x="12284" fg:w="542"/><text x="17.1783%" y="366.50"></text></g><g><title>_construct_mat (legume/gme/gme.py:586) (625 samples, 0.86%)</title><rect x="16.8924%" y="324" width="0.8613%" height="15" fill="rgb(206,174,23)" fg:x="12258" fg:w="625"/><text x="17.1424%" y="334.50"></text></g><g><title>_get_guided (legume/gme/gme.py:323) (625 samples, 0.86%)</title><rect x="16.8924%" y="340" width="0.8613%" height="15" fill="rgb(211,33,43)" fg:x="12258" fg:w="625"/><text x="17.1424%" y="350.50"></text></g><g><title>array (autograd/numpy/numpy_wrapper.py:58) (81 samples, 0.11%)</title><rect x="17.8626%" y="388" width="0.1116%" height="15" fill="rgb(245,58,50)" fg:x="12962" fg:w="81"/><text x="18.1126%" y="398.50"></text></g><g><title>interp_guided (legume/gme/gme.py:312) (137 samples, 0.19%)</title><rect x="17.7868%" y="356" width="0.1888%" height="15" fill="rgb(244,68,36)" fg:x="12907" fg:w="137"/><text x="18.0368%" y="366.50"></text></g><g><title>interp_coeff (legume/gme/gme.py:296) (82 samples, 0.11%)</title><rect x="17.8626%" y="372" width="0.1130%" height="15" fill="rgb(232,229,15)" fg:x="12962" fg:w="82"/><text x="18.1126%" y="382.50"></text></g><g><title>array (autograd/numpy/numpy_wrapper.py:60) (74 samples, 0.10%)</title><rect x="18.0486%" y="404" width="0.1020%" height="15" fill="rgb(254,30,23)" fg:x="13097" fg:w="74"/><text x="18.2986%" y="414.50"></text></g><g><title>array (autograd/numpy/numpy_wrapper.py:58) (98 samples, 0.14%)</title><rect x="18.0321%" y="388" width="0.1351%" height="15" fill="rgb(235,160,14)" fg:x="13085" fg:w="98"/><text x="18.2821%" y="398.50"></text></g><g><title>_construct_mat (legume/gme/gme.py:596) (301 samples, 0.41%)</title><rect x="17.7537%" y="324" width="0.4148%" height="15" fill="rgb(212,155,44)" fg:x="12883" fg:w="301"/><text x="18.0037%" y="334.50"></text></g><g><title>_get_guided (legume/gme/gme.py:323) (301 samples, 0.41%)</title><rect x="17.7537%" y="340" width="0.4148%" height="15" fill="rgb(226,2,50)" fg:x="12883" fg:w="301"/><text x="18.0037%" y="350.50"></text></g><g><title>interp_guided (legume/gme/gme.py:313) (140 samples, 0.19%)</title><rect x="17.9756%" y="356" width="0.1929%" height="15" fill="rgb(234,177,6)" fg:x="13044" fg:w="140"/><text x="18.2256%" y="366.50"></text></g><g><title>interp_coeff (legume/gme/gme.py:296) (99 samples, 0.14%)</title><rect x="18.0321%" y="372" width="0.1364%" height="15" fill="rgb(217,24,9)" fg:x="13085" fg:w="99"/><text x="18.2821%" y="382.50"></text></g><g><title>mat_te_te (legume/gme/matrix_elements.py:46) (87 samples, 0.12%)</title><rect x="18.1699%" y="340" width="0.1199%" height="15" fill="rgb(220,13,46)" fg:x="13185" fg:w="87"/><text x="18.4199%" y="350.50"></text></g><g><title>f_wrapped (autograd/tracer.py:44) (95 samples, 0.13%)</title><rect x="18.2898%" y="372" width="0.1309%" height="15" fill="rgb(239,221,27)" fg:x="13272" fg:w="95"/><text x="18.5398%" y="382.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (95 samples, 0.13%)</title><rect x="18.2898%" y="388" width="0.1309%" height="15" fill="rgb(222,198,25)" fg:x="13272" fg:w="95"/><text x="18.5398%" y="398.50"></text></g><g><title>__add__ (autograd/numpy/numpy_boxes.py:26) (98 samples, 0.14%)</title><rect x="18.2898%" y="356" width="0.1351%" height="15" fill="rgb(211,99,13)" fg:x="13272" fg:w="98"/><text x="18.5398%" y="366.50"></text></g><g><title>mat_te_te (legume/gme/matrix_elements.py:48) (139 samples, 0.19%)</title><rect x="18.2898%" y="340" width="0.1916%" height="15" fill="rgb(232,111,31)" fg:x="13272" fg:w="139"/><text x="18.5398%" y="350.50"></text></g><g><title>I_alpha (legume/gme/slab_modes.py:10) (114 samples, 0.16%)</title><rect x="18.5516%" y="372" width="0.1571%" height="15" fill="rgb(245,82,37)" fg:x="13462" fg:w="114"/><text x="18.8016%" y="382.50"></text></g><g><title>IJ_layer (legume/gme/matrix_elements.py:19) (125 samples, 0.17%)</title><rect x="18.5516%" y="356" width="0.1723%" height="15" fill="rgb(227,149,46)" fg:x="13462" fg:w="125"/><text x="18.8016%" y="366.50"></text></g><g><title>mat_te_te (legume/gme/matrix_elements.py:49) (209 samples, 0.29%)</title><rect x="18.4814%" y="340" width="0.2880%" height="15" fill="rgb(218,36,50)" fg:x="13411" fg:w="209"/><text x="18.7314%" y="350.50"></text></g><g><title>I_alpha (legume/gme/slab_modes.py:10) (124 samples, 0.17%)</title><rect x="18.9017%" y="372" width="0.1709%" height="15" fill="rgb(226,80,48)" fg:x="13716" fg:w="124"/><text x="19.1517%" y="382.50"></text></g><g><title>f_wrapped (autograd/tracer.py:44) (78 samples, 0.11%)</title><rect x="18.9651%" y="388" width="0.1075%" height="15" fill="rgb(238,224,15)" fg:x="13762" fg:w="78"/><text x="19.2151%" y="398.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (78 samples, 0.11%)</title><rect x="18.9651%" y="404" width="0.1075%" height="15" fill="rgb(241,136,10)" fg:x="13762" fg:w="78"/><text x="19.2151%" y="414.50"></text></g><g><title>IJ_layer (legume/gme/matrix_elements.py:19) (136 samples, 0.19%)</title><rect x="18.9017%" y="356" width="0.1874%" height="15" fill="rgb(208,32,45)" fg:x="13716" fg:w="136"/><text x="19.1517%" y="366.50"></text></g><g><title>mat_te_te (legume/gme/matrix_elements.py:52) (221 samples, 0.30%)</title><rect x="18.8300%" y="340" width="0.3046%" height="15" fill="rgb(207,135,9)" fg:x="13664" fg:w="221"/><text x="19.0800%" y="350.50"></text></g><g><title>f_wrapped (autograd/tracer.py:44) (95 samples, 0.13%)</title><rect x="19.3261%" y="388" width="0.1309%" height="15" fill="rgb(206,86,44)" fg:x="14024" fg:w="95"/><text x="19.5761%" y="398.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (95 samples, 0.13%)</title><rect x="19.3261%" y="404" width="0.1309%" height="15" fill="rgb(245,177,15)" fg:x="14024" fg:w="95"/><text x="19.5761%" y="414.50"></text></g><g><title>I_alpha (legume/gme/slab_modes.py:10) (142 samples, 0.20%)</title><rect x="19.2627%" y="372" width="0.1957%" height="15" fill="rgb(206,64,50)" fg:x="13978" fg:w="142"/><text x="19.5127%" y="382.50"></text></g><g><title>IJ_layer (legume/gme/matrix_elements.py:19) (151 samples, 0.21%)</title><rect x="19.2627%" y="356" width="0.2081%" height="15" fill="rgb(234,36,40)" fg:x="13978" fg:w="151"/><text x="19.5127%" y="366.50"></text></g><g><title>mat_te_te (legume/gme/matrix_elements.py:55) (225 samples, 0.31%)</title><rect x="19.1814%" y="340" width="0.3101%" height="15" fill="rgb(213,64,8)" fg:x="13919" fg:w="225"/><text x="19.4314%" y="350.50"></text></g><g><title>I_alpha (legume/gme/slab_modes.py:10) (120 samples, 0.17%)</title><rect x="19.6334%" y="372" width="0.1654%" height="15" fill="rgb(210,75,36)" fg:x="14247" fg:w="120"/><text x="19.8834%" y="382.50"></text></g><g><title>f_wrapped (autograd/tracer.py:44) (88 samples, 0.12%)</title><rect x="19.6775%" y="388" width="0.1213%" height="15" fill="rgb(229,88,21)" fg:x="14279" fg:w="88"/><text x="19.9275%" y="398.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (88 samples, 0.12%)</title><rect x="19.6775%" y="404" width="0.1213%" height="15" fill="rgb(252,204,47)" fg:x="14279" fg:w="88"/><text x="19.9275%" y="414.50"></text></g><g><title>IJ_layer (legume/gme/matrix_elements.py:19) (121 samples, 0.17%)</title><rect x="19.6334%" y="356" width="0.1667%" height="15" fill="rgb(208,77,27)" fg:x="14247" fg:w="121"/><text x="19.8834%" y="366.50"></text></g><g><title>mat_te_te (legume/gme/matrix_elements.py:58) (203 samples, 0.28%)</title><rect x="19.5494%" y="340" width="0.2797%" height="15" fill="rgb(221,76,26)" fg:x="14186" fg:w="203"/><text x="19.7994%" y="350.50"></text></g><g><title>_construct_mat (legume/gme/gme.py:600) (1,252 samples, 1.73%)</title><rect x="18.1685%" y="324" width="1.7253%" height="15" fill="rgb(225,139,18)" fg:x="13184" fg:w="1252"/><text x="18.4185%" y="334.50"></text></g><g><title>_construct_mat (legume/gme/gme.py:642) (83 samples, 0.11%)</title><rect x="19.9283%" y="324" width="0.1144%" height="15" fill="rgb(230,137,11)" fg:x="14461" fg:w="83"/><text x="20.1783%" y="334.50"></text></g><g><title>objective (optomization/minimize.py:67) (7,215 samples, 9.94%)</title><rect x="10.1399%" y="292" width="9.9428%" height="15" fill="rgb(212,28,1)" fg:x="7358" fg:w="7215"/><text x="10.3899%" y="302.50">objective (opt..</text></g><g><title>run (legume/gme/gme.py:999) (6,160 samples, 8.49%)</title><rect x="11.5937%" y="308" width="8.4889%" height="15" fill="rgb(248,164,17)" fg:x="8413" fg:w="6160"/><text x="11.8437%" y="318.50">run (legume/..</text></g><g><title>f_wrapped (autograd/tracer.py:45) (416 samples, 0.57%)</title><rect x="20.1433%" y="452" width="0.5733%" height="15" fill="rgb(222,171,42)" fg:x="14617" fg:w="416"/><text x="20.3933%" y="462.50"></text></g><g><title>__init__ (autograd/core.py:36) (413 samples, 0.57%)</title><rect x="20.1475%" y="468" width="0.5691%" height="15" fill="rgb(243,84,45)" fg:x="14620" fg:w="413"/><text x="20.3975%" y="478.50"></text></g><g><title>interp_coeff (legume/gme/gme.py:295) (447 samples, 0.62%)</title><rect x="20.1034%" y="420" width="0.6160%" height="15" fill="rgb(252,49,23)" fg:x="14588" fg:w="447"/><text x="20.3534%" y="430.50"></text></g><g><title>&lt;listcomp&gt; (legume/gme/gme.py:295) (447 samples, 0.62%)</title><rect x="20.1034%" y="436" width="0.6160%" height="15" fill="rgb(215,19,7)" fg:x="14588" fg:w="447"/><text x="20.3534%" y="446.50"></text></g><g><title>interp_guided (legume/gme/gme.py:312) (518 samples, 0.71%)</title><rect x="20.1034%" y="404" width="0.7138%" height="15" fill="rgb(238,81,41)" fg:x="14588" fg:w="518"/><text x="20.3534%" y="414.50"></text></g><g><title>ft_field_xy (legume/gme/gme.py:2049) (641 samples, 0.88%)</title><rect x="20.0827%" y="372" width="0.8833%" height="15" fill="rgb(210,199,37)" fg:x="14573" fg:w="641"/><text x="20.3327%" y="382.50"></text></g><g><title>_get_guided (legume/gme/gme.py:323) (641 samples, 0.88%)</title><rect x="20.0827%" y="388" width="0.8833%" height="15" fill="rgb(244,192,49)" fg:x="14573" fg:w="641"/><text x="20.3327%" y="398.50"></text></g><g><title>interp_guided (legume/gme/gme.py:313) (108 samples, 0.15%)</title><rect x="20.8172%" y="404" width="0.1488%" height="15" fill="rgb(226,211,11)" fg:x="15106" fg:w="108"/><text x="21.0672%" y="414.50"></text></g><g><title>get_xyfield (optomization/cost.py:102) (642 samples, 0.88%)</title><rect x="20.0827%" y="356" width="0.8847%" height="15" fill="rgb(236,162,54)" fg:x="14573" fg:w="642"/><text x="20.3327%" y="366.50"></text></g><g><title>comp_pdote (optomization/cost.py:123) (891 samples, 1.23%)</title><rect x="20.0827%" y="340" width="1.2279%" height="15" fill="rgb(220,229,9)" fg:x="14573" fg:w="891"/><text x="20.3327%" y="350.50"></text></g><g><title>get_xyfield (optomization/cost.py:111) (249 samples, 0.34%)</title><rect x="20.9674%" y="356" width="0.3431%" height="15" fill="rgb(250,87,22)" fg:x="15215" fg:w="249"/><text x="21.2174%" y="366.50"></text></g><g><title>ft_field_xy (legume/gme/gme.py:2049) (180 samples, 0.25%)</title><rect x="21.3119%" y="372" width="0.2481%" height="15" fill="rgb(239,43,17)" fg:x="15465" fg:w="180"/><text x="21.5619%" y="382.50"></text></g><g><title>_get_guided (legume/gme/gme.py:323) (180 samples, 0.25%)</title><rect x="21.3119%" y="388" width="0.2481%" height="15" fill="rgb(231,177,25)" fg:x="15465" fg:w="180"/><text x="21.5619%" y="398.50"></text></g><g><title>interp_guided (legume/gme/gme.py:313) (95 samples, 0.13%)</title><rect x="21.4291%" y="404" width="0.1309%" height="15" fill="rgb(219,179,1)" fg:x="15550" fg:w="95"/><text x="21.6791%" y="414.50"></text></g><g><title>get_xyfield (optomization/cost.py:102) (183 samples, 0.25%)</title><rect x="21.3105%" y="356" width="0.2522%" height="15" fill="rgb(238,219,53)" fg:x="15464" fg:w="183"/><text x="21.5605%" y="366.50"></text></g><g><title>f_wrapped (autograd/tracer.py:45) (512 samples, 0.71%)</title><rect x="21.7378%" y="388" width="0.7056%" height="15" fill="rgb(232,167,36)" fg:x="15774" fg:w="512"/><text x="21.9878%" y="398.50"></text></g><g><title>__init__ (autograd/core.py:36) (510 samples, 0.70%)</title><rect x="21.7405%" y="404" width="0.7028%" height="15" fill="rgb(244,19,51)" fg:x="15776" fg:w="510"/><text x="21.9905%" y="414.50"></text></g><g><title>__rmul__ (autograd/numpy/numpy_boxes.py:36) (549 samples, 0.76%)</title><rect x="21.6909%" y="372" width="0.7566%" height="15" fill="rgb(224,6,22)" fg:x="15740" fg:w="549"/><text x="21.9409%" y="382.50"></text></g><g><title>comp_pdote (optomization/cost.py:124) (909 samples, 1.25%)</title><rect x="21.3105%" y="340" width="1.2527%" height="15" fill="rgb(224,145,5)" fg:x="15464" fg:w="909"/><text x="21.5605%" y="350.50"></text></g><g><title>get_xyfield (optomization/cost.py:111) (726 samples, 1.00%)</title><rect x="21.5627%" y="356" width="1.0005%" height="15" fill="rgb(234,130,49)" fg:x="15647" fg:w="726"/><text x="21.8127%" y="366.50"></text></g><g><title>comp_backscatter (optomization/cost.py:148) (1,801 samples, 2.48%)</title><rect x="20.0827%" y="324" width="2.4819%" height="15" fill="rgb(254,6,2)" fg:x="14573" fg:w="1801"/><text x="20.3327%" y="334.50">co..</text></g><g><title>grad (autograd/differential_operators.py:28) (9,397 samples, 12.95%)</title><rect x="9.6548%" y="228" width="12.9498%" height="15" fill="rgb(208,96,46)" fg:x="7006" fg:w="9397"/><text x="9.9048%" y="238.50">grad (autograd/diff..</text></g><g><title>make_vjp (autograd/core.py:10) (9,397 samples, 12.95%)</title><rect x="9.6548%" y="244" width="12.9498%" height="15" fill="rgb(239,3,39)" fg:x="7006" fg:w="9397"/><text x="9.9048%" y="254.50">make_vjp (autograd/..</text></g><g><title>trace (autograd/tracer.py:10) (9,397 samples, 12.95%)</title><rect x="9.6548%" y="260" width="12.9498%" height="15" fill="rgb(233,210,1)" fg:x="7006" fg:w="9397"/><text x="9.9048%" y="270.50">trace (autograd/tra..</text></g><g><title>unary_f (autograd/wrap_util.py:15) (9,397 samples, 12.95%)</title><rect x="9.6548%" y="276" width="12.9498%" height="15" fill="rgb(244,137,37)" fg:x="7006" fg:w="9397"/><text x="9.9048%" y="286.50">unary_f (autograd/w..</text></g><g><title>objective (optomization/minimize.py:68) (1,830 samples, 2.52%)</title><rect x="20.0827%" y="292" width="2.5219%" height="15" fill="rgb(240,136,2)" fg:x="14573" fg:w="1830"/><text x="20.3327%" y="302.50">ob..</text></g><g><title>cost (optomization/cost.py:179) (1,830 samples, 2.52%)</title><rect x="20.0827%" y="308" width="2.5219%" height="15" fill="rgb(239,18,37)" fg:x="14573" fg:w="1830"/><text x="20.3327%" y="318.50">co..</text></g><g><title>backward_pass (autograd/core.py:19) (201 samples, 0.28%)</title><rect x="22.6046%" y="260" width="0.2770%" height="15" fill="rgb(218,185,22)" fg:x="16403" fg:w="201"/><text x="22.8546%" y="270.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:52) (228 samples, 0.31%)</title><rect x="23.3556%" y="308" width="0.3142%" height="15" fill="rgb(225,218,4)" fg:x="16948" fg:w="228"/><text x="23.6056%" y="318.50"></text></g><g><title>unbroadcast (autograd/numpy/numpy_vjps.py:653) (89 samples, 0.12%)</title><rect x="23.8531%" y="308" width="0.1226%" height="15" fill="rgb(230,182,32)" fg:x="17309" fg:w="89"/><text x="24.1031%" y="318.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (75 samples, 0.10%)</title><rect x="23.8724%" y="324" width="0.1034%" height="15" fill="rgb(242,56,43)" fg:x="17323" fg:w="75"/><text x="24.1224%" y="334.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:660) (591 samples, 0.81%)</title><rect x="23.2109%" y="292" width="0.8144%" height="15" fill="rgb(233,99,24)" fg:x="16843" fg:w="591"/><text x="23.4609%" y="302.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:70) (74 samples, 0.10%)</title><rect x="24.0474%" y="292" width="0.1020%" height="15" fill="rgb(234,209,42)" fg:x="17450" fg:w="74"/><text x="24.2974%" y="302.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:701) (172 samples, 0.24%)</title><rect x="24.1494%" y="292" width="0.2370%" height="15" fill="rgb(227,7,12)" fg:x="17524" fg:w="172"/><text x="24.3994%" y="302.50"></text></g><g><title>vspace (autograd/core.py:233) (78 samples, 0.11%)</title><rect x="24.2789%" y="308" width="0.1075%" height="15" fill="rgb(245,203,43)" fg:x="17618" fg:w="78"/><text x="24.5289%" y="318.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:81) (271 samples, 0.37%)</title><rect x="24.3905%" y="292" width="0.3735%" height="15" fill="rgb(238,205,33)" fg:x="17699" fg:w="271"/><text x="24.6405%" y="302.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (256 samples, 0.35%)</title><rect x="24.4112%" y="308" width="0.3528%" height="15" fill="rgb(231,56,7)" fg:x="17714" fg:w="256"/><text x="24.6612%" y="318.50"></text></g><g><title>vjp (legume/primitives.py:122) (75 samples, 0.10%)</title><rect x="24.8908%" y="292" width="0.1034%" height="15" fill="rgb(244,186,29)" fg:x="18062" fg:w="75"/><text x="25.1408%" y="302.50"></text></g><g><title>&lt;lambda&gt; (autograd/core.py:67) (1,634 samples, 2.25%)</title><rect x="23.0014%" y="276" width="2.2518%" height="15" fill="rgb(234,111,31)" fg:x="16691" fg:w="1634"/><text x="23.2514%" y="286.50">&lt;..</text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:33) (126 samples, 0.17%)</title><rect x="25.4847%" y="308" width="0.1736%" height="15" fill="rgb(241,149,10)" fg:x="18493" fg:w="126"/><text x="25.7347%" y="318.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:34) (125 samples, 0.17%)</title><rect x="25.6584%" y="308" width="0.1723%" height="15" fill="rgb(249,206,44)" fg:x="18619" fg:w="125"/><text x="25.9084%" y="318.50"></text></g><g><title>unbroadcast (autograd/numpy/numpy_vjps.py:653) (128 samples, 0.18%)</title><rect x="26.0842%" y="308" width="0.1764%" height="15" fill="rgb(251,153,30)" fg:x="18928" fg:w="128"/><text x="26.3342%" y="318.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (108 samples, 0.15%)</title><rect x="26.1118%" y="324" width="0.1488%" height="15" fill="rgb(239,152,38)" fg:x="18948" fg:w="108"/><text x="26.3618%" y="334.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2313) (92 samples, 0.13%)</title><rect x="26.1338%" y="340" width="0.1268%" height="15" fill="rgb(249,139,47)" fg:x="18964" fg:w="92"/><text x="26.3838%" y="350.50"></text></g><g><title>backward_pass (autograd/core.py:21) (2,479 samples, 3.42%)</title><rect x="22.9325%" y="260" width="3.4162%" height="15" fill="rgb(244,64,35)" fg:x="16641" fg:w="2479"/><text x="23.1825%" y="270.50">bac..</text></g><g><title>&lt;lambda&gt; (autograd/core.py:78) (795 samples, 1.10%)</title><rect x="25.2532%" y="276" width="1.0956%" height="15" fill="rgb(216,46,15)" fg:x="18325" fg:w="795"/><text x="25.5032%" y="286.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:660) (642 samples, 0.88%)</title><rect x="25.4641%" y="292" width="0.8847%" height="15" fill="rgb(250,74,19)" fg:x="18478" fg:w="642"/><text x="25.7141%" y="302.50"></text></g><g><title>backward_pass (autograd/core.py:22) (103 samples, 0.14%)</title><rect x="26.3488%" y="260" width="0.1419%" height="15" fill="rgb(249,42,33)" fg:x="19120" fg:w="103"/><text x="26.5988%" y="270.50"></text></g><g><title>mut_add (autograd/numpy/numpy_vjps.py:698) (213 samples, 0.29%)</title><rect x="26.7140%" y="324" width="0.2935%" height="15" fill="rgb(242,149,17)" fg:x="19385" fg:w="213"/><text x="26.9640%" y="334.50"></text></g><g><title>add_outgrads (autograd/core.py:165) (259 samples, 0.36%)</title><rect x="26.6520%" y="276" width="0.3569%" height="15" fill="rgb(244,29,21)" fg:x="19340" fg:w="259"/><text x="26.9020%" y="286.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (220 samples, 0.30%)</title><rect x="26.7057%" y="292" width="0.3032%" height="15" fill="rgb(220,130,37)" fg:x="19379" fg:w="220"/><text x="26.9557%" y="302.50"></text></g><g><title>sparse_add (autograd/core.py:186) (218 samples, 0.30%)</title><rect x="26.7085%" y="308" width="0.3004%" height="15" fill="rgb(211,67,2)" fg:x="19381" fg:w="218"/><text x="26.9585%" y="318.50"></text></g><g><title>_minimize_trustregion_constr (scipy/optimize/_trustregion_constr/minimize_trustregion_constr.py:345) (16,280 samples, 22.44%)</title><rect x="4.8109%" y="132" width="22.4351%" height="15" fill="rgb(235,68,52)" fg:x="3491" fg:w="16280"/><text x="5.0609%" y="142.50">_minimize_trustregion_constr (scipy/..</text></g><g><title>__init__ (scipy/optimize/_differentiable_functions.py:232) (12,821 samples, 17.67%)</title><rect x="9.5776%" y="148" width="17.6683%" height="15" fill="rgb(246,142,3)" fg:x="6950" fg:w="12821"/><text x="9.8276%" y="158.50">__init__ (scipy/optimize/_d..</text></g><g><title>_update_grad (scipy/optimize/_differentiable_functions.py:307) (12,821 samples, 17.67%)</title><rect x="9.5776%" y="164" width="17.6683%" height="15" fill="rgb(241,25,7)" fg:x="6950" fg:w="12821"/><text x="9.8276%" y="174.50">_update_grad (scipy/optimiz..</text></g><g><title>wrapped (scipy/optimize/_differentiable_functions.py:42) (12,821 samples, 17.67%)</title><rect x="9.5776%" y="180" width="17.6683%" height="15" fill="rgb(242,119,39)" fg:x="6950" fg:w="12821"/><text x="9.8276%" y="190.50">wrapped (scipy/optimize/_di..</text></g><g><title>scipy_grad (optomization/minimize.py:230) (12,821 samples, 17.67%)</title><rect x="9.5776%" y="196" width="17.6683%" height="15" fill="rgb(241,98,45)" fg:x="6950" fg:w="12821"/><text x="9.8276%" y="206.50">scipy_grad (optomization/mi..</text></g><g><title>nary_f (autograd/wrap_util.py:20) (12,821 samples, 17.67%)</title><rect x="9.5776%" y="212" width="17.6683%" height="15" fill="rgb(254,28,30)" fg:x="6950" fg:w="12821"/><text x="9.8276%" y="222.50">nary_f (autograd/wrap_util...</text></g><g><title>grad (autograd/differential_operators.py:32) (3,368 samples, 4.64%)</title><rect x="22.6046%" y="228" width="4.6414%" height="15" fill="rgb(241,142,54)" fg:x="16403" fg:w="3368"/><text x="22.8546%" y="238.50">grad ..</text></g><g><title>vjp (autograd/core.py:14) (3,368 samples, 4.64%)</title><rect x="22.6046%" y="244" width="4.6414%" height="15" fill="rgb(222,85,15)" fg:x="16403" fg:w="3368"/><text x="22.8546%" y="254.50">vjp (..</text></g><g><title>backward_pass (autograd/core.py:23) (548 samples, 0.76%)</title><rect x="26.4907%" y="260" width="0.7552%" height="15" fill="rgb(210,85,47)" fg:x="19223" fg:w="548"/><text x="26.7407%" y="270.50"></text></g><g><title>eigh (numpy/linalg/linalg.py:1487) (427 samples, 0.59%)</title><rect x="27.3217%" y="292" width="0.5884%" height="15" fill="rgb(224,206,25)" fg:x="19826" fg:w="427"/><text x="27.5717%" y="302.50"></text></g><g><title>run (legume/gme/gme.py:1032) (432 samples, 0.60%)</title><rect x="27.3162%" y="260" width="0.5953%" height="15" fill="rgb(243,201,19)" fg:x="19822" fg:w="432"/><text x="27.5662%" y="270.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (428 samples, 0.59%)</title><rect x="27.3217%" y="276" width="0.5898%" height="15" fill="rgb(236,59,4)" fg:x="19826" fg:w="428"/><text x="27.5717%" y="286.50"></text></g><g><title>D22 (legume/gme/slab_modes.py:255) (100 samples, 0.14%)</title><rect x="28.1362%" y="420" width="0.1378%" height="15" fill="rgb(254,179,45)" fg:x="20417" fg:w="100"/><text x="28.3862%" y="430.50"></text></g><g><title>f_raise (scipy/optimize/_zeros_py.py:94) (229 samples, 0.32%)</title><rect x="28.0989%" y="388" width="0.3156%" height="15" fill="rgb(226,14,10)" fg:x="20390" fg:w="229"/><text x="28.3489%" y="398.50"></text></g><g><title>&lt;lambda&gt; (legume/gme/slab_modes.py:119) (225 samples, 0.31%)</title><rect x="28.1045%" y="404" width="0.3101%" height="15" fill="rgb(244,27,41)" fg:x="20394" fg:w="225"/><text x="28.3545%" y="414.50"></text></g><g><title>brentq (scipy/optimize/_zeros_py.py:798) (265 samples, 0.37%)</title><rect x="28.0617%" y="372" width="0.3652%" height="15" fill="rgb(235,35,32)" fg:x="20363" fg:w="265"/><text x="28.3117%" y="382.50"></text></g><g><title>guided_mode_given_g (legume/gme/slab_modes.py:142) (271 samples, 0.37%)</title><rect x="28.0548%" y="324" width="0.3735%" height="15" fill="rgb(218,68,31)" fg:x="20358" fg:w="271"/><text x="28.3048%" y="334.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (269 samples, 0.37%)</title><rect x="28.0576%" y="340" width="0.3707%" height="15" fill="rgb(207,120,37)" fg:x="20360" fg:w="269"/><text x="28.3076%" y="350.50"></text></g><g><title>fsolve (legume/utils.py:190) (268 samples, 0.37%)</title><rect x="28.0590%" y="356" width="0.3693%" height="15" fill="rgb(227,98,0)" fg:x="20361" fg:w="268"/><text x="28.3090%" y="366.50"></text></g><g><title>AB_matrices (legume/gme/slab_modes.py:401) (109 samples, 0.15%)</title><rect x="28.4779%" y="340" width="0.1502%" height="15" fill="rgb(207,7,3)" fg:x="20665" fg:w="109"/><text x="28.7279%" y="350.50"></text></g><g><title>guided_mode_given_g (legume/gme/slab_modes.py:149) (161 samples, 0.22%)</title><rect x="28.4724%" y="324" width="0.2219%" height="15" fill="rgb(206,98,19)" fg:x="20661" fg:w="161"/><text x="28.7224%" y="334.50"></text></g><g><title>guided_mode_given_g (legume/gme/slab_modes.py:151) (104 samples, 0.14%)</title><rect x="28.6943%" y="324" width="0.1433%" height="15" fill="rgb(217,5,26)" fg:x="20822" fg:w="104"/><text x="28.9443%" y="334.50"></text></g><g><title>_compute_guided (legume/gme/gme.py:380) (634 samples, 0.87%)</title><rect x="27.9735%" y="292" width="0.8737%" height="15" fill="rgb(235,190,38)" fg:x="20299" fg:w="634"/><text x="28.2235%" y="302.50"></text></g><g><title>guided_modes (legume/gme/slab_modes.py:77) (623 samples, 0.86%)</title><rect x="27.9887%" y="308" width="0.8585%" height="15" fill="rgb(247,86,24)" fg:x="20310" fg:w="623"/><text x="28.2387%" y="318.50"></text></g><g><title>_construct_mat (legume/gme/gme.py:536) (635 samples, 0.88%)</title><rect x="27.9735%" y="276" width="0.8751%" height="15" fill="rgb(205,101,16)" fg:x="20299" fg:w="635"/><text x="28.2235%" y="286.50"></text></g><g><title>_construct_mat (legume/gme/gme.py:596) (126 samples, 0.17%)</title><rect x="28.9423%" y="276" width="0.1736%" height="15" fill="rgb(246,168,33)" fg:x="21002" fg:w="126"/><text x="29.1923%" y="286.50"></text></g><g><title>_get_guided (legume/gme/gme.py:323) (126 samples, 0.17%)</title><rect x="28.9423%" y="292" width="0.1736%" height="15" fill="rgb(231,114,1)" fg:x="21002" fg:w="126"/><text x="29.1923%" y="302.50"></text></g><g><title>mat_te_te (legume/gme/matrix_elements.py:49) (117 samples, 0.16%)</title><rect x="29.2634%" y="292" width="0.1612%" height="15" fill="rgb(207,184,53)" fg:x="21235" fg:w="117"/><text x="29.5134%" y="302.50"></text></g><g><title>I_alpha (legume/gme/slab_modes.py:10) (88 samples, 0.12%)</title><rect x="29.5184%" y="324" width="0.1213%" height="15" fill="rgb(224,95,51)" fg:x="21420" fg:w="88"/><text x="29.7684%" y="334.50"></text></g><g><title>mat_te_te (legume/gme/matrix_elements.py:52) (129 samples, 0.18%)</title><rect x="29.4646%" y="292" width="0.1778%" height="15" fill="rgb(212,188,45)" fg:x="21381" fg:w="129"/><text x="29.7146%" y="302.50"></text></g><g><title>IJ_layer (legume/gme/matrix_elements.py:19) (90 samples, 0.12%)</title><rect x="29.5184%" y="308" width="0.1240%" height="15" fill="rgb(223,154,38)" fg:x="21420" fg:w="90"/><text x="29.7684%" y="318.50"></text></g><g><title>I_alpha (legume/gme/slab_modes.py:10) (108 samples, 0.15%)</title><rect x="29.7347%" y="324" width="0.1488%" height="15" fill="rgb(251,22,52)" fg:x="21577" fg:w="108"/><text x="29.9847%" y="334.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (86 samples, 0.12%)</title><rect x="29.7650%" y="340" width="0.1185%" height="15" fill="rgb(229,209,22)" fg:x="21599" fg:w="86"/><text x="30.0150%" y="350.50"></text></g><g><title>IJ_layer (legume/gme/matrix_elements.py:19) (111 samples, 0.15%)</title><rect x="29.7347%" y="308" width="0.1530%" height="15" fill="rgb(234,138,34)" fg:x="21577" fg:w="111"/><text x="29.9847%" y="318.50"></text></g><g><title>mat_te_te (legume/gme/matrix_elements.py:55) (156 samples, 0.21%)</title><rect x="29.6741%" y="292" width="0.2150%" height="15" fill="rgb(212,95,11)" fg:x="21533" fg:w="156"/><text x="29.9241%" y="302.50"></text></g><g><title>I_alpha (legume/gme/slab_modes.py:10) (112 samples, 0.15%)</title><rect x="29.9828%" y="324" width="0.1543%" height="15" fill="rgb(240,179,47)" fg:x="21757" fg:w="112"/><text x="30.2328%" y="334.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (85 samples, 0.12%)</title><rect x="30.0200%" y="340" width="0.1171%" height="15" fill="rgb(240,163,11)" fg:x="21784" fg:w="85"/><text x="30.2700%" y="350.50"></text></g><g><title>mat_te_te (legume/gme/matrix_elements.py:58) (158 samples, 0.22%)</title><rect x="29.9235%" y="292" width="0.2177%" height="15" fill="rgb(236,37,12)" fg:x="21714" fg:w="158"/><text x="30.1735%" y="302.50"></text></g><g><title>IJ_layer (legume/gme/matrix_elements.py:19) (115 samples, 0.16%)</title><rect x="29.9828%" y="308" width="0.1585%" height="15" fill="rgb(232,164,16)" fg:x="21757" fg:w="115"/><text x="30.2328%" y="318.50"></text></g><g><title>_construct_mat (legume/gme/gme.py:600) (766 samples, 1.06%)</title><rect x="29.1160%" y="276" width="1.0556%" height="15" fill="rgb(244,205,15)" fg:x="21128" fg:w="766"/><text x="29.3660%" y="286.50"></text></g><g><title>_gme_constrs_complex (optomization/constraints.py:217) (2,124 samples, 2.93%)</title><rect x="27.3162%" y="244" width="2.9270%" height="15" fill="rgb(223,117,47)" fg:x="19822" fg:w="2124"/><text x="27.5662%" y="254.50">_g..</text></g><g><title>run (legume/gme/gme.py:999) (1,647 samples, 2.27%)</title><rect x="27.9735%" y="260" width="2.2697%" height="15" fill="rgb(244,107,35)" fg:x="20299" fg:w="1647"/><text x="28.2235%" y="270.50">r..</text></g><g><title>ftinv (legume/utils.py:28) (215 samples, 0.30%)</title><rect x="30.2501%" y="292" width="0.2963%" height="15" fill="rgb(205,140,8)" fg:x="21951" fg:w="215"/><text x="30.5001%" y="302.50"></text></g><g><title>NG (optomization/utils.py:28) (229 samples, 0.32%)</title><rect x="30.2432%" y="260" width="0.3156%" height="15" fill="rgb(228,84,46)" fg:x="21946" fg:w="229"/><text x="30.4932%" y="270.50"></text></g><g><title>get_field_xy (legume/gme/gme.py:2189) (224 samples, 0.31%)</title><rect x="30.2501%" y="276" width="0.3087%" height="15" fill="rgb(254,188,9)" fg:x="21951" fg:w="224"/><text x="30.5001%" y="286.50"></text></g><g><title>ftinv (legume/utils.py:28) (340 samples, 0.47%)</title><rect x="30.5712%" y="292" width="0.4685%" height="15" fill="rgb(206,112,54)" fg:x="22184" fg:w="340"/><text x="30.8212%" y="302.50"></text></g><g><title>NG (optomization/utils.py:29) (359 samples, 0.49%)</title><rect x="30.5588%" y="260" width="0.4947%" height="15" fill="rgb(216,84,49)" fg:x="22175" fg:w="359"/><text x="30.8088%" y="270.50"></text></g><g><title>get_field_xy (legume/gme/gme.py:2189) (351 samples, 0.48%)</title><rect x="30.5698%" y="276" width="0.4837%" height="15" fill="rgb(214,194,35)" fg:x="22183" fg:w="351"/><text x="30.8198%" y="286.50"></text></g><g><title>__init__ (scipy/optimize/_differentiable_functions.py:431) (2,764 samples, 3.81%)</title><rect x="27.2459%" y="180" width="3.8090%" height="15" fill="rgb(249,28,3)" fg:x="19771" fg:w="2764"/><text x="27.4959%" y="190.50">__in..</text></g><g><title>update_fun (scipy/optimize/_differentiable_functions.py:428) (2,764 samples, 3.81%)</title><rect x="27.2459%" y="196" width="3.8090%" height="15" fill="rgb(222,56,52)" fg:x="19771" fg:w="2764"/><text x="27.4959%" y="206.50">upda..</text></g><g><title>fun_wrapped (scipy/optimize/_differentiable_functions.py:425) (2,764 samples, 3.81%)</title><rect x="27.2459%" y="212" width="3.8090%" height="15" fill="rgb(245,217,50)" fg:x="19771" fg:w="2764"/><text x="27.4959%" y="222.50">fun_..</text></g><g><title>wrapped (optomization/constraints.py:88) (2,764 samples, 3.81%)</title><rect x="27.2459%" y="228" width="3.8090%" height="15" fill="rgb(213,201,24)" fg:x="19771" fg:w="2764"/><text x="27.4959%" y="238.50">wrap..</text></g><g><title>_gme_constrs_complex (optomization/constraints.py:231) (589 samples, 0.81%)</title><rect x="30.2432%" y="244" width="0.8117%" height="15" fill="rgb(248,116,28)" fg:x="21946" fg:w="589"/><text x="30.4932%" y="254.50"></text></g><g><title>f_wrapped (autograd/tracer.py:44) (412 samples, 0.57%)</title><rect x="31.3209%" y="324" width="0.5678%" height="15" fill="rgb(219,72,43)" fg:x="22728" fg:w="412"/><text x="31.5709%" y="334.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (412 samples, 0.57%)</title><rect x="31.3209%" y="340" width="0.5678%" height="15" fill="rgb(209,138,14)" fg:x="22728" fg:w="412"/><text x="31.5709%" y="350.50"></text></g><g><title>eigh (numpy/linalg/linalg.py:1487) (412 samples, 0.57%)</title><rect x="31.3209%" y="356" width="0.5678%" height="15" fill="rgb(222,18,33)" fg:x="22728" fg:w="412"/><text x="31.5709%" y="366.50"></text></g><g><title>run (legume/gme/gme.py:1032) (426 samples, 0.59%)</title><rect x="31.3030%" y="308" width="0.5871%" height="15" fill="rgb(213,199,7)" fg:x="22715" fg:w="426"/><text x="31.5530%" y="318.50"></text></g><g><title>D22 (legume/gme/slab_modes.py:255) (109 samples, 0.15%)</title><rect x="32.2194%" y="484" width="0.1502%" height="15" fill="rgb(250,110,10)" fg:x="23380" fg:w="109"/><text x="32.4694%" y="494.50"></text></g><g><title>f_raise (scipy/optimize/_zeros_py.py:94) (314 samples, 0.43%)</title><rect x="32.1436%" y="452" width="0.4327%" height="15" fill="rgb(248,123,6)" fg:x="23325" fg:w="314"/><text x="32.3936%" y="462.50"></text></g><g><title>&lt;lambda&gt; (legume/gme/slab_modes.py:119) (303 samples, 0.42%)</title><rect x="32.1588%" y="468" width="0.4176%" height="15" fill="rgb(206,91,31)" fg:x="23336" fg:w="303"/><text x="32.4088%" y="478.50"></text></g><g><title>f_wrapped (autograd/tracer.py:44) (394 samples, 0.54%)</title><rect x="32.0485%" y="388" width="0.5430%" height="15" fill="rgb(211,154,13)" fg:x="23256" fg:w="394"/><text x="32.2985%" y="398.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (389 samples, 0.54%)</title><rect x="32.0554%" y="404" width="0.5361%" height="15" fill="rgb(225,148,7)" fg:x="23261" fg:w="389"/><text x="32.3054%" y="414.50"></text></g><g><title>fsolve (legume/utils.py:190) (375 samples, 0.52%)</title><rect x="32.0747%" y="420" width="0.5168%" height="15" fill="rgb(220,160,43)" fg:x="23275" fg:w="375"/><text x="32.3247%" y="430.50"></text></g><g><title>brentq (scipy/optimize/_zeros_py.py:798) (366 samples, 0.50%)</title><rect x="32.0871%" y="436" width="0.5044%" height="15" fill="rgb(213,52,39)" fg:x="23284" fg:w="366"/><text x="32.3371%" y="446.50"></text></g><g><title>chis_3layer (legume/gme/slab_modes.py:179) (132 samples, 0.18%)</title><rect x="32.6452%" y="564" width="0.1819%" height="15" fill="rgb(243,137,7)" fg:x="23689" fg:w="132"/><text x="32.8952%" y="574.50"></text></g><g><title>chis_3layer (legume/gme/slab_modes.py:180) (91 samples, 0.13%)</title><rect x="32.8271%" y="564" width="0.1254%" height="15" fill="rgb(230,79,13)" fg:x="23821" fg:w="91"/><text x="33.0771%" y="574.50"></text></g><g><title>D22 (legume/gme/slab_modes.py:255) (294 samples, 0.41%)</title><rect x="32.6452%" y="548" width="0.4052%" height="15" fill="rgb(247,105,23)" fg:x="23689" fg:w="294"/><text x="32.8952%" y="558.50"></text></g><g><title>f_wrapped (autograd/tracer.py:60) (885 samples, 1.22%)</title><rect x="33.1647%" y="660" width="1.2196%" height="15" fill="rgb(223,179,41)" fg:x="24066" fg:w="885"/><text x="33.4147%" y="670.50"></text></g><g><title>f_wrapped (autograd/tracer.py:45) (1,080 samples, 1.49%)</title><rect x="33.1262%" y="580" width="1.4883%" height="15" fill="rgb(218,9,34)" fg:x="24038" fg:w="1080"/><text x="33.3762%" y="590.50"></text></g><g><title>__init__ (autograd/core.py:36) (1,079 samples, 1.49%)</title><rect x="33.1275%" y="596" width="1.4869%" height="15" fill="rgb(222,106,8)" fg:x="24039" fg:w="1079"/><text x="33.3775%" y="606.50"></text></g><g><title>vjp_argnums (autograd/core.py:66) (1,079 samples, 1.49%)</title><rect x="33.1275%" y="612" width="1.4869%" height="15" fill="rgb(211,220,0)" fg:x="24039" fg:w="1079"/><text x="33.3775%" y="622.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:33) (1,079 samples, 1.49%)</title><rect x="33.1275%" y="628" width="1.4869%" height="15" fill="rgb(229,52,16)" fg:x="24039" fg:w="1079"/><text x="33.3775%" y="638.50"></text></g><g><title>unbroadcast_f (autograd/numpy/numpy_vjps.py:659) (1,052 samples, 1.45%)</title><rect x="33.1647%" y="644" width="1.4497%" height="15" fill="rgb(212,155,18)" fg:x="24066" fg:w="1052"/><text x="33.4147%" y="654.50"></text></g><g><title>f_wrapped (autograd/tracer.py:61) (167 samples, 0.23%)</title><rect x="34.3843%" y="660" width="0.2301%" height="15" fill="rgb(242,21,14)" fg:x="24951" fg:w="167"/><text x="34.6343%" y="670.50"></text></g><g><title>metadata (autograd/numpy/numpy_wrapper.py:148) (164 samples, 0.23%)</title><rect x="34.3885%" y="676" width="0.2260%" height="15" fill="rgb(222,19,48)" fg:x="24954" fg:w="164"/><text x="34.6385%" y="686.50"></text></g><g><title>__mul__ (autograd/numpy/numpy_boxes.py:28) (1,088 samples, 1.50%)</title><rect x="33.1165%" y="564" width="1.4993%" height="15" fill="rgb(232,45,27)" fg:x="24031" fg:w="1088"/><text x="33.3665%" y="574.50"></text></g><g><title>D22 (legume/gme/slab_modes.py:258) (1,111 samples, 1.53%)</title><rect x="33.1124%" y="548" width="1.5310%" height="15" fill="rgb(249,103,42)" fg:x="24028" fg:w="1111"/><text x="33.3624%" y="558.50"></text></g><g><title>D22 (legume/gme/slab_modes.py:261) (95 samples, 0.13%)</title><rect x="34.6462%" y="548" width="0.1309%" height="15" fill="rgb(246,81,33)" fg:x="25141" fg:w="95"/><text x="34.8962%" y="558.50"></text></g><g><title>D22 (legume/gme/slab_modes.py:262) (96 samples, 0.13%)</title><rect x="34.7771%" y="548" width="0.1323%" height="15" fill="rgb(252,33,42)" fg:x="25236" fg:w="96"/><text x="35.0271%" y="558.50"></text></g><g><title>trace (autograd/tracer.py:10) (1,663 samples, 2.29%)</title><rect x="32.6314%" y="500" width="2.2917%" height="15" fill="rgb(209,212,41)" fg:x="23679" fg:w="1663"/><text x="32.8814%" y="510.50">t..</text></g><g><title>unary_f (autograd/wrap_util.py:15) (1,662 samples, 2.29%)</title><rect x="32.6328%" y="516" width="2.2904%" height="15" fill="rgb(207,154,6)" fg:x="23680" fg:w="1662"/><text x="32.8828%" y="526.50">u..</text></g><g><title>&lt;lambda&gt; (legume/gme/slab_modes.py:119) (1,662 samples, 2.29%)</title><rect x="32.6328%" y="532" width="2.2904%" height="15" fill="rgb(223,64,47)" fg:x="23680" fg:w="1662"/><text x="32.8828%" y="542.50">&lt;..</text></g><g><title>make_vjp (autograd/core.py:10) (1,685 samples, 2.32%)</title><rect x="32.6301%" y="484" width="2.3221%" height="15" fill="rgb(211,161,38)" fg:x="23678" fg:w="1685"/><text x="32.8801%" y="494.50">m..</text></g><g><title>grad (autograd/differential_operators.py:28) (1,690 samples, 2.33%)</title><rect x="32.6287%" y="468" width="2.3289%" height="15" fill="rgb(219,138,40)" fg:x="23677" fg:w="1690"/><text x="32.8787%" y="478.50">g..</text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:660) (149 samples, 0.21%)</title><rect x="35.1506%" y="532" width="0.2053%" height="15" fill="rgb(241,228,46)" fg:x="25507" fg:w="149"/><text x="35.4006%" y="542.50"></text></g><g><title>&lt;lambda&gt; (autograd/core.py:67) (198 samples, 0.27%)</title><rect x="35.1230%" y="516" width="0.2729%" height="15" fill="rgb(223,209,38)" fg:x="25487" fg:w="198"/><text x="35.3730%" y="526.50"></text></g><g><title>backward_pass (autograd/core.py:21) (375 samples, 0.52%)</title><rect x="35.1106%" y="500" width="0.5168%" height="15" fill="rgb(236,164,45)" fg:x="25478" fg:w="375"/><text x="35.3606%" y="510.50"></text></g><g><title>&lt;lambda&gt; (autograd/core.py:78) (168 samples, 0.23%)</title><rect x="35.3959%" y="516" width="0.2315%" height="15" fill="rgb(231,15,5)" fg:x="25685" fg:w="168"/><text x="35.6459%" y="526.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:660) (166 samples, 0.23%)</title><rect x="35.3986%" y="532" width="0.2288%" height="15" fill="rgb(252,35,15)" fg:x="25687" fg:w="166"/><text x="35.6486%" y="542.50"></text></g><g><title>vjp (autograd/core.py:14) (505 samples, 0.70%)</title><rect x="35.0238%" y="484" width="0.6959%" height="15" fill="rgb(248,181,18)" fg:x="25415" fg:w="505"/><text x="35.2738%" y="494.50"></text></g><g><title>nary_f (autograd/wrap_util.py:20) (2,261 samples, 3.12%)</title><rect x="32.6066%" y="452" width="3.1158%" height="15" fill="rgb(233,39,42)" fg:x="23661" fg:w="2261"/><text x="32.8566%" y="462.50">nar..</text></g><g><title>grad (autograd/differential_operators.py:32) (521 samples, 0.72%)</title><rect x="35.0045%" y="468" width="0.7180%" height="15" fill="rgb(238,110,33)" fg:x="25401" fg:w="521"/><text x="35.2545%" y="478.50"></text></g><g><title>vjp_maker (legume/primitives.py:283) (2,287 samples, 3.15%)</title><rect x="32.5970%" y="436" width="3.1517%" height="15" fill="rgb(233,195,10)" fg:x="23654" fg:w="2287"/><text x="32.8470%" y="446.50">vjp..</text></g><g><title>D22 (legume/gme/slab_modes.py:255) (204 samples, 0.28%)</title><rect x="35.8630%" y="548" width="0.2811%" height="15" fill="rgb(254,105,3)" fg:x="26024" fg:w="204"/><text x="36.1130%" y="558.50"></text></g><g><title>D22 (legume/gme/slab_modes.py:261) (86 samples, 0.12%)</title><rect x="36.2489%" y="548" width="0.1185%" height="15" fill="rgb(221,225,9)" fg:x="26304" fg:w="86"/><text x="36.4989%" y="558.50"></text></g><g><title>D22 (legume/gme/slab_modes.py:262) (98 samples, 0.14%)</title><rect x="36.3674%" y="548" width="0.1351%" height="15" fill="rgb(224,227,45)" fg:x="26390" fg:w="98"/><text x="36.6174%" y="558.50"></text></g><g><title>trace (autograd/tracer.py:10) (530 samples, 0.73%)</title><rect x="35.7858%" y="500" width="0.7304%" height="15" fill="rgb(229,198,43)" fg:x="25968" fg:w="530"/><text x="36.0358%" y="510.50"></text></g><g><title>unary_f (autograd/wrap_util.py:15) (526 samples, 0.72%)</title><rect x="35.7914%" y="516" width="0.7249%" height="15" fill="rgb(206,209,35)" fg:x="25972" fg:w="526"/><text x="36.0414%" y="526.50"></text></g><g><title>&lt;lambda&gt; (legume/gme/slab_modes.py:119) (526 samples, 0.72%)</title><rect x="35.7914%" y="532" width="0.7249%" height="15" fill="rgb(245,195,53)" fg:x="25972" fg:w="526"/><text x="36.0414%" y="542.50"></text></g><g><title>make_vjp (autograd/core.py:10) (543 samples, 0.75%)</title><rect x="35.7845%" y="484" width="0.7483%" height="15" fill="rgb(240,92,26)" fg:x="25967" fg:w="543"/><text x="36.0345%" y="494.50"></text></g><g><title>grad (autograd/differential_operators.py:28) (546 samples, 0.75%)</title><rect x="35.7845%" y="468" width="0.7524%" height="15" fill="rgb(207,40,23)" fg:x="25967" fg:w="546"/><text x="36.0345%" y="478.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:660) (98 samples, 0.14%)</title><rect x="36.7202%" y="532" width="0.1351%" height="15" fill="rgb(223,111,35)" fg:x="26646" fg:w="98"/><text x="36.9702%" y="542.50"></text></g><g><title>&lt;lambda&gt; (autograd/core.py:67) (154 samples, 0.21%)</title><rect x="36.6968%" y="516" width="0.2122%" height="15" fill="rgb(229,147,28)" fg:x="26629" fg:w="154"/><text x="36.9468%" y="526.50"></text></g><g><title>backward_pass (autograd/core.py:21) (333 samples, 0.46%)</title><rect x="36.6747%" y="500" width="0.4589%" height="15" fill="rgb(211,29,28)" fg:x="26613" fg:w="333"/><text x="36.9247%" y="510.50"></text></g><g><title>&lt;lambda&gt; (autograd/core.py:78) (163 samples, 0.22%)</title><rect x="36.9090%" y="516" width="0.2246%" height="15" fill="rgb(228,72,33)" fg:x="26783" fg:w="163"/><text x="37.1590%" y="526.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:660) (159 samples, 0.22%)</title><rect x="36.9145%" y="532" width="0.2191%" height="15" fill="rgb(205,214,31)" fg:x="26787" fg:w="159"/><text x="37.1645%" y="542.50"></text></g><g><title>vjp (autograd/core.py:14) (493 samples, 0.68%)</title><rect x="36.5851%" y="484" width="0.6794%" height="15" fill="rgb(224,111,15)" fg:x="26548" fg:w="493"/><text x="36.8351%" y="494.50"></text></g><g><title>backward_pass (autograd/core.py:23) (81 samples, 0.11%)</title><rect x="37.1529%" y="500" width="0.1116%" height="15" fill="rgb(253,21,26)" fg:x="26960" fg:w="81"/><text x="37.4029%" y="510.50"></text></g><g><title>nary_f (autograd/wrap_util.py:20) (1,090 samples, 1.50%)</title><rect x="35.7652%" y="452" width="1.5021%" height="15" fill="rgb(245,139,43)" fg:x="25953" fg:w="1090"/><text x="36.0152%" y="462.50"></text></g><g><title>grad (autograd/differential_operators.py:32) (505 samples, 0.70%)</title><rect x="36.5713%" y="468" width="0.6959%" height="15" fill="rgb(252,170,7)" fg:x="26538" fg:w="505"/><text x="36.8213%" y="478.50"></text></g><g><title>vjp_maker (legume/primitives.py:284) (1,121 samples, 1.54%)</title><rect x="35.7486%" y="436" width="1.5448%" height="15" fill="rgb(231,118,14)" fg:x="25941" fg:w="1121"/><text x="35.9986%" y="446.50"></text></g><g><title>f_wrapped (autograd/tracer.py:45) (3,413 samples, 4.70%)</title><rect x="32.5915%" y="388" width="4.7034%" height="15" fill="rgb(238,83,0)" fg:x="23650" fg:w="3413"/><text x="32.8415%" y="398.50">f_wra..</text></g><g><title>__init__ (autograd/core.py:36) (3,411 samples, 4.70%)</title><rect x="32.5942%" y="404" width="4.7006%" height="15" fill="rgb(221,39,39)" fg:x="23652" fg:w="3411"/><text x="32.8442%" y="414.50">__ini..</text></g><g><title>vjp_argnums (autograd/core.py:66) (3,411 samples, 4.70%)</title><rect x="32.5942%" y="420" width="4.7006%" height="15" fill="rgb(222,119,46)" fg:x="23652" fg:w="3411"/><text x="32.8442%" y="430.50">vjp_a..</text></g><g><title>guided_mode_given_g (legume/gme/slab_modes.py:142) (3,818 samples, 5.26%)</title><rect x="32.0347%" y="372" width="5.2615%" height="15" fill="rgb(222,165,49)" fg:x="23246" fg:w="3818"/><text x="32.2847%" y="382.50">guided..</text></g><g><title>chi (legume/gme/slab_modes.py:171) (103 samples, 0.14%)</title><rect x="37.2962%" y="388" width="0.1419%" height="15" fill="rgb(219,113,52)" fg:x="27064" fg:w="103"/><text x="37.5462%" y="398.50"></text></g><g><title>guided_mode_given_g (legume/gme/slab_modes.py:145) (189 samples, 0.26%)</title><rect x="37.2962%" y="372" width="0.2605%" height="15" fill="rgb(214,7,15)" fg:x="27064" fg:w="189"/><text x="37.5462%" y="382.50"></text></g><g><title>chi (legume/gme/slab_modes.py:172) (86 samples, 0.12%)</title><rect x="37.4382%" y="388" width="0.1185%" height="15" fill="rgb(235,32,4)" fg:x="27167" fg:w="86"/><text x="37.6882%" y="398.50"></text></g><g><title>S_T_matrices_TE (legume/gme/slab_modes.py:226) (127 samples, 0.18%)</title><rect x="37.5622%" y="404" width="0.1750%" height="15" fill="rgb(238,90,54)" fg:x="27257" fg:w="127"/><text x="37.8122%" y="414.50"></text></g><g><title>S_T_matrices_TE (legume/gme/slab_modes.py:232) (78 samples, 0.11%)</title><rect x="37.8350%" y="404" width="0.1075%" height="15" fill="rgb(213,208,19)" fg:x="27455" fg:w="78"/><text x="38.0850%" y="414.50"></text></g><g><title>array (autograd/numpy/numpy_wrapper.py:58) (89 samples, 0.12%)</title><rect x="37.9536%" y="436" width="0.1226%" height="15" fill="rgb(233,156,4)" fg:x="27541" fg:w="89"/><text x="38.2036%" y="446.50"></text></g><g><title>array (autograd/numpy/numpy_wrapper.py:58) (110 samples, 0.15%)</title><rect x="37.9453%" y="420" width="0.1516%" height="15" fill="rgb(207,194,5)" fg:x="27535" fg:w="110"/><text x="38.1953%" y="430.50"></text></g><g><title>S_T_matrices_TE (legume/gme/slab_modes.py:233) (147 samples, 0.20%)</title><rect x="37.9425%" y="404" width="0.2026%" height="15" fill="rgb(206,111,30)" fg:x="27533" fg:w="147"/><text x="38.1925%" y="414.50"></text></g><g><title>S_T_matrices_TE (legume/gme/slab_modes.py:234) (91 samples, 0.13%)</title><rect x="38.1451%" y="404" width="0.1254%" height="15" fill="rgb(243,70,54)" fg:x="27680" fg:w="91"/><text x="38.3951%" y="414.50"></text></g><g><title>S_T_matrices_TE (legume/gme/slab_modes.py:235) (85 samples, 0.12%)</title><rect x="38.2705%" y="404" width="0.1171%" height="15" fill="rgb(242,28,8)" fg:x="27771" fg:w="85"/><text x="38.5205%" y="414.50"></text></g><g><title>array (autograd/numpy/numpy_wrapper.py:58) (80 samples, 0.11%)</title><rect x="38.4042%" y="436" width="0.1102%" height="15" fill="rgb(219,106,18)" fg:x="27868" fg:w="80"/><text x="38.6542%" y="446.50"></text></g><g><title>array (autograd/numpy/numpy_wrapper.py:58) (101 samples, 0.14%)</title><rect x="38.3918%" y="420" width="0.1392%" height="15" fill="rgb(244,222,10)" fg:x="27859" fg:w="101"/><text x="38.6418%" y="430.50"></text></g><g><title>S_T_matrices_TE (legume/gme/slab_modes.py:236) (106 samples, 0.15%)</title><rect x="38.3877%" y="404" width="0.1461%" height="15" fill="rgb(236,179,52)" fg:x="27856" fg:w="106"/><text x="38.6377%" y="414.50"></text></g><g><title>AB_matrices (legume/gme/slab_modes.py:401) (734 samples, 1.01%)</title><rect x="37.5608%" y="388" width="1.0115%" height="15" fill="rgb(213,23,39)" fg:x="27256" fg:w="734"/><text x="37.8108%" y="398.50"></text></g><g><title>AB_matrices (legume/gme/slab_modes.py:413) (82 samples, 0.11%)</title><rect x="38.5957%" y="388" width="0.1130%" height="15" fill="rgb(238,48,10)" fg:x="28007" fg:w="82"/><text x="38.8457%" y="398.50"></text></g><g><title>guided_mode_given_g (legume/gme/slab_modes.py:149) (976 samples, 1.35%)</title><rect x="37.5567%" y="372" width="1.3450%" height="15" fill="rgb(251,196,23)" fg:x="27253" fg:w="976"/><text x="37.8067%" y="382.50"></text></g><g><title>vjp_argnums (autograd/core.py:66) (269 samples, 0.37%)</title><rect x="39.9077%" y="436" width="0.3707%" height="15" fill="rgb(250,152,24)" fg:x="28959" fg:w="269"/><text x="40.1577%" y="446.50"></text></g><g><title>f_wrapped (autograd/tracer.py:45) (962 samples, 1.33%)</title><rect x="38.9540%" y="404" width="1.3257%" height="15" fill="rgb(209,150,17)" fg:x="28267" fg:w="962"/><text x="39.2040%" y="414.50"></text></g><g><title>__init__ (autograd/core.py:36) (962 samples, 1.33%)</title><rect x="38.9540%" y="420" width="1.3257%" height="15" fill="rgb(234,202,34)" fg:x="28267" fg:w="962"/><text x="39.2040%" y="430.50"></text></g><g><title>normalization_coeff (legume/gme/slab_modes.py:439) (976 samples, 1.35%)</title><rect x="38.9403%" y="388" width="1.3450%" height="15" fill="rgb(253,148,53)" fg:x="28257" fg:w="976"/><text x="39.1903%" y="398.50"></text></g><g><title>normalization_coeff (legume/gme/slab_modes.py:452) (121 samples, 0.17%)</title><rect x="40.2853%" y="388" width="0.1667%" height="15" fill="rgb(218,129,16)" fg:x="29233" fg:w="121"/><text x="40.5353%" y="398.50"></text></g><g><title>normalization_coeff (legume/gme/slab_modes.py:453) (97 samples, 0.13%)</title><rect x="40.4520%" y="388" width="0.1337%" height="15" fill="rgb(216,85,19)" fg:x="29354" fg:w="97"/><text x="40.7020%" y="398.50"></text></g><g><title>__mul__ (autograd/numpy/numpy_boxes.py:28) (76 samples, 0.10%)</title><rect x="40.6146%" y="404" width="0.1047%" height="15" fill="rgb(235,228,7)" fg:x="29472" fg:w="76"/><text x="40.8646%" y="414.50"></text></g><g><title>normalization_coeff (legume/gme/slab_modes.py:454) (124 samples, 0.17%)</title><rect x="40.5857%" y="388" width="0.1709%" height="15" fill="rgb(245,175,0)" fg:x="29451" fg:w="124"/><text x="40.8357%" y="398.50"></text></g><g><title>normalization_coeff (legume/gme/slab_modes.py:455) (121 samples, 0.17%)</title><rect x="40.7566%" y="388" width="0.1667%" height="15" fill="rgb(208,168,36)" fg:x="29575" fg:w="121"/><text x="41.0066%" y="398.50"></text></g><g><title>normalization_coeff (legume/gme/slab_modes.py:456) (136 samples, 0.19%)</title><rect x="40.9233%" y="388" width="0.1874%" height="15" fill="rgb(246,171,24)" fg:x="29696" fg:w="136"/><text x="41.1733%" y="398.50"></text></g><g><title>normalization_coeff (legume/gme/slab_modes.py:457) (126 samples, 0.17%)</title><rect x="41.1107%" y="388" width="0.1736%" height="15" fill="rgb(215,142,24)" fg:x="29832" fg:w="126"/><text x="41.3607%" y="398.50"></text></g><g><title>normalization_coeff (legume/gme/slab_modes.py:458) (132 samples, 0.18%)</title><rect x="41.2844%" y="388" width="0.1819%" height="15" fill="rgb(250,187,7)" fg:x="29958" fg:w="132"/><text x="41.5344%" y="398.50"></text></g><g><title>f_wrapped (autograd/tracer.py:45) (1,367 samples, 1.88%)</title><rect x="41.5696%" y="404" width="1.8838%" height="15" fill="rgb(228,66,33)" fg:x="30165" fg:w="1367"/><text x="41.8196%" y="414.50">f..</text></g><g><title>__init__ (autograd/core.py:36) (1,366 samples, 1.88%)</title><rect x="41.5710%" y="420" width="1.8825%" height="15" fill="rgb(234,215,21)" fg:x="30166" fg:w="1366"/><text x="41.8210%" y="430.50">_..</text></g><g><title>vjp_argnums (autograd/core.py:67) (1,363 samples, 1.88%)</title><rect x="41.5751%" y="436" width="1.8783%" height="15" fill="rgb(222,191,20)" fg:x="30169" fg:w="1363"/><text x="41.8251%" y="446.50">v..</text></g><g><title>normalization_coeff (legume/gme/slab_modes.py:459) (1,444 samples, 1.99%)</title><rect x="41.4663%" y="388" width="1.9899%" height="15" fill="rgb(245,79,54)" fg:x="30090" fg:w="1444"/><text x="41.7163%" y="398.50">n..</text></g><g><title>normalization_coeff (legume/gme/slab_modes.py:460) (134 samples, 0.18%)</title><rect x="43.4562%" y="388" width="0.1847%" height="15" fill="rgb(240,10,37)" fg:x="31534" fg:w="134"/><text x="43.7062%" y="398.50"></text></g><g><title>I_alpha (legume/gme/slab_modes.py:10) (87 samples, 0.12%)</title><rect x="43.6450%" y="404" width="0.1199%" height="15" fill="rgb(214,192,32)" fg:x="31671" fg:w="87"/><text x="43.8950%" y="414.50"></text></g><g><title>normalization_coeff (legume/gme/slab_modes.py:461) (130 samples, 0.18%)</title><rect x="43.6409%" y="388" width="0.1791%" height="15" fill="rgb(209,36,54)" fg:x="31668" fg:w="130"/><text x="43.8909%" y="398.50"></text></g><g><title>guided_mode_given_g (legume/gme/slab_modes.py:151) (3,661 samples, 5.05%)</title><rect x="38.9017%" y="372" width="5.0451%" height="15" fill="rgb(220,10,11)" fg:x="28229" fg:w="3661"/><text x="39.1517%" y="382.50">guided..</text></g><g><title>normalization_coeff (legume/gme/slab_modes.py:462) (92 samples, 0.13%)</title><rect x="43.8200%" y="388" width="0.1268%" height="15" fill="rgb(221,106,17)" fg:x="31798" fg:w="92"/><text x="44.0700%" y="398.50"></text></g><g><title>guided_modes (legume/gme/slab_modes.py:77) (8,743 samples, 12.05%)</title><rect x="31.9479%" y="356" width="12.0485%" height="15" fill="rgb(251,142,44)" fg:x="23183" fg:w="8743"/><text x="32.1979%" y="366.50">guided_modes (legu..</text></g><g><title>_compute_guided (legume/gme/gme.py:380) (8,758 samples, 12.07%)</title><rect x="31.9286%" y="340" width="12.0692%" height="15" fill="rgb(238,13,15)" fg:x="23169" fg:w="8758"/><text x="32.1786%" y="350.50">_compute_guided (l..</text></g><g><title>_construct_mat (legume/gme/gme.py:536) (8,760 samples, 12.07%)</title><rect x="31.9272%" y="324" width="12.0719%" height="15" fill="rgb(208,107,27)" fg:x="23168" fg:w="8760"/><text x="32.1772%" y="334.50">_construct_mat (le..</text></g><g><title>array (autograd/numpy/numpy_wrapper.py:58) (88 samples, 0.12%)</title><rect x="44.1163%" y="388" width="0.1213%" height="15" fill="rgb(205,136,37)" fg:x="32013" fg:w="88"/><text x="44.3663%" y="398.50"></text></g><g><title>interp_guided (legume/gme/gme.py:312) (140 samples, 0.19%)</title><rect x="44.0474%" y="356" width="0.1929%" height="15" fill="rgb(250,205,27)" fg:x="31963" fg:w="140"/><text x="44.2974%" y="366.50"></text></g><g><title>interp_coeff (legume/gme/gme.py:296) (90 samples, 0.12%)</title><rect x="44.1163%" y="372" width="0.1240%" height="15" fill="rgb(210,80,43)" fg:x="32013" fg:w="90"/><text x="44.3663%" y="382.50"></text></g><g><title>interp_guided (legume/gme/gme.py:313) (145 samples, 0.20%)</title><rect x="44.2403%" y="356" width="0.1998%" height="15" fill="rgb(247,160,36)" fg:x="32103" fg:w="145"/><text x="44.4903%" y="366.50"></text></g><g><title>interp_coeff (legume/gme/gme.py:296) (93 samples, 0.13%)</title><rect x="44.3120%" y="372" width="0.1282%" height="15" fill="rgb(234,13,49)" fg:x="32155" fg:w="93"/><text x="44.5620%" y="382.50"></text></g><g><title>array (autograd/numpy/numpy_wrapper.py:58) (93 samples, 0.13%)</title><rect x="44.3120%" y="388" width="0.1282%" height="15" fill="rgb(234,122,0)" fg:x="32155" fg:w="93"/><text x="44.5620%" y="398.50"></text></g><g><title>_construct_mat (legume/gme/gme.py:586) (319 samples, 0.44%)</title><rect x="44.0033%" y="324" width="0.4396%" height="15" fill="rgb(207,146,38)" fg:x="31931" fg:w="319"/><text x="44.2533%" y="334.50"></text></g><g><title>_get_guided (legume/gme/gme.py:323) (319 samples, 0.44%)</title><rect x="44.0033%" y="340" width="0.4396%" height="15" fill="rgb(207,177,25)" fg:x="31931" fg:w="319"/><text x="44.2533%" y="350.50"></text></g><g><title>interp_coeff (legume/gme/gme.py:295) (99 samples, 0.14%)</title><rect x="44.5463%" y="372" width="0.1364%" height="15" fill="rgb(211,178,42)" fg:x="32325" fg:w="99"/><text x="44.7963%" y="382.50"></text></g><g><title>&lt;listcomp&gt; (legume/gme/gme.py:295) (99 samples, 0.14%)</title><rect x="44.5463%" y="388" width="0.1364%" height="15" fill="rgb(230,69,54)" fg:x="32325" fg:w="99"/><text x="44.7963%" y="398.50"></text></g><g><title>array (autograd/numpy/numpy_wrapper.py:60) (122 samples, 0.17%)</title><rect x="44.7116%" y="404" width="0.1681%" height="15" fill="rgb(214,135,41)" fg:x="32445" fg:w="122"/><text x="44.9616%" y="414.50"></text></g><g><title>array (autograd/numpy/numpy_wrapper.py:58) (157 samples, 0.22%)</title><rect x="44.6827%" y="388" width="0.2164%" height="15" fill="rgb(237,67,25)" fg:x="32424" fg:w="157"/><text x="44.9327%" y="398.50"></text></g><g><title>interp_coeff (legume/gme/gme.py:296) (159 samples, 0.22%)</title><rect x="44.6827%" y="372" width="0.2191%" height="15" fill="rgb(222,189,50)" fg:x="32424" fg:w="159"/><text x="44.9327%" y="382.50"></text></g><g><title>interp_guided (legume/gme/gme.py:312) (260 samples, 0.36%)</title><rect x="44.5449%" y="356" width="0.3583%" height="15" fill="rgb(245,148,34)" fg:x="32324" fg:w="260"/><text x="44.7949%" y="366.50"></text></g><g><title>interp_coeff (legume/gme/gme.py:295) (90 samples, 0.12%)</title><rect x="44.9032%" y="372" width="0.1240%" height="15" fill="rgb(222,29,6)" fg:x="32584" fg:w="90"/><text x="45.1532%" y="382.50"></text></g><g><title>&lt;listcomp&gt; (legume/gme/gme.py:295) (90 samples, 0.12%)</title><rect x="44.9032%" y="388" width="0.1240%" height="15" fill="rgb(221,189,43)" fg:x="32584" fg:w="90"/><text x="45.1532%" y="398.50"></text></g><g><title>vjp_argnums (autograd/core.py:66) (249 samples, 0.34%)</title><rect x="45.1664%" y="452" width="0.3431%" height="15" fill="rgb(207,36,27)" fg:x="32775" fg:w="249"/><text x="45.4164%" y="462.50"></text></g><g><title>array_from_scalar_or_array_gradmaker (autograd/numpy/numpy_vjps.py:686) (245 samples, 0.34%)</title><rect x="45.1719%" y="468" width="0.3376%" height="15" fill="rgb(217,90,24)" fg:x="32779" fg:w="245"/><text x="45.4219%" y="478.50"></text></g><g><title>f_wrapped (autograd/tracer.py:61) (237 samples, 0.33%)</title><rect x="45.1829%" y="484" width="0.3266%" height="15" fill="rgb(224,66,35)" fg:x="32787" fg:w="237"/><text x="45.4329%" y="494.50"></text></g><g><title>f_wrapped (autograd/tracer.py:45) (262 samples, 0.36%)</title><rect x="45.1512%" y="420" width="0.3611%" height="15" fill="rgb(221,13,50)" fg:x="32764" fg:w="262"/><text x="45.4012%" y="430.50"></text></g><g><title>__init__ (autograd/core.py:36) (258 samples, 0.36%)</title><rect x="45.1568%" y="436" width="0.3555%" height="15" fill="rgb(236,68,49)" fg:x="32768" fg:w="258"/><text x="45.4068%" y="446.50"></text></g><g><title>array (autograd/numpy/numpy_wrapper.py:60) (337 samples, 0.46%)</title><rect x="45.0603%" y="404" width="0.4644%" height="15" fill="rgb(229,146,28)" fg:x="32698" fg:w="337"/><text x="45.3103%" y="414.50"></text></g><g><title>array (autograd/numpy/numpy_wrapper.py:58) (383 samples, 0.53%)</title><rect x="45.0286%" y="388" width="0.5278%" height="15" fill="rgb(225,31,38)" fg:x="32675" fg:w="383"/><text x="45.2786%" y="398.50"></text></g><g><title>interp_coeff (legume/gme/gme.py:296) (387 samples, 0.53%)</title><rect x="45.0272%" y="372" width="0.5333%" height="15" fill="rgb(250,208,3)" fg:x="32674" fg:w="387"/><text x="45.2772%" y="382.50"></text></g><g><title>interp_guided (legume/gme/gme.py:313) (479 samples, 0.66%)</title><rect x="44.9032%" y="356" width="0.6601%" height="15" fill="rgb(246,54,23)" fg:x="32584" fg:w="479"/><text x="45.1532%" y="366.50"></text></g><g><title>_construct_mat (legume/gme/gme.py:596) (815 samples, 1.12%)</title><rect x="44.4443%" y="324" width="1.1231%" height="15" fill="rgb(243,76,11)" fg:x="32251" fg:w="815"/><text x="44.6943%" y="334.50"></text></g><g><title>_get_guided (legume/gme/gme.py:323) (815 samples, 1.12%)</title><rect x="44.4443%" y="340" width="1.1231%" height="15" fill="rgb(245,21,50)" fg:x="32251" fg:w="815"/><text x="44.6943%" y="350.50"></text></g><g><title>mat_te_te (legume/gme/matrix_elements.py:48) (73 samples, 0.10%)</title><rect x="45.6584%" y="340" width="0.1006%" height="15" fill="rgb(228,9,43)" fg:x="33132" fg:w="73"/><text x="45.9084%" y="350.50"></text></g><g><title>I_alpha (legume/gme/slab_modes.py:10) (96 samples, 0.13%)</title><rect x="45.8086%" y="372" width="0.1323%" height="15" fill="rgb(208,100,47)" fg:x="33241" fg:w="96"/><text x="46.0586%" y="382.50"></text></g><g><title>IJ_layer (legume/gme/matrix_elements.py:19) (99 samples, 0.14%)</title><rect x="45.8086%" y="356" width="0.1364%" height="15" fill="rgb(232,26,8)" fg:x="33241" fg:w="99"/><text x="46.0586%" y="366.50"></text></g><g><title>mat_te_te (legume/gme/matrix_elements.py:49) (157 samples, 0.22%)</title><rect x="45.7590%" y="340" width="0.2164%" height="15" fill="rgb(216,166,38)" fg:x="33205" fg:w="157"/><text x="46.0090%" y="350.50"></text></g><g><title>I_alpha (legume/gme/slab_modes.py:10) (99 samples, 0.14%)</title><rect x="46.0566%" y="372" width="0.1364%" height="15" fill="rgb(251,202,51)" fg:x="33421" fg:w="99"/><text x="46.3066%" y="382.50"></text></g><g><title>IJ_layer (legume/gme/matrix_elements.py:19) (102 samples, 0.14%)</title><rect x="46.0566%" y="356" width="0.1406%" height="15" fill="rgb(254,216,34)" fg:x="33421" fg:w="102"/><text x="46.3066%" y="366.50"></text></g><g><title>mat_te_te (legume/gme/matrix_elements.py:52) (144 samples, 0.20%)</title><rect x="46.0249%" y="340" width="0.1984%" height="15" fill="rgb(251,32,27)" fg:x="33398" fg:w="144"/><text x="46.2749%" y="350.50"></text></g><g><title>I_alpha (legume/gme/slab_modes.py:10) (108 samples, 0.15%)</title><rect x="46.3074%" y="372" width="0.1488%" height="15" fill="rgb(208,127,28)" fg:x="33603" fg:w="108"/><text x="46.5574%" y="382.50"></text></g><g><title>f_wrapped (autograd/tracer.py:44) (82 samples, 0.11%)</title><rect x="46.3433%" y="388" width="0.1130%" height="15" fill="rgb(224,137,22)" fg:x="33629" fg:w="82"/><text x="46.5933%" y="398.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (82 samples, 0.11%)</title><rect x="46.3433%" y="404" width="0.1130%" height="15" fill="rgb(254,70,32)" fg:x="33629" fg:w="82"/><text x="46.5933%" y="414.50"></text></g><g><title>IJ_layer (legume/gme/matrix_elements.py:19) (113 samples, 0.16%)</title><rect x="46.3074%" y="356" width="0.1557%" height="15" fill="rgb(229,75,37)" fg:x="33603" fg:w="113"/><text x="46.5574%" y="366.50"></text></g><g><title>mat_te_te (legume/gme/matrix_elements.py:55) (152 samples, 0.21%)</title><rect x="46.2744%" y="340" width="0.2095%" height="15" fill="rgb(252,64,23)" fg:x="33579" fg:w="152"/><text x="46.5244%" y="350.50"></text></g><g><title>I_alpha (legume/gme/slab_modes.py:10) (86 samples, 0.12%)</title><rect x="46.5665%" y="372" width="0.1185%" height="15" fill="rgb(232,162,48)" fg:x="33791" fg:w="86"/><text x="46.8165%" y="382.50"></text></g><g><title>IJ_layer (legume/gme/matrix_elements.py:19) (91 samples, 0.13%)</title><rect x="46.5665%" y="356" width="0.1254%" height="15" fill="rgb(246,160,12)" fg:x="33791" fg:w="91"/><text x="46.8165%" y="366.50"></text></g><g><title>mat_te_te (legume/gme/matrix_elements.py:58) (135 samples, 0.19%)</title><rect x="46.5238%" y="340" width="0.1860%" height="15" fill="rgb(247,166,0)" fg:x="33760" fg:w="135"/><text x="46.7738%" y="350.50"></text></g><g><title>_construct_mat (legume/gme/gme.py:600) (849 samples, 1.17%)</title><rect x="45.5674%" y="324" width="1.1700%" height="15" fill="rgb(249,219,21)" fg:x="33066" fg:w="849"/><text x="45.8174%" y="334.50"></text></g><g><title>_gme_constrs_complex (optomization/constraints.py:217) (11,254 samples, 15.51%)</title><rect x="31.3030%" y="292" width="15.5089%" height="15" fill="rgb(205,209,3)" fg:x="22715" fg:w="11254"/><text x="31.5530%" y="302.50">_gme_constrs_complex (op..</text></g><g><title>run (legume/gme/gme.py:999) (10,801 samples, 14.88%)</title><rect x="31.9272%" y="308" width="14.8846%" height="15" fill="rgb(243,44,1)" fg:x="23168" fg:w="10801"/><text x="32.1772%" y="318.50">run (legume/gme/gme.py:..</text></g><g><title>array (autograd/numpy/numpy_wrapper.py:60) (826 samples, 1.14%)</title><rect x="46.8477%" y="420" width="1.1383%" height="15" fill="rgb(206,159,16)" fg:x="33995" fg:w="826"/><text x="47.0977%" y="430.50"></text></g><g><title>f_wrapped (autograd/tracer.py:45) (822 samples, 1.13%)</title><rect x="46.8532%" y="436" width="1.1328%" height="15" fill="rgb(244,77,30)" fg:x="33999" fg:w="822"/><text x="47.1032%" y="446.50"></text></g><g><title>__init__ (autograd/core.py:36) (820 samples, 1.13%)</title><rect x="46.8559%" y="452" width="1.1300%" height="15" fill="rgb(218,69,12)" fg:x="34001" fg:w="820"/><text x="47.1059%" y="462.50"></text></g><g><title>vjp_argnums (autograd/core.py:66) (820 samples, 1.13%)</title><rect x="46.8559%" y="468" width="1.1300%" height="15" fill="rgb(212,87,7)" fg:x="34001" fg:w="820"/><text x="47.1059%" y="478.50"></text></g><g><title>array_from_scalar_or_array_gradmaker (autograd/numpy/numpy_vjps.py:686) (820 samples, 1.13%)</title><rect x="46.8559%" y="484" width="1.1300%" height="15" fill="rgb(245,114,25)" fg:x="34001" fg:w="820"/><text x="47.1059%" y="494.50"></text></g><g><title>f_wrapped (autograd/tracer.py:61) (818 samples, 1.13%)</title><rect x="46.8587%" y="500" width="1.1273%" height="15" fill="rgb(210,61,42)" fg:x="34003" fg:w="818"/><text x="47.1087%" y="510.50"></text></g><g><title>ft_field_xy (legume/gme/gme.py:2049) (853 samples, 1.18%)</title><rect x="46.8118%" y="340" width="1.1755%" height="15" fill="rgb(211,52,33)" fg:x="33969" fg:w="853"/><text x="47.0618%" y="350.50"></text></g><g><title>_get_guided (legume/gme/gme.py:323) (853 samples, 1.18%)</title><rect x="46.8118%" y="356" width="1.1755%" height="15" fill="rgb(234,58,33)" fg:x="33969" fg:w="853"/><text x="47.0618%" y="366.50"></text></g><g><title>interp_guided (legume/gme/gme.py:313) (830 samples, 1.14%)</title><rect x="46.8435%" y="372" width="1.1438%" height="15" fill="rgb(220,115,36)" fg:x="33992" fg:w="830"/><text x="47.0935%" y="382.50"></text></g><g><title>interp_coeff (legume/gme/gme.py:296) (827 samples, 1.14%)</title><rect x="46.8477%" y="388" width="1.1397%" height="15" fill="rgb(243,153,54)" fg:x="33995" fg:w="827"/><text x="47.0977%" y="398.50"></text></g><g><title>array (autograd/numpy/numpy_wrapper.py:58) (827 samples, 1.14%)</title><rect x="46.8477%" y="404" width="1.1397%" height="15" fill="rgb(251,47,18)" fg:x="33995" fg:w="827"/><text x="47.0977%" y="414.50"></text></g><g><title>get_field_xy (legume/gme/gme.py:2184) (854 samples, 1.18%)</title><rect x="46.8118%" y="324" width="1.1769%" height="15" fill="rgb(242,102,42)" fg:x="33969" fg:w="854"/><text x="47.0618%" y="334.50"></text></g><g><title>ftinv (legume/utils.py:28) (394 samples, 0.54%)</title><rect x="47.9887%" y="340" width="0.5430%" height="15" fill="rgb(234,31,38)" fg:x="34823" fg:w="394"/><text x="48.2387%" y="350.50"></text></g><g><title>NG (optomization/utils.py:28) (1,271 samples, 1.75%)</title><rect x="46.8118%" y="308" width="1.7515%" height="15" fill="rgb(221,117,51)" fg:x="33969" fg:w="1271"/><text x="47.0618%" y="318.50"></text></g><g><title>get_field_xy (legume/gme/gme.py:2189) (417 samples, 0.57%)</title><rect x="47.9887%" y="324" width="0.5747%" height="15" fill="rgb(212,20,18)" fg:x="34823" fg:w="417"/><text x="48.2387%" y="334.50"></text></g><g><title>ftinv (legume/utils.py:28) (373 samples, 0.51%)</title><rect x="48.6502%" y="340" width="0.5140%" height="15" fill="rgb(245,133,36)" fg:x="35303" fg:w="373"/><text x="48.9002%" y="350.50"></text></g><g><title>NG (optomization/utils.py:29) (451 samples, 0.62%)</title><rect x="48.5634%" y="308" width="0.6215%" height="15" fill="rgb(212,6,19)" fg:x="35240" fg:w="451"/><text x="48.8134%" y="318.50"></text></g><g><title>get_field_xy (legume/gme/gme.py:2189) (388 samples, 0.53%)</title><rect x="48.6502%" y="324" width="0.5347%" height="15" fill="rgb(218,1,36)" fg:x="35303" fg:w="388"/><text x="48.9002%" y="334.50"></text></g><g><title>_gme_constrs_complex (optomization/constraints.py:231) (1,723 samples, 2.37%)</title><rect x="46.8118%" y="292" width="2.3744%" height="15" fill="rgb(246,84,54)" fg:x="33969" fg:w="1723"/><text x="47.0618%" y="302.50">_g..</text></g><g><title>jacobian (autograd/differential_operators.py:60) (13,045 samples, 17.98%)</title><rect x="31.2106%" y="228" width="17.9770%" height="15" fill="rgb(242,110,6)" fg:x="22648" fg:w="13045"/><text x="31.4606%" y="238.50">jacobian (autograd/different..</text></g><g><title>make_vjp (autograd/core.py:10) (13,045 samples, 17.98%)</title><rect x="31.2106%" y="244" width="17.9770%" height="15" fill="rgb(214,47,5)" fg:x="22648" fg:w="13045"/><text x="31.4606%" y="254.50">make_vjp (autograd/core.py:1..</text></g><g><title>trace (autograd/tracer.py:10) (13,045 samples, 17.98%)</title><rect x="31.2106%" y="260" width="17.9770%" height="15" fill="rgb(218,159,25)" fg:x="22648" fg:w="13045"/><text x="31.4606%" y="270.50">trace (autograd/tracer.py:10)</text></g><g><title>unary_f (autograd/wrap_util.py:15) (13,045 samples, 17.98%)</title><rect x="31.2106%" y="276" width="17.9770%" height="15" fill="rgb(215,211,28)" fg:x="22648" fg:w="13045"/><text x="31.4606%" y="286.50">unary_f (autograd/wrap_util...</text></g><g><title>toposort (autograd/util.py:24) (131 samples, 0.18%)</title><rect x="49.3640%" y="308" width="0.1805%" height="15" fill="rgb(238,59,32)" fg:x="35821" fg:w="131"/><text x="49.6140%" y="318.50"></text></g><g><title>toposort (autograd/util.py:25) (380 samples, 0.52%)</title><rect x="49.5445%" y="308" width="0.5237%" height="15" fill="rgb(226,82,3)" fg:x="35952" fg:w="380"/><text x="49.7945%" y="318.50"></text></g><g><title>toposort (autograd/util.py:26) (91 samples, 0.13%)</title><rect x="50.0682%" y="308" width="0.1254%" height="15" fill="rgb(240,164,32)" fg:x="36332" fg:w="91"/><text x="50.3182%" y="318.50"></text></g><g><title>toposort (autograd/util.py:29) (735 samples, 1.01%)</title><rect x="50.2184%" y="308" width="1.0129%" height="15" fill="rgb(232,46,7)" fg:x="36441" fg:w="735"/><text x="50.4684%" y="318.50"></text></g><g><title>toposort (autograd/util.py:33) (126 samples, 0.17%)</title><rect x="51.3402%" y="308" width="0.1736%" height="15" fill="rgb(229,129,53)" fg:x="37255" fg:w="126"/><text x="51.5902%" y="318.50"></text></g><g><title>toposort (autograd/util.py:35) (374 samples, 0.52%)</title><rect x="51.6117%" y="308" width="0.5154%" height="15" fill="rgb(234,188,29)" fg:x="37452" fg:w="374"/><text x="51.8617%" y="318.50"></text></g><g><title>toposort (autograd/util.py:36) (613 samples, 0.84%)</title><rect x="52.1271%" y="308" width="0.8448%" height="15" fill="rgb(246,141,4)" fg:x="37826" fg:w="613"/><text x="52.3771%" y="318.50"></text></g><g><title>toposort (autograd/util.py:37) (137 samples, 0.19%)</title><rect x="52.9718%" y="308" width="0.1888%" height="15" fill="rgb(229,23,39)" fg:x="38439" fg:w="137"/><text x="53.2218%" y="318.50"></text></g><g><title>backward_pass (autograd/core.py:19) (3,004 samples, 4.14%)</title><rect x="49.1876%" y="292" width="4.1397%" height="15" fill="rgb(206,12,3)" fg:x="35693" fg:w="3004"/><text x="49.4376%" y="302.50">backw..</text></g><g><title>toposort (autograd/util.py:39) (121 samples, 0.17%)</title><rect x="53.1606%" y="308" width="0.1667%" height="15" fill="rgb(252,226,20)" fg:x="38576" fg:w="121"/><text x="53.4106%" y="318.50"></text></g><g><title>backward_pass (autograd/core.py:20) (376 samples, 0.52%)</title><rect x="53.3274%" y="292" width="0.5182%" height="15" fill="rgb(216,123,35)" fg:x="38697" fg:w="376"/><text x="53.5774%" y="302.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (93 samples, 0.13%)</title><rect x="55.7183%" y="340" width="0.1282%" height="15" fill="rgb(212,68,40)" fg:x="40432" fg:w="93"/><text x="55.9683%" y="350.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:107) (155 samples, 0.21%)</title><rect x="55.6715%" y="324" width="0.2136%" height="15" fill="rgb(254,125,32)" fg:x="40398" fg:w="155"/><text x="55.9215%" y="334.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:117) (187 samples, 0.26%)</title><rect x="55.9154%" y="324" width="0.2577%" height="15" fill="rgb(253,97,22)" fg:x="40575" fg:w="187"/><text x="56.1654%" y="334.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (185 samples, 0.25%)</title><rect x="55.9181%" y="340" width="0.2549%" height="15" fill="rgb(241,101,14)" fg:x="40577" fg:w="185"/><text x="56.1681%" y="350.50"></text></g><g><title>triu (numpy/lib/twodim_base.py:526) (167 samples, 0.23%)</title><rect x="55.9429%" y="356" width="0.2301%" height="15" fill="rgb(238,103,29)" fg:x="40595" fg:w="167"/><text x="56.1929%" y="366.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:126) (194 samples, 0.27%)</title><rect x="56.2682%" y="324" width="0.2673%" height="15" fill="rgb(233,195,47)" fg:x="40831" fg:w="194"/><text x="56.5182%" y="334.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (141 samples, 0.19%)</title><rect x="56.3412%" y="340" width="0.1943%" height="15" fill="rgb(246,218,30)" fg:x="40884" fg:w="141"/><text x="56.5912%" y="350.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:270) (157 samples, 0.22%)</title><rect x="56.5355%" y="324" width="0.2164%" height="15" fill="rgb(219,145,47)" fg:x="41025" fg:w="157"/><text x="56.7855%" y="334.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (124 samples, 0.17%)</title><rect x="56.5810%" y="340" width="0.1709%" height="15" fill="rgb(243,12,26)" fg:x="41058" fg:w="124"/><text x="56.8310%" y="350.50"></text></g><g><title>transpose (numpy/core/fromnumeric.py:655) (117 samples, 0.16%)</title><rect x="56.5906%" y="356" width="0.1612%" height="15" fill="rgb(214,87,16)" fg:x="41065" fg:w="117"/><text x="56.8406%" y="366.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:59) (103 samples, 0.14%)</title><rect x="56.6099%" y="372" width="0.1419%" height="15" fill="rgb(208,99,42)" fg:x="41079" fg:w="103"/><text x="56.8599%" y="382.50"></text></g><g><title>repeat_to_match_shape (autograd/numpy/numpy_vjps.py:281) (85 samples, 0.12%)</title><rect x="56.8208%" y="340" width="0.1171%" height="15" fill="rgb(253,99,2)" fg:x="41232" fg:w="85"/><text x="57.0708%" y="350.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:298) (251 samples, 0.35%)</title><rect x="56.7519%" y="324" width="0.3459%" height="15" fill="rgb(220,168,23)" fg:x="41182" fg:w="251"/><text x="57.0019%" y="334.50"></text></g><g><title>repeat_to_match_shape (autograd/numpy/numpy_vjps.py:284) (116 samples, 0.16%)</title><rect x="56.9379%" y="340" width="0.1599%" height="15" fill="rgb(242,38,24)" fg:x="41317" fg:w="116"/><text x="57.1879%" y="350.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (87 samples, 0.12%)</title><rect x="56.9779%" y="356" width="0.1199%" height="15" fill="rgb(225,182,9)" fg:x="41346" fg:w="87"/><text x="57.2279%" y="366.50"></text></g><g><title>reshape (numpy/core/fromnumeric.py:285) (73 samples, 0.10%)</title><rect x="56.9972%" y="372" width="0.1006%" height="15" fill="rgb(243,178,37)" fg:x="41360" fg:w="73"/><text x="57.2472%" y="382.50"></text></g><g><title>dot_adjoint_0 (autograd/numpy/numpy_vjps.py:434) (237 samples, 0.33%)</title><rect x="57.1281%" y="356" width="0.3266%" height="15" fill="rgb(232,139,19)" fg:x="41455" fg:w="237"/><text x="57.3781%" y="366.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (250 samples, 0.34%)</title><rect x="57.1171%" y="340" width="0.3445%" height="15" fill="rgb(225,201,24)" fg:x="41447" fg:w="250"/><text x="57.3671%" y="350.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:453) (294 samples, 0.41%)</title><rect x="57.0978%" y="324" width="0.4052%" height="15" fill="rgb(221,47,46)" fg:x="41433" fg:w="294"/><text x="57.3478%" y="334.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:33) (393 samples, 0.54%)</title><rect x="57.7606%" y="340" width="0.5416%" height="15" fill="rgb(249,23,13)" fg:x="41914" fg:w="393"/><text x="58.0106%" y="350.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:34) (162 samples, 0.22%)</title><rect x="58.3022%" y="340" width="0.2232%" height="15" fill="rgb(219,9,5)" fg:x="42307" fg:w="162"/><text x="58.5522%" y="350.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:51) (346 samples, 0.48%)</title><rect x="58.5392%" y="340" width="0.4768%" height="15" fill="rgb(254,171,16)" fg:x="42479" fg:w="346"/><text x="58.7892%" y="350.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:52) (1,336 samples, 1.84%)</title><rect x="59.0161%" y="340" width="1.8411%" height="15" fill="rgb(230,171,20)" fg:x="42825" fg:w="1336"/><text x="59.2661%" y="350.50">&lt;..</text></g><g><title>f_wrapped (autograd/tracer.py:37) (88 samples, 0.12%)</title><rect x="61.4773%" y="356" width="0.1213%" height="15" fill="rgb(210,71,41)" fg:x="44611" fg:w="88"/><text x="61.7273%" y="366.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:58) (1,065 samples, 1.47%)</title><rect x="60.8572%" y="340" width="1.4676%" height="15" fill="rgb(206,173,20)" fg:x="44161" fg:w="1065"/><text x="61.1072%" y="350.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (526 samples, 0.72%)</title><rect x="61.5999%" y="356" width="0.7249%" height="15" fill="rgb(233,88,34)" fg:x="44700" fg:w="526"/><text x="61.8499%" y="366.50"></text></g><g><title>&lt;lambda&gt; (autograd/tracer.py:124) (82 samples, 0.11%)</title><rect x="63.0731%" y="372" width="0.1130%" height="15" fill="rgb(223,209,46)" fg:x="45769" fg:w="82"/><text x="63.3231%" y="382.50"></text></g><g><title>unbroadcast (autograd/numpy/numpy_vjps.py:649) (657 samples, 0.91%)</title><rect x="62.3689%" y="340" width="0.9054%" height="15" fill="rgb(250,43,18)" fg:x="45258" fg:w="657"/><text x="62.6189%" y="350.50"></text></g><g><title>f_wrapped (autograd/tracer.py:61) (453 samples, 0.62%)</title><rect x="62.6500%" y="356" width="0.6243%" height="15" fill="rgb(208,13,10)" fg:x="45462" fg:w="453"/><text x="62.9000%" y="366.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2313) (195 samples, 0.27%)</title><rect x="63.3156%" y="372" width="0.2687%" height="15" fill="rgb(212,200,36)" fg:x="45945" fg:w="195"/><text x="63.5656%" y="382.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:88) (164 samples, 0.23%)</title><rect x="63.3584%" y="388" width="0.2260%" height="15" fill="rgb(225,90,30)" fg:x="45976" fg:w="164"/><text x="63.6084%" y="398.50"></text></g><g><title>unbroadcast (autograd/numpy/numpy_vjps.py:650) (226 samples, 0.31%)</title><rect x="63.2743%" y="340" width="0.3114%" height="15" fill="rgb(236,182,39)" fg:x="45915" fg:w="226"/><text x="63.5243%" y="350.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (203 samples, 0.28%)</title><rect x="63.3060%" y="356" width="0.2797%" height="15" fill="rgb(212,144,35)" fg:x="45938" fg:w="203"/><text x="63.5560%" y="366.50"></text></g><g><title>unbroadcast (autograd/numpy/numpy_vjps.py:651) (99 samples, 0.14%)</title><rect x="63.5858%" y="340" width="0.1364%" height="15" fill="rgb(228,63,44)" fg:x="46141" fg:w="99"/><text x="63.8358%" y="350.50"></text></g><g><title>f_wrapped (autograd/tracer.py:37) (109 samples, 0.15%)</title><rect x="63.8710%" y="356" width="0.1502%" height="15" fill="rgb(228,109,6)" fg:x="46348" fg:w="109"/><text x="64.1210%" y="366.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:72) (202 samples, 0.28%)</title><rect x="64.4870%" y="388" width="0.2784%" height="15" fill="rgb(238,117,24)" fg:x="46795" fg:w="202"/><text x="64.7370%" y="398.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2313) (1,020 samples, 1.41%)</title><rect x="64.2500%" y="372" width="1.4056%" height="15" fill="rgb(242,26,26)" fg:x="46623" fg:w="1020"/><text x="64.5000%" y="382.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:88) (607 samples, 0.84%)</title><rect x="64.8191%" y="388" width="0.8365%" height="15" fill="rgb(221,92,48)" fg:x="47036" fg:w="607"/><text x="65.0691%" y="398.50"></text></g><g><title>unbroadcast (autograd/numpy/numpy_vjps.py:653) (1,389 samples, 1.91%)</title><rect x="63.7456%" y="340" width="1.9141%" height="15" fill="rgb(209,209,32)" fg:x="46257" fg:w="1389"/><text x="63.9956%" y="350.50">u..</text></g><g><title>f_wrapped (autograd/tracer.py:48) (1,186 samples, 1.63%)</title><rect x="64.0254%" y="356" width="1.6344%" height="15" fill="rgb(221,70,22)" fg:x="46460" fg:w="1186"/><text x="64.2754%" y="366.50"></text></g><g><title>unbroadcast (autograd/numpy/numpy_vjps.py:654) (614 samples, 0.85%)</title><rect x="65.6598%" y="340" width="0.8461%" height="15" fill="rgb(248,145,5)" fg:x="47646" fg:w="614"/><text x="65.9098%" y="350.50"></text></g><g><title>f_wrapped (autograd/tracer.py:61) (444 samples, 0.61%)</title><rect x="65.8940%" y="356" width="0.6119%" height="15" fill="rgb(226,116,26)" fg:x="47816" fg:w="444"/><text x="66.1440%" y="366.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:660) (6,583 samples, 9.07%)</title><rect x="57.5043%" y="324" width="9.0719%" height="15" fill="rgb(244,5,17)" fg:x="41728" fg:w="6583"/><text x="57.7543%" y="334.50">&lt;lambda&gt; (aut..</text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:68) (112 samples, 0.15%)</title><rect x="66.5762%" y="324" width="0.1543%" height="15" fill="rgb(252,159,33)" fg:x="48311" fg:w="112"/><text x="66.8262%" y="334.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (107 samples, 0.15%)</title><rect x="67.3644%" y="340" width="0.1475%" height="15" fill="rgb(206,71,0)" fg:x="48883" fg:w="107"/><text x="67.6144%" y="350.50"></text></g><g><title>f_wrapped (autograd/tracer.py:37) (148 samples, 0.20%)</title><rect x="67.5849%" y="356" width="0.2040%" height="15" fill="rgb(233,118,54)" fg:x="49043" fg:w="148"/><text x="67.8349%" y="366.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:70) (1,428 samples, 1.97%)</title><rect x="66.7402%" y="324" width="1.9679%" height="15" fill="rgb(234,83,48)" fg:x="48430" fg:w="1428"/><text x="66.9902%" y="334.50">&lt;..</text></g><g><title>replace_zero (autograd/numpy/numpy_vjps.py:676) (868 samples, 1.20%)</title><rect x="67.5119%" y="340" width="1.1962%" height="15" fill="rgb(228,3,54)" fg:x="48990" fg:w="868"/><text x="67.7619%" y="350.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (660 samples, 0.91%)</title><rect x="67.7985%" y="356" width="0.9095%" height="15" fill="rgb(226,155,13)" fg:x="49198" fg:w="660"/><text x="68.0485%" y="366.50"></text></g><g><title>find_top_boxed_args (autograd/tracer.py:69) (146 samples, 0.20%)</title><rect x="69.1229%" y="356" width="0.2012%" height="15" fill="rgb(241,28,37)" fg:x="50159" fg:w="146"/><text x="69.3729%" y="366.50"></text></g><g><title>find_top_boxed_args (autograd/tracer.py:70) (277 samples, 0.38%)</title><rect x="69.3241%" y="356" width="0.3817%" height="15" fill="rgb(233,93,10)" fg:x="50305" fg:w="277"/><text x="69.5741%" y="366.50"></text></g><g><title>&lt;lambda&gt; (autograd/tracer.py:123) (134 samples, 0.18%)</title><rect x="69.5211%" y="372" width="0.1847%" height="15" fill="rgb(225,113,19)" fg:x="50448" fg:w="134"/><text x="69.7711%" y="382.50"></text></g><g><title>f_wrapped (autograd/tracer.py:37) (572 samples, 0.79%)</title><rect x="68.9575%" y="340" width="0.7883%" height="15" fill="rgb(241,2,18)" fg:x="50039" fg:w="572"/><text x="69.2075%" y="350.50"></text></g><g><title>untake (autograd/numpy/numpy_vjps.py:695) (85 samples, 0.12%)</title><rect x="69.9125%" y="356" width="0.1171%" height="15" fill="rgb(228,207,21)" fg:x="50732" fg:w="85"/><text x="70.1625%" y="366.50"></text></g><g><title>untake (autograd/numpy/numpy_vjps.py:697) (83 samples, 0.11%)</title><rect x="70.0296%" y="356" width="0.1144%" height="15" fill="rgb(213,211,35)" fg:x="50817" fg:w="83"/><text x="70.2796%" y="366.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (492 samples, 0.68%)</title><rect x="69.7650%" y="340" width="0.6780%" height="15" fill="rgb(209,83,10)" fg:x="50625" fg:w="492"/><text x="70.0150%" y="350.50"></text></g><g><title>untake (autograd/numpy/numpy_vjps.py:700) (217 samples, 0.30%)</title><rect x="70.1440%" y="356" width="0.2990%" height="15" fill="rgb(209,164,1)" fg:x="50900" fg:w="217"/><text x="70.3940%" y="366.50"></text></g><g><title>__init__ (autograd/numpy/numpy_vspaces.py:7) (76 samples, 0.10%)</title><rect x="70.8262%" y="372" width="0.1047%" height="15" fill="rgb(213,184,43)" fg:x="51395" fg:w="76"/><text x="71.0762%" y="382.50"></text></g><g><title>__init__ (autograd/numpy/numpy_vspaces.py:8) (146 samples, 0.20%)</title><rect x="70.9309%" y="372" width="0.2012%" height="15" fill="rgb(231,61,34)" fg:x="51471" fg:w="146"/><text x="71.1809%" y="382.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vspaces.py:58) (418 samples, 0.58%)</title><rect x="70.6429%" y="356" width="0.5760%" height="15" fill="rgb(235,75,3)" fg:x="51262" fg:w="418"/><text x="70.8929%" y="366.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vspaces.py:59) (415 samples, 0.57%)</title><rect x="71.2189%" y="356" width="0.5719%" height="15" fill="rgb(220,106,47)" fg:x="51680" fg:w="415"/><text x="71.4689%" y="366.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:701) (2,239 samples, 3.09%)</title><rect x="68.7081%" y="324" width="3.0855%" height="15" fill="rgb(210,196,33)" fg:x="49858" fg:w="2239"/><text x="68.9581%" y="334.50">&lt;la..</text></g><g><title>vspace (autograd/core.py:233) (966 samples, 1.33%)</title><rect x="70.4623%" y="340" width="1.3312%" height="15" fill="rgb(229,154,42)" fg:x="51131" fg:w="966"/><text x="70.7123%" y="350.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:81) (1,950 samples, 2.69%)</title><rect x="71.8418%" y="324" width="2.6872%" height="15" fill="rgb(228,114,26)" fg:x="52132" fg:w="1950"/><text x="72.0918%" y="334.50">&lt;l..</text></g><g><title>f_wrapped (autograd/tracer.py:48) (1,845 samples, 2.54%)</title><rect x="71.9865%" y="340" width="2.5425%" height="15" fill="rgb(208,144,1)" fg:x="52237" fg:w="1845"/><text x="72.2365%" y="350.50">f_..</text></g><g><title>vjp (legume/primitives.py:114) (326 samples, 0.45%)</title><rect x="74.6117%" y="324" width="0.4493%" height="15" fill="rgb(239,112,37)" fg:x="54142" fg:w="326"/><text x="74.8617%" y="334.50"></text></g><g><title>vjp (legume/primitives.py:130) (82 samples, 0.11%)</title><rect x="75.1437%" y="324" width="0.1130%" height="15" fill="rgb(210,96,50)" fg:x="54528" fg:w="82"/><text x="75.3937%" y="334.50"></text></g><g><title>vjp (legume/primitives.py:134) (253 samples, 0.35%)</title><rect x="75.2567%" y="324" width="0.3487%" height="15" fill="rgb(222,178,2)" fg:x="54610" fg:w="253"/><text x="75.5067%" y="334.50"></text></g><g><title>vjp (legume/primitives.py:135) (436 samples, 0.60%)</title><rect x="75.6053%" y="324" width="0.6008%" height="15" fill="rgb(226,74,18)" fg:x="54863" fg:w="436"/><text x="75.8553%" y="334.50"></text></g><g><title>vjp (legume/primitives.py:248) (206 samples, 0.28%)</title><rect x="76.3040%" y="324" width="0.2839%" height="15" fill="rgb(225,67,54)" fg:x="55370" fg:w="206"/><text x="76.5540%" y="334.50"></text></g><g><title>vjp (legume/primitives.py:287) (78 samples, 0.11%)</title><rect x="76.5879%" y="324" width="0.1075%" height="15" fill="rgb(251,92,32)" fg:x="55576" fg:w="78"/><text x="76.8379%" y="334.50"></text></g><g><title>&lt;lambda&gt; (autograd/core.py:67) (16,231 samples, 22.37%)</title><rect x="54.9521%" y="308" width="22.3675%" height="15" fill="rgb(228,149,22)" fg:x="39876" fg:w="16231"/><text x="55.2021%" y="318.50">&lt;lambda&gt; (autograd/core.py:67)</text></g><g><title>vjp (legume/primitives.py:41) (453 samples, 0.62%)</title><rect x="76.6954%" y="324" width="0.6243%" height="15" fill="rgb(243,54,13)" fg:x="55654" fg:w="453"/><text x="76.9454%" y="334.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:130) (166 samples, 0.23%)</title><rect x="77.6008%" y="324" width="0.2288%" height="15" fill="rgb(243,180,28)" fg:x="56311" fg:w="166"/><text x="77.8508%" y="334.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (111 samples, 0.15%)</title><rect x="77.6766%" y="340" width="0.1530%" height="15" fill="rgb(208,167,24)" fg:x="56366" fg:w="111"/><text x="77.9266%" y="350.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:131) (115 samples, 0.16%)</title><rect x="77.8295%" y="324" width="0.1585%" height="15" fill="rgb(245,73,45)" fg:x="56477" fg:w="115"/><text x="78.0795%" y="334.50"></text></g><g><title>tensordot (numpy/core/numeric.py:1108) (219 samples, 0.30%)</title><rect x="78.6123%" y="372" width="0.3018%" height="15" fill="rgb(237,203,48)" fg:x="57045" fg:w="219"/><text x="78.8623%" y="382.50"></text></g><g><title>tensordot (numpy/core/numeric.py:1116) (95 samples, 0.13%)</title><rect x="78.9692%" y="372" width="0.1309%" height="15" fill="rgb(211,197,16)" fg:x="57304" fg:w="95"/><text x="79.2192%" y="382.50"></text></g><g><title>tensordot (numpy/core/numeric.py:1121) (114 samples, 0.16%)</title><rect x="79.2186%" y="372" width="0.1571%" height="15" fill="rgb(243,99,51)" fg:x="57485" fg:w="114"/><text x="79.4686%" y="382.50"></text></g><g><title>dot_adjoint_0 (autograd/numpy/numpy_vjps.py:434) (945 samples, 1.30%)</title><rect x="78.1148%" y="356" width="1.3023%" height="15" fill="rgb(215,123,29)" fg:x="56684" fg:w="945"/><text x="78.3648%" y="366.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (985 samples, 1.36%)</title><rect x="78.0762%" y="340" width="1.3574%" height="15" fill="rgb(239,186,37)" fg:x="56656" fg:w="985"/><text x="78.3262%" y="350.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:453) (1,161 samples, 1.60%)</title><rect x="77.9963%" y="324" width="1.5999%" height="15" fill="rgb(252,136,39)" fg:x="56598" fg:w="1161"/><text x="78.2463%" y="334.50"></text></g><g><title>tensordot (numpy/core/numeric.py:1108) (161 samples, 0.22%)</title><rect x="80.0551%" y="372" width="0.2219%" height="15" fill="rgb(223,213,32)" fg:x="58092" fg:w="161"/><text x="80.3051%" y="382.50"></text></g><g><title>tensordot (numpy/core/numeric.py:1116) (125 samples, 0.17%)</title><rect x="80.3390%" y="372" width="0.1723%" height="15" fill="rgb(233,115,5)" fg:x="58298" fg:w="125"/><text x="80.5890%" y="382.50"></text></g><g><title>tensordot (numpy/core/numeric.py:1121) (95 samples, 0.13%)</title><rect x="80.5857%" y="372" width="0.1309%" height="15" fill="rgb(207,226,44)" fg:x="58477" fg:w="95"/><text x="80.8357%" y="382.50"></text></g><g><title>dot_adjoint_1 (autograd/numpy/numpy_vjps.py:447) (728 samples, 1.00%)</title><rect x="79.7423%" y="356" width="1.0032%" height="15" fill="rgb(208,126,0)" fg:x="57865" fg:w="728"/><text x="79.9923%" y="366.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (797 samples, 1.10%)</title><rect x="79.6968%" y="340" width="1.0983%" height="15" fill="rgb(244,66,21)" fg:x="57832" fg:w="797"/><text x="79.9468%" y="350.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:457) (951 samples, 1.31%)</title><rect x="79.5962%" y="324" width="1.3105%" height="15" fill="rgb(222,97,12)" fg:x="57759" fg:w="951"/><text x="79.8462%" y="334.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (206 samples, 0.28%)</title><rect x="80.9109%" y="340" width="0.2839%" height="15" fill="rgb(219,213,19)" fg:x="58713" fg:w="206"/><text x="81.1609%" y="350.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:533) (215 samples, 0.30%)</title><rect x="80.9068%" y="324" width="0.2963%" height="15" fill="rgb(252,169,30)" fg:x="58710" fg:w="215"/><text x="81.1568%" y="334.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:33) (595 samples, 0.82%)</title><rect x="81.5862%" y="340" width="0.8200%" height="15" fill="rgb(206,32,51)" fg:x="59203" fg:w="595"/><text x="81.8362%" y="350.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:34) (564 samples, 0.78%)</title><rect x="82.4061%" y="340" width="0.7772%" height="15" fill="rgb(250,172,42)" fg:x="59798" fg:w="564"/><text x="82.6561%" y="350.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:36) (149 samples, 0.21%)</title><rect x="83.1834%" y="340" width="0.2053%" height="15" fill="rgb(209,34,43)" fg:x="60362" fg:w="149"/><text x="83.4334%" y="350.50"></text></g><g><title>f_wrapped (autograd/tracer.py:60) (76 samples, 0.10%)</title><rect x="83.8683%" y="356" width="0.1047%" height="15" fill="rgb(223,11,35)" fg:x="60859" fg:w="76"/><text x="84.1183%" y="366.50"></text></g><g><title>&lt;lambda&gt; (autograd/tracer.py:124) (90 samples, 0.12%)</title><rect x="84.6028%" y="372" width="0.1240%" height="15" fill="rgb(251,219,26)" fg:x="61392" fg:w="90"/><text x="84.8528%" y="382.50"></text></g><g><title>unbroadcast (autograd/numpy/numpy_vjps.py:649) (934 samples, 1.29%)</title><rect x="83.5775%" y="340" width="1.2871%" height="15" fill="rgb(231,119,3)" fg:x="60648" fg:w="934"/><text x="83.8275%" y="350.50"></text></g><g><title>f_wrapped (autograd/tracer.py:61) (647 samples, 0.89%)</title><rect x="83.9730%" y="356" width="0.8916%" height="15" fill="rgb(216,97,11)" fg:x="60935" fg:w="647"/><text x="84.2230%" y="366.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2313) (388 samples, 0.53%)</title><rect x="85.0052%" y="372" width="0.5347%" height="15" fill="rgb(223,59,9)" fg:x="61684" fg:w="388"/><text x="85.2552%" y="382.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:88) (283 samples, 0.39%)</title><rect x="85.1499%" y="388" width="0.3900%" height="15" fill="rgb(233,93,31)" fg:x="61789" fg:w="283"/><text x="85.3999%" y="398.50"></text></g><g><title>unbroadcast (autograd/numpy/numpy_vjps.py:650) (491 samples, 0.68%)</title><rect x="84.8646%" y="340" width="0.6766%" height="15" fill="rgb(239,81,33)" fg:x="61582" fg:w="491"/><text x="85.1146%" y="350.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (434 samples, 0.60%)</title><rect x="84.9432%" y="356" width="0.5981%" height="15" fill="rgb(213,120,34)" fg:x="61639" fg:w="434"/><text x="85.1932%" y="366.50"></text></g><g><title>unbroadcast (autograd/numpy/numpy_vjps.py:651) (124 samples, 0.17%)</title><rect x="85.5412%" y="340" width="0.1709%" height="15" fill="rgb(243,49,53)" fg:x="62073" fg:w="124"/><text x="85.7912%" y="350.50"></text></g><g><title>f_wrapped (autograd/tracer.py:37) (132 samples, 0.18%)</title><rect x="85.8610%" y="356" width="0.1819%" height="15" fill="rgb(247,216,33)" fg:x="62305" fg:w="132"/><text x="86.1110%" y="366.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:72) (272 samples, 0.37%)</title><rect x="86.6148%" y="388" width="0.3748%" height="15" fill="rgb(226,26,14)" fg:x="62852" fg:w="272"/><text x="86.8648%" y="398.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py:73) (88 samples, 0.12%)</title><rect x="86.8683%" y="404" width="0.1213%" height="15" fill="rgb(215,49,53)" fg:x="63036" fg:w="88"/><text x="87.1183%" y="414.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2313) (1,355 samples, 1.87%)</title><rect x="86.3515%" y="372" width="1.8673%" height="15" fill="rgb(245,162,40)" fg:x="62661" fg:w="1355"/><text x="86.6015%" y="382.50">s..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:88) (856 samples, 1.18%)</title><rect x="87.0392%" y="388" width="1.1796%" height="15" fill="rgb(229,68,17)" fg:x="63160" fg:w="856"/><text x="87.2892%" y="398.50"></text></g><g><title>unbroadcast (autograd/numpy/numpy_vjps.py:653) (1,808 samples, 2.49%)</title><rect x="85.7342%" y="340" width="2.4916%" height="15" fill="rgb(213,182,10)" fg:x="62213" fg:w="1808"/><text x="85.9842%" y="350.50">un..</text></g><g><title>f_wrapped (autograd/tracer.py:48) (1,573 samples, 2.17%)</title><rect x="86.0580%" y="356" width="2.1677%" height="15" fill="rgb(245,125,30)" fg:x="62448" fg:w="1573"/><text x="86.3080%" y="366.50">f..</text></g><g><title>&lt;lambda&gt; (autograd/tracer.py:124) (111 samples, 0.15%)</title><rect x="89.0526%" y="372" width="0.1530%" height="15" fill="rgb(232,202,2)" fg:x="64621" fg:w="111"/><text x="89.3026%" y="382.50"></text></g><g><title>unbroadcast (autograd/numpy/numpy_vjps.py:654) (923 samples, 1.27%)</title><rect x="88.2257%" y="340" width="1.2720%" height="15" fill="rgb(237,140,51)" fg:x="64021" fg:w="923"/><text x="88.4757%" y="350.50"></text></g><g><title>f_wrapped (autograd/tracer.py:61) (682 samples, 0.94%)</title><rect x="88.5578%" y="356" width="0.9398%" height="15" fill="rgb(236,157,25)" fg:x="64262" fg:w="682"/><text x="88.8078%" y="366.50"></text></g><g><title>iscomplexobj (numpy/lib/type_check.py:340) (76 samples, 0.10%)</title><rect x="89.3930%" y="372" width="0.1047%" height="15" fill="rgb(219,209,0)" fg:x="64868" fg:w="76"/><text x="89.6430%" y="382.50"></text></g><g><title>unbroadcast (autograd/numpy/numpy_vjps.py:655) (121 samples, 0.17%)</title><rect x="89.4977%" y="340" width="0.1667%" height="15" fill="rgb(240,116,54)" fg:x="64944" fg:w="121"/><text x="89.7477%" y="350.50"></text></g><g><title>backward_pass (autograd/core.py:21) (26,005 samples, 35.84%)</title><rect x="53.8455%" y="292" width="35.8368%" height="15" fill="rgb(216,10,36)" fg:x="39073" fg:w="26005"/><text x="54.0955%" y="302.50">backward_pass (autograd/core.py:21)</text></g><g><title>&lt;lambda&gt; (autograd/core.py:78) (8,971 samples, 12.36%)</title><rect x="77.3196%" y="308" width="12.3627%" height="15" fill="rgb(222,72,44)" fg:x="56107" fg:w="8971"/><text x="77.5696%" y="318.50">&lt;lambda&gt; (autograd..</text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:660) (6,096 samples, 8.40%)</title><rect x="81.2816%" y="324" width="8.4007%" height="15" fill="rgb(232,159,9)" fg:x="58982" fg:w="6096"/><text x="81.5316%" y="334.50">&lt;lambda&gt; (au..</text></g><g><title>backward_pass (autograd/core.py:22) (1,547 samples, 2.13%)</title><rect x="89.6824%" y="292" width="2.1319%" height="15" fill="rgb(210,39,32)" fg:x="65078" fg:w="1547"/><text x="89.9324%" y="302.50">b..</text></g><g><title>&lt;genexpr&gt; (autograd/core.py:49) (203 samples, 0.28%)</title><rect x="91.5345%" y="308" width="0.2797%" height="15" fill="rgb(216,194,45)" fg:x="66422" fg:w="203"/><text x="91.7845%" y="318.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:681) (98 samples, 0.14%)</title><rect x="91.6792%" y="324" width="0.1351%" height="15" fill="rgb(218,18,35)" fg:x="66527" fg:w="98"/><text x="91.9292%" y="334.50"></text></g><g><title>add_outgrads (autograd/core.py:159) (216 samples, 0.30%)</title><rect x="93.0421%" y="308" width="0.2977%" height="15" fill="rgb(207,83,51)" fg:x="67516" fg:w="216"/><text x="93.2921%" y="318.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vspaces.py:59) (89 samples, 0.12%)</title><rect x="93.8193%" y="340" width="0.1226%" height="15" fill="rgb(225,63,43)" fg:x="68080" fg:w="89"/><text x="94.0693%" y="350.50"></text></g><g><title>add_outgrads (autograd/core.py:161) (429 samples, 0.59%)</title><rect x="93.4280%" y="308" width="0.5912%" height="15" fill="rgb(207,57,36)" fg:x="67796" fg:w="429"/><text x="93.6780%" y="318.50"></text></g><g><title>vspace (autograd/core.py:233) (374 samples, 0.52%)</title><rect x="93.5038%" y="324" width="0.5154%" height="15" fill="rgb(216,99,33)" fg:x="67851" fg:w="374"/><text x="93.7538%" y="334.50"></text></g><g><title>find_top_boxed_args (autograd/tracer.py:69) (146 samples, 0.20%)</title><rect x="94.3595%" y="340" width="0.2012%" height="15" fill="rgb(225,42,16)" fg:x="68472" fg:w="146"/><text x="94.6095%" y="350.50"></text></g><g><title>find_top_boxed_args (autograd/tracer.py:70) (190 samples, 0.26%)</title><rect x="94.5607%" y="340" width="0.2618%" height="15" fill="rgb(220,201,45)" fg:x="68618" fg:w="190"/><text x="94.8107%" y="350.50"></text></g><g><title>&lt;lambda&gt; (autograd/tracer.py:123) (97 samples, 0.13%)</title><rect x="94.6889%" y="356" width="0.1337%" height="15" fill="rgb(225,33,4)" fg:x="68711" fg:w="97"/><text x="94.9389%" y="366.50"></text></g><g><title>f_wrapped (autograd/tracer.py:37) (435 samples, 0.60%)</title><rect x="94.2520%" y="324" width="0.5995%" height="15" fill="rgb(224,33,50)" fg:x="68394" fg:w="435"/><text x="94.5020%" y="334.50"></text></g><g><title>mut_add (autograd/numpy/numpy_vjps.py:698) (2,023 samples, 2.79%)</title><rect x="95.1202%" y="356" width="2.7878%" height="15" fill="rgb(246,198,51)" fg:x="69024" fg:w="2023"/><text x="95.3702%" y="366.50">mu..</text></g><g><title>add_outgrads (autograd/core.py:165) (2,785 samples, 3.84%)</title><rect x="94.0770%" y="308" width="3.8379%" height="15" fill="rgb(205,22,4)" fg:x="68267" fg:w="2785"/><text x="94.3270%" y="318.50">add_..</text></g><g><title>f_wrapped (autograd/tracer.py:48) (2,211 samples, 3.05%)</title><rect x="94.8680%" y="324" width="3.0469%" height="15" fill="rgb(206,3,8)" fg:x="68841" fg:w="2211"/><text x="95.1180%" y="334.50">f_w..</text></g><g><title>sparse_add (autograd/core.py:186) (2,111 samples, 2.91%)</title><rect x="95.0059%" y="340" width="2.9091%" height="15" fill="rgb(251,23,15)" fg:x="68941" fg:w="2111"/><text x="95.2559%" y="350.50">sp..</text></g><g><title>f_wrapped (autograd/tracer.py:37) (80 samples, 0.11%)</title><rect x="97.9549%" y="324" width="0.1102%" height="15" fill="rgb(252,88,28)" fg:x="71081" fg:w="80"/><text x="98.2049%" y="334.50"></text></g><g><title>add_outgrads (autograd/core.py:167) (263 samples, 0.36%)</title><rect x="97.9150%" y="308" width="0.3624%" height="15" fill="rgb(212,127,14)" fg:x="71052" fg:w="263"/><text x="98.1650%" y="318.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (148 samples, 0.20%)</title><rect x="98.0735%" y="324" width="0.2040%" height="15" fill="rgb(247,145,37)" fg:x="71167" fg:w="148"/><text x="98.3235%" y="334.50"></text></g><g><title>mut_add (autograd/core.py:202) (130 samples, 0.18%)</title><rect x="98.0983%" y="340" width="0.1791%" height="15" fill="rgb(209,117,53)" fg:x="71185" fg:w="130"/><text x="98.3483%" y="350.50"></text></g><g><title>_mut_add (autograd/core.py:213) (115 samples, 0.16%)</title><rect x="98.1189%" y="356" width="0.1585%" height="15" fill="rgb(212,90,42)" fg:x="71200" fg:w="115"/><text x="98.3689%" y="366.50"></text></g><g><title>add_outgrads (autograd/core.py:171) (90 samples, 0.12%)</title><rect x="98.3560%" y="308" width="0.1240%" height="15" fill="rgb(218,164,37)" fg:x="71372" fg:w="90"/><text x="98.6060%" y="318.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (84 samples, 0.12%)</title><rect x="98.3642%" y="324" width="0.1158%" height="15" fill="rgb(246,65,34)" fg:x="71378" fg:w="84"/><text x="98.6142%" y="334.50"></text></g><g><title>sparse_add (autograd/core.py:186) (79 samples, 0.11%)</title><rect x="98.3711%" y="340" width="0.1089%" height="15" fill="rgb(231,100,33)" fg:x="71383" fg:w="79"/><text x="98.6211%" y="350.50"></text></g><g><title>mut_add (autograd/numpy/numpy_vjps.py:698) (77 samples, 0.11%)</title><rect x="98.3739%" y="356" width="0.1061%" height="15" fill="rgb(228,126,14)" fg:x="71385" fg:w="77"/><text x="98.6239%" y="366.50"></text></g><g><title>f_wrapped (autograd/tracer.py:37) (79 samples, 0.11%)</title><rect x="98.5337%" y="324" width="0.1089%" height="15" fill="rgb(215,173,21)" fg:x="71501" fg:w="79"/><text x="98.7837%" y="334.50"></text></g><g><title>add_outgrads (autograd/core.py:173) (364 samples, 0.50%)</title><rect x="98.4800%" y="308" width="0.5016%" height="15" fill="rgb(210,6,40)" fg:x="71462" fg:w="364"/><text x="98.7300%" y="318.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (244 samples, 0.34%)</title><rect x="98.6454%" y="324" width="0.3363%" height="15" fill="rgb(212,48,18)" fg:x="71582" fg:w="244"/><text x="98.8954%" y="334.50"></text></g><g><title>add (autograd/core.py:204) (223 samples, 0.31%)</title><rect x="98.6743%" y="340" width="0.3073%" height="15" fill="rgb(230,214,11)" fg:x="71603" fg:w="223"/><text x="98.9243%" y="350.50"></text></g><g><title>_add (autograd/core.py:212) (206 samples, 0.28%)</title><rect x="98.6977%" y="356" width="0.2839%" height="15" fill="rgb(254,105,39)" fg:x="71620" fg:w="206"/><text x="98.9477%" y="366.50"></text></g><g><title>sparse_add (autograd/core.py:185) (100 samples, 0.14%)</title><rect x="99.1470%" y="340" width="0.1378%" height="15" fill="rgb(245,158,5)" fg:x="71946" fg:w="100"/><text x="99.3970%" y="350.50"></text></g><g><title>mut_add (autograd/numpy/numpy_vjps.py:698) (309 samples, 0.43%)</title><rect x="99.3785%" y="356" width="0.4258%" height="15" fill="rgb(249,208,11)" fg:x="72114" fg:w="309"/><text x="99.6285%" y="366.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (492 samples, 0.68%)</title><rect x="99.1277%" y="324" width="0.6780%" height="15" fill="rgb(210,39,28)" fg:x="71932" fg:w="492"/><text x="99.3777%" y="334.50"></text></g><g><title>sparse_add (autograd/core.py:186) (378 samples, 0.52%)</title><rect x="99.2848%" y="340" width="0.5209%" height="15" fill="rgb(211,56,53)" fg:x="72046" fg:w="378"/><text x="99.5348%" y="350.50"></text></g><g><title>add_outgrads (autograd/core.py:176) (604 samples, 0.83%)</title><rect x="99.0105%" y="308" width="0.8324%" height="15" fill="rgb(226,201,30)" fg:x="71847" fg:w="604"/><text x="99.2605%" y="318.50"></text></g><g><title>__init__ (scipy/optimize/_differentiable_functions.py:438) (50,029 samples, 68.94%)</title><rect x="31.0549%" y="180" width="68.9437%" height="15" fill="rgb(239,101,34)" fg:x="22535" fg:w="50029"/><text x="31.3049%" y="190.50">__init__ (scipy/optimize/_differentiable_functions.py:438)</text></g><g><title>wrapped (optomization/constraints.py:96) (50,029 samples, 68.94%)</title><rect x="31.0549%" y="196" width="68.9437%" height="15" fill="rgb(226,209,5)" fg:x="22535" fg:w="50029"/><text x="31.3049%" y="206.50">wrapped (optomization/constraints.py:96)</text></g><g><title>nary_f (autograd/wrap_util.py:20) (50,029 samples, 68.94%)</title><rect x="31.0549%" y="212" width="68.9437%" height="15" fill="rgb(250,105,47)" fg:x="22535" fg:w="50029"/><text x="31.3049%" y="222.50">nary_f (autograd/wrap_util.py:20)</text></g><g><title>jacobian (autograd/differential_operators.py:64) (36,871 samples, 50.81%)</title><rect x="49.1876%" y="228" width="50.8110%" height="15" fill="rgb(230,72,3)" fg:x="35693" fg:w="36871"/><text x="49.4376%" y="238.50">jacobian (autograd/differential_operators.py:64)</text></g><g><title>stack (autograd/numpy/numpy_wrapper.py:88) (36,871 samples, 50.81%)</title><rect x="49.1876%" y="244" width="50.8110%" height="15" fill="rgb(232,218,39)" fg:x="35693" fg:w="36871"/><text x="49.4376%" y="254.50">stack (autograd/numpy/numpy_wrapper.py:88)</text></g><g><title>&lt;listcomp&gt; (autograd/numpy/numpy_wrapper.py:88) (36,871 samples, 50.81%)</title><rect x="49.1876%" y="260" width="50.8110%" height="15" fill="rgb(248,166,6)" fg:x="35693" fg:w="36871"/><text x="49.4376%" y="270.50">&lt;listcomp&gt; (autograd/numpy/numpy_wrapper.py:88)</text></g><g><title>vjp (autograd/core.py:14) (36,871 samples, 50.81%)</title><rect x="49.1876%" y="276" width="50.8110%" height="15" fill="rgb(247,89,20)" fg:x="35693" fg:w="36871"/><text x="49.4376%" y="286.50">vjp (autograd/core.py:14)</text></g><g><title>backward_pass (autograd/core.py:23) (5,939 samples, 8.18%)</title><rect x="91.8142%" y="292" width="8.1844%" height="15" fill="rgb(248,130,54)" fg:x="66625" fg:w="5939"/><text x="92.0642%" y="302.50">backward_pa..</text></g><g><title>add_outgrads (autograd/core.py:178) (113 samples, 0.16%)</title><rect x="99.8429%" y="308" width="0.1557%" height="15" fill="rgb(234,196,4)" fg:x="72451" fg:w="113"/><text x="100.0929%" y="318.50"></text></g><g><title>all (72,565 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(250,143,31)" fg:x="0" fg:w="72565"/><text x="0.2500%" y="62.50"></text></g><g><title>&lt;module&gt; (timetester.py:63) (71,730 samples, 98.85%)</title><rect x="1.1507%" y="68" width="98.8493%" height="15" fill="rgb(211,110,34)" fg:x="835" fg:w="71730"/><text x="1.4007%" y="78.50">&lt;module&gt; (timetester.py:63)</text></g><g><title>worker_function (timetester.py:46) (71,730 samples, 98.85%)</title><rect x="1.1507%" y="84" width="98.8493%" height="15" fill="rgb(215,124,48)" fg:x="835" fg:w="71730"/><text x="1.4007%" y="94.50">worker_function (timetester.py:46)</text></g><g><title>minimize (optomization/minimize.py:310) (69,074 samples, 95.19%)</title><rect x="4.8109%" y="100" width="95.1891%" height="15" fill="rgb(216,46,13)" fg:x="3491" fg:w="69074"/><text x="5.0609%" y="110.50">minimize (optomization/minimize.py:310)</text></g><g><title>minimize (scipy/optimize/_minimize.py:756) (69,074 samples, 95.19%)</title><rect x="4.8109%" y="116" width="95.1891%" height="15" fill="rgb(205,184,25)" fg:x="3491" fg:w="69074"/><text x="5.0609%" y="126.50">minimize (scipy/optimize/_minimize.py:756)</text></g><g><title>_minimize_trustregion_constr (scipy/optimize/_trustregion_constr/minimize_trustregion_constr.py:353) (52,794 samples, 72.75%)</title><rect x="27.2459%" y="132" width="72.7541%" height="15" fill="rgb(228,1,10)" fg:x="19771" fg:w="52794"/><text x="27.4959%" y="142.50">_minimize_trustregion_constr (scipy/optimize/_trustregion_constr/minimize_trustregion_constr.py:353)</text></g><g><title>&lt;listcomp&gt; (scipy/optimize/_trustregion_constr/minimize_trustregion_constr.py:354) (52,794 samples, 72.75%)</title><rect x="27.2459%" y="148" width="72.7541%" height="15" fill="rgb(213,116,27)" fg:x="19771" fg:w="52794"/><text x="27.4959%" y="158.50">&lt;listcomp&gt; (scipy/optimize/_trustregion_constr/minimize_trustregion_constr.py:354)</text></g><g><title>__init__ (scipy/optimize/_constraints.py:342) (52,794 samples, 72.75%)</title><rect x="27.2459%" y="164" width="72.7541%" height="15" fill="rgb(241,95,50)" fg:x="19771" fg:w="52794"/><text x="27.4959%" y="174.50">__init__ (scipy/optimize/_constraints.py:342)</text></g></svg></svg>